#ENCODE BY : MR. EX
#TEAM : DARK FORCE - 71
#GITHUB : EX-OFFICIAL
import base64
exec(base64.b64decode(b'Iy0tLS0tLS0tLS0tLS0tLS0tLVsgSU1QT1JUIE1PRFVMRSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKaW1wb3J0IHJlcXVlc3RzLGJzNCxqc29uLG9zLHN5cyxyYW5kb20sZGF0ZXRpbWUsdGltZSxyZSx1cmxsaWIzLHJpY2gsYmFzZTY0LHN1YnByb2Nlc3MsdXVpZApmcm9tIHRpbWUgaW1wb3J0IHNsZWVwCmZyb20gcmljaCBpbXBvcnQgcHJldHR5CmZyb20gcmljaC50cmVlIGltcG9ydCBUcmVlCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwKZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBjZXRhawpmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIHJwcmludApmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIHByaW50cwpmcm9tIHJpY2gucHJvZ3Jlc3MgaW1wb3J0IHRyYWNrCmZyb20gcmljaC50ZXh0IGltcG9ydCBUZXh0IGFzIHRla3oKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUKZnJvbSByaWNoLnRleHQgaW1wb3J0IFRleHQKZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMKZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbCBhcyBuZWwKZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbCBhcyBwYW5lbApmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBzb3AKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgcGFyCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBHcm91cCBhcyBncApmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBwYXJzZXIKZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMgYXMgY29sCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBDb25zb2xlIGFzIHNvbApmcm9tIHJpY2gubWFya2Rvd24gaW1wb3J0IE1hcmtkb3duIGFzIG1hcmsKZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyB0cmVkCmZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IgYXMgQnJheWVubm5YRCAKZnJvbSByaWNoLnByb2dyZXNzIGltcG9ydCBQcm9ncmVzcyxTcGlubmVyQ29sdW1uLEJhckNvbHVtbixUZXh0Q29sdW1uCiMtLS0tLS0tLS0tLS0tLS0tLS1bICBNT0RVTEUgIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwp0cnk6CiAgICAgICAgaW1wb3J0IHJpY2gKZXhjZXB0IEltcG9ydEVycm9yOgogICAgICAgIGNldGFrKG5lbCgnXHRb4oCiXSBTZWRhbmcgTWVuZ2luc3RhbGwgTW9kdWwgUmljaCBb4oCiXScpKQogICAgICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgcmljaCcpCnRyeToKICAgICAgICBpbXBvcnQgc3RkaW9tYXNrCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICBjZXRhayhuZWwoJ1x0W+KAol0gU2VkYW5nIE1lbmdpbnN0YWxsIE1vZHVsIFN0ZGlvbWFzayBb4oCiXScpKQogICAgICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgc3RkaW9tYXNrJykKdHJ5OgoJaW1wb3J0IHJlcXVlc3RzCmV4Y2VwdCBJbXBvcnRFcnJvcjoKCWNldGFrKG5lbCgnXHRb4oCiXSBTZWRhbmcgTWVuZ2luc3RhbGwgTW9kdWwgUmVxdWVzdHMgW+KAol0nKSkKCW9zLnN5c3RlbSgncGlwIGluc3RhbGwgcmVxdWVzdHMgJiYgcGlwIGluc3RhbGwgbWVjaGFuaXplICcpCnRyeToKCWltcG9ydCByZXF1ZXN0cwoJZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyBUaHJlYWRQb29sCglpbXBvcnQgbWVjaGFuaXplCglmcm9tIHJlcXVlc3RzLmV4Y2VwdGlvbnMgaW1wb3J0IENvbm5lY3Rpb25FcnJvcgpleGNlcHQgTW9kdWxlTm90Rm91bmRFcnJvcjoKCW9zLnN5c3RlbSgnY2xlYXInKQojLS0tLS0tLS0tLS0tLS0tLS0tWyBHTE9CQUwgTkFNRSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKcHJldHR5Lmluc3RhbGwoKQpDT049c29sKCkKd2EgPSBDb25zb2xlKCkKdGFwbGlrYXNpPVtdCmdhYnJpZWw9W10KdWlkbCA9W10Kb3BzaT1bXQp1aWRmPVtdCmNvbnNvbGUgPSBDb25zb2xlKCkKc2VzPXJlcXVlc3RzLlNlc3Npb24oKQppZCxpZDIsbG9vcCxvayxjcCxha3VuLG9wcmVrLGxpc2Vuc2lrdSx0b2tlbmt1LHVpZCxsaXNlbnNpa3VuaSxtZXRob2QscHdwbHVzcyxwd255YT0gW10sW10sMCwwLDAsW10sW10sW10sW10sW10sW10sW10sW10sW10KdWdlbjIsdWdlbixkaWEsY29rYnJ1dCxkdW1wLG1lbWVrLHVhbHUsdWFsdWgsbGlzZW5zaWt1bmksbGlzZW5zaWt1LHByaW5jcD1bXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXSxbXQpzeXMuc3Rkb3V0LndyaXRlKCdceDFiXTI7IEFNQkYgfCBBWE9NOTU5IE11bHRpIEJydXRlIEZhY2Vib29rXHgwNycpCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFVTRVItQUdFTlQgXS0tLS0tLS0tLS0tLS0tLS0tLS0jCnRyeToKCXByb3g9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9hcGkucHJveHlzY3JhcGUuY29tL3YyLz9yZXF1ZXN0PWRpc3BsYXlwcm94aWVzJnByb3RvY29sPXNvY2tzNCZ0aW1lb3V0PTgwMDAwJmNvdW50cnk9YWxsJnNzbD1hbGwmYW5vbnltaXR5PWFsbCcpLnRleHQKCW9wZW4oJy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KQpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CglwcmludCgnIFvigKJdIEtvbmVrc2kgSW50ZXJuZXQgQW5kYSBUaWRhayBUZXJkZXRla3NpIFNpbGFoa2FuIENlayBLdW90YSBBbmRhIFlhIFNhbGFtIERhcmkgQnJheWVubm5YRCcpO2V4aXQoKQpwcm94PW9wZW4oJy5wcm94LnR4dCcsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6CglhPSdNb3ppbGxhLzUuMCAoTGludXg7IFRpemVuJwoJYj1yYW5kb20ucmFuZHJhbmdlKDEsIDkpCgljPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkKCWQ9J1NBTVNVTkcgU00tUjgzNUYpJwoJZT1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkKCWY9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFNhbXN1bmdCcm93c2VyLzIuMCBDaHJvbWUvJwoJZz1yYW5kb20ucmFuZHJhbmdlKDEsIDkpCgloPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkKCWk9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQoJaj1yYW5kb20ucmFuZHJhbmdlKDEsIDQpCglrPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicKCXVha3U9KGYne2F9e2J9LntjfSB7ZH17ZX17Zn17Z30ue2h9LntpfS57an0ge2t9JykKCXVnZW4yLmFwcGVuZCh1YWt1KQoKIy0tLS0tLS0tLS0tLVsgVUJBSCBVQSBESUggU0lOSSBPTSBdLS0tLS0tLS0tLS0tLS0tIwpmb3IgYnJheWVuIGluIHJhbmdlKDEwMDAwKToKICAgIHJyID0gcmFuZG9tLnJhbmRpbnQKICAgIHJjID0gcmFuZG9tLmNob2ljZQogICAgZzEgPSByYW5kb20uY2hvaWNlKFsnMDEnLCcwMicsJzAzJywnMDQnLCcwNScsJzA2JywnMDcnLCcwOCcsJzA5JywnMTAnLCcxMScsJzEyJywnMTMnLCcxNCcsJzE1JywnMTYnLCcxNycsJzE4JywnMTknXSkKICAgIGcyID0gcmFuZG9tLmNob2ljZShbJ05SRDkwTScsJ0xNWTQ4QicsJ1IxNk5XJywnTFJYMjFNJywnUEtRMScsJ0tPVDQ5SCcsJ0xNWTQ3SScsJ1NLUTEnLCdOR0k3N0InXSkKICAgIGczID0gcmFuZG9tLmNob2ljZShbJ0xlbm92byBUQjMtNzEwRicsJ1NNLUc5MjVXOCcsJ1NNLVQ3MTVZJywnU00tRzkwMFc4JywnU00tRzkzNUYnLCdOZXh1cyA2JywnS0IyMDAxJywnU00tSjMzMEYnLCdTTS1HOTY1RiddKQogICAgZzQgPSByYW5kb20uY2hvaWNlKFsiQ1BIMTg2OSIsICJDUEgxOTI5IiwiQ1BIMjEwNyIsICJDUEgyMjM4IiwgIkNQSDIzODkiLCJDUEgyNDAxIiwgIkNQSDI0MDciLCAiQ1BIMjQxMyIsICJDUEgyNDE1IiwgIkNQSDI0MTciLCAiQ1BIMjQxOSIsICJDUEgyNDU1IiwgIkNQSDI0NTkiLCAiQ1BIMjQ2MSIsICJDUEgyNDcxIiwgIkNQSDI0NzMiLCAiQ1BIMjQ3NyIsICJDUEg4ODkzIiwgIkNQSDIzMjEiLCAiQ1BIMjM0MSIsICJDUEgyMzczIiwgIkNQSDIwODMiLCAiQ1BIMjA3MSIsICJDUEgyMDc3IiwgIkNQSDIxODUiLCAiQ1BIMjE3OSIsICJDUEgyMjY5IiwgIkNQSDI0MjEiLCAiQ1BIMjM0OSIsICJDUEgyMjcxIiwgIkNQSDE5MjMiLCAiQ1BIMTkyNSIsICJDUEgxODM3IiwgIkNQSDIwMTUiLCAiQ1BIMjA3MyIsICJDUEgyMDgxIiwgIkNQSDIwMjkiLCAiQ1BIMjAzMSIsICJDUEgyMTM3IiwgIkNQSDE2MDUiLCAiQ1BIMTgwMyIsICJDUEgxODUzIiwgIkNQSDE4MDUiLCAiQ1BIMTgwOSIsICJDUEgxODUxIiwgIkNQSDE5MzEiLCAiQ1BIMTk1OSIsICJDUEgxOTMzIiwgIkNQSDE5MzUiLCAiQ1BIMTk0MyIsICJDUEgyMDYxIiwgIkNQSDIwNjkiLCAiQ1BIMjEyNyIsICJDUEgyMTMxIiwgIkNQSDIxMzkiLCAiQ1BIMjEzNSIsICJDUEgyMjM5IiwgIkNQSDIxOTUiLCAiQ1BIMjI3MyIsICJDUEgyMzI1IiwgIkNQSDIzMDkiLCAiQ1BIMTcwMSIsICJDUEgyMzg3IiwgIkNQSDE5MDkiLCAiQ1BIMTkyMCIsICJDUEgxOTEyIiwgIkNQSDE5MDEiLCAiQ1BIMTkwMyIsICJDUEgxOTA1IiwgIkNQSDE3MTciLCAiQ1BIMTgwMSIsICJDUEgyMDY3IiwgIkNQSDIwOTkiLCAiQ1BIMjE2MSIsICJDUEgyMjE5IiwgIkNQSDIxOTciLCAiQ1BIMjI2MyIsICJDUEgyMzc1IiwgIkNQSDIzMzkiLCAiQ1BIMTcxNSIsICJDUEgyMzg1IiwgIkNQSDE3MjkiLCAiQ1BIMTgyNyIsICJDUEgxOTM4IiwgIkNQSDE5MzciLCAiQ1BIMTkzOSIsICJDUEgxOTQxIiwgIkNQSDIwMDEiLCAiQ1BIMjAyMSIsICJDUEgyMDU5IiwgIkNQSDIxMjEiLCAiQ1BIMjEyMyIsICJDUEgyMjAzIiwgIkNQSDIzMzMiLCAiQ1BIMjM2NSIsICJDUEgxOTEzIiwgIkNQSDE5MTEiLCAiQ1BIMTkxNSIsICJDUEgxOTY5IiwgIkNQSDIyMDkiLCAiQ1BIMTk4NyIsICJDUEgyMDk1IiwgIkNQSDIxMTkiLCAiQ1BIMjI4NSIsICJDUEgyMjEzIiwgIkNQSDIyMjMiLCAiQ1BIMjM2MyIsICJDUEgxNjA5IiwgIkNQSDE2MTMiLCAiQ1BIMTcyMyIsICJDUEgxNzI3IiwgIkNQSDE3MjUiLCAiQ1BIMTgxOSIsICJDUEgxODIxIiwgIkNQSDE4MjUiLCAiQ1BIMTg4MSIsICJDUEgxODIzIiwgIkNQSDE4NzEiLCAiQ1BIMTg3NSIsICJDUEgyMDIzIiwgIkNQSDIwMDUiLCAiQ1BIMjAyNSIsICJDUEgyMjA3IiwgIkNQSDIxNzMiLCAiQ1BIMjMwNyIsICJDUEgyMzA1IiwgIkNQSDIzMzciLCAiQ1BIMTk1NSIsICJDUEgxNzA3IiwgIkNQSDE3MTkiLCAiQ1BIMTcyMSIsICJDUEgxODM1IiwgIkNQSDE4MzEiLCAiQ1BIMTgzMyIsICJDUEgxODc5IiwgIkNQSDE4OTMiLCAiQ1BIMTg3NyIsICJDUEgxNjA3IiwgIkNQSDE2MTEiLCAiQ1BIMTkxNyIsICJDUEgxOTE5IiwgIkNQSDE5MDciLCAiQ1BIMTk4OSIsICJDUEgxOTQ1IiwgIkNQSDE5NTEiLCAiQ1BIMjA0MyIsICJDUEgyMDM1IiwgIkNQSDIwMzciLCAiQ1BIMjAzNiIsICJDUEgyMDA5IiwgIkNQSDIwMTMiLCAiQ1BIMjExMyIsICJDUEgyMDkxIiwgIkNQSDIxMjUiLCAiQ1BIMjEwOSIsICJDUEgyMDg5IiwgIkNQSDIwNjUiLCAiQ1BIMjE1OSIsICJDUEgyMTQ1IiwgIkNQSDIyMDUiLCAiQ1BIMjIwMSIsICJDUEgyMTk5IiwgIkNQSDIyMTciLCAiQ1BIMTkyMSIsICJDUEgyMjExIiwgIkNQSDIyMzUiLCAiQ1BIMjI1MSIsICJDUEgyMjQ5IiwgIkNQSDIyNDciLCAiQ1BIMjIzNyIsICJDUEgyMzcxIiwgIkNQSDIyOTMiLCAiQ1BIMjM1MyIsICJDUEgyMzQzIiwgIkNQSDIzNTkiLCAiQ1BIMjM1NyIsICJDUEgyNDU3IiwgIkNQSDE5ODMiLCAiQ1BIMTk3OSJdKQogICAgZzUgPSByYW5kb20uY2hvaWNlKFsiMjIwMTExNlNJIiwgIk0yMDEySzExQUkiLCAiMjIwMTExMTlUSSIsICIyMTA5MTExNlVJIiwgIk0yMTAySzFBQyIsICJNMjAxMksxMUkiLCAiMjIwNDEyMTlJIiwgIjIyMDQxMjE2SSIsICIyMjAzMTIxQyIsICIyMTA2MTE4QyIsICIyMjAxMTIzRyIsICIyMjAzMTI5RyIsICIyMjAxMTIyRyIsICIyMjAxMTIyQyIsICIyMjA2MTIyU0MiLCAiMjIwODEyMTJDIiwgIjIxMTIxMjNBRyIsICIyMTEyMTIzQUMiLCAiMjEwOTExOUJDIiwgIk0yMDAySjlHIiwgIk0yMDA3SjFTQyIsICJNMjAwN0oxN0kiLCAiTTIxMDJKMlNDIiwgIk0yMDA3SjNTWSIsICJNMjAwN0oxN0ciLCAiTTIwMDdKM1NHIiwgIk0yMDExSzJHIiwgIk0yMTAxSzlBRyAiLCAiTTIxMDFLOVIiLCAiMjEwOTExOURHIiwgIk0yMTAxSzlHIiwgIjIxMDkxMTlESSIsICJNMjAxMksxMUciLCAiTTIxMDJLMUciLCAiMjEwODExMTFSRyIsICIyMTA3MTEzU0ciLCAiMjEwNTExODJHIiwgIk0yMTA1SzgxQUMiLCAiTTIxMDVLODFDIiwgIjIxMDYxMTE5REciLCAiMjExMjExMTlTRyIsICIyMjAxMTExOVVZIiwgIjIxMDYxMTE5QUciLCAiMjEwNjExMTlBTCIsICIyMjA0MTIxOU5ZIiwgIjIyMDQxMjE5RyIsICIyMTA2MTExOUJJIiwgIjIyMDIzM0wyRyIsICIyMjAyMzNMMkkiLCAiMjIwMzMzUU5ZIiwgIjIyMDMzM1FBRyIsICJNMjAwNEo3QUMiLCAiTTIwMDRKN0JDIiwgIk0yMDA0SjE5QyIsICJNMjAwNkMzTUlJIiwgIk0yMDEwSjE5U0kiLCAiTTIwMDZDM0xHIiwgIk0yMDA2QzNMVkciLCAiTTIwMDZDM01HIiwgIk0yMDA2QzNNVCIsICJNMjAwNkMzTU5HIiwgIk0yMDA2QzNMSUkiLCAiTTIwMTBKMTlTTCIsICJNMjAxMEoxOVNHIiwgIk0yMDEwSjE5U1kiLCAiTTIwMTJLMTFBQyIsICJNMjAxMksxMEMiLCAiTTIwMTJLMTFDIiwgIjIyMDIxMjExUkMiXSkKICAgIGc2ID0gcmFuZG9tLmNob2ljZShbIlJNWDM1MTYiLCAiUk1YMzM3MSIsICJSTVgzNDYxIiwgIlJNWDMyODYiLCAiUk1YMzU2MSIsICJSTVgzMzg4IiwgIlJNWDMzMTEiLCAiUk1YMzE0MiIsICJSTVgyMDcxIiwgIlJNWDE4MDUiLCAiUk1YMTgwOSIsICJSTVgxODAxIiwgIlJNWDE4MDciLCAiUk1YMTgwMyIsICJSTVgxODI1IiwgIlJNWDE4MjEiLCAiUk1YMTgyMiIsICJSTVgxODMzIiwgIlJNWDE4NTEiLCAiUk1YMTg1MyIsICJSTVgxODI3IiwgIlJNWDE5MTEiLCAiUk1YMTkxOSIsICJSTVgxOTI3IiwgIlJNWDE5NzEiLCAiUk1YMTk3MyIsICJSTVgyMDMwIiwgIlJNWDIwMzIiLCAiUk1YMTkyNSIsICJSTVgxOTI5IiwgIlJNWDIwMDEiLCAiUk1YMjA2MSIsICJSTVgyMDYzIiwgIlJNWDIwNDAiLCAiUk1YMjA0MiIsICJSTVgyMDAyIiwgIlJNWDIxNTEiLCAiUk1YMjE2MyIsICJSTVgyMTU1IiwgIlJNWDIxNzAiLCAiUk1YMjEwMyIsICJSTVgzMDg1IiwgIlJNWDMyNDEiLCAiUk1YMzA4MSIsICJSTVgzMTUxIiwgIlJNWDMzODEiLCAiUk1YMzUyMSIsICJSTVgzNDc0IiwgIlJNWDM0NzEiLCAiUk1YMzQ3MiIsICJSTVgzMzkyIiwgIlJNWDMzOTMiLCAiUk1YMzQ5MSIsICJSTVgxODExIiwgIlJNWDIxODUiLCAiUk1YMzIzMSIsICJSTVgyMTg5IiwgIlJNWDIxODAiLCAiUk1YMjE5NSIsICJSTVgyMTAxIiwgIlJNWDE5NDEiLCAiUk1YMTk0NSIsICJSTVgzMDYzIiwgIlJNWDMwNjEiLCAiUk1YMzIwMSIsICJSTVgzMjAzIiwgIlJNWDMyNjEiLCAiUk1YMzI2MyIsICJSTVgzMTkzIiwgIlJNWDMxOTEiLCAiUk1YMzE5NSIsICJSTVgzMTk3IiwgIlJNWDMyNjUiLCAiUk1YMzI2OCIsICJSTVgzMjY5IiwiUk1YMjAyNyIsICJSTVgyMDIwIiwiUk1YMjAyMSIsICJSTVgzNTgxIiwgIlJNWDM1MDEiLCAiUk1YMzUwMyIsICJSTVgzNTExIiwgIlJNWDMzMTAiLCAiUk1YMzMxMiIsICJSTVgzNTUxIiwgIlJNWDMzMDEiLCAiUk1YMzMwMCIsICJSTVgyMjAyIiwgIlJNWDMzNjMiLCAiUk1YMzM2MCIsICJSTVgzMzY2IiwgIlJNWDMzNjEiLCAiUk1YMzAzMSIsICJSTVgzMzcwIiwgIlJNWDMzNTciLCAiUk1YMzU2MCIsICJSTVgzNTYyIiwgIlJNWDMzNTAiLCAiUk1YMjE5MyIsICJSTVgyMTYxIiwgIlJNWDIwNTAiLCAiUk1YMjE1NiIsICJSTVgzMjQyIiwgIlJNWDMxNzEiLCAiUk1YMzQzMCIsICJSTVgzMjM1IiwgIlJNWDM1MDYiLCAiUk1YMjExNyIsICJSTVgyMTczIiwgIlJNWDMxNjEiLCAiUk1YMjIwNSIsICJSTVgzNDYyIiwgIlJNWDM0NzgiLCAiUk1YMzM3MiIsICJSTVgzNTc0IiwgIlJNWDE4MzEiLCAiUk1YMzEyMSIsICJSTVgzMTIyIiwgIlJNWDMxMjUiLCAiUk1YMzA0MyIsICJSTVgzMDQyIiwgIlJNWDMwNDEiLCAiUk1YMzA5MiIsICJSTVgzMDkzIiwgIlJNWDM1NzEiLCAiUk1YMzQ3NSIsICJSTVgyMjAwIiwgIlJNWDIyMDEiLCAiUk1YMjExMSIsICJSTVgyMTEyIiwgIlJNWDE5MDEiLCAiUk1YMTkwMyIsICJSTVgxOTkyIiwgIlJNWDE5OTMiLCAiUk1YMTk5MSIsICJSTVgxOTMxIiwgIlJNWDIxNDIiLCAiUk1YMjA4MSIsICJSTVgyMDg1IiwgIlJNWDIwODMiLCAiUk1YMjA4NiIsICJSTVgyMTQ0IiwgIlJNWDIwNTEiLCAiUk1YMjAyNSIsICJSTVgyMDc1IiwgIlJNWDIwNzYiLCAiUk1YMjA3MiIsICJSTVgyMDUyIiwgIlJNWDIxNzYiLCAiUk1YMjEyMSIsICJSTVgzMTE1IiwgIlJNWDE5MjEiXSkKICAgIGc3ID0gcmFuZG9tLmNob2ljZShbIlg2NzZCIiwgIlg2ODciLCAiWDYwOSIsICJYNjk3IiwgIlg2ODBEIiwgIlg1MDciLCAiWDYwNSIsICJYNjY4IiwgIlg2ODE1QiIsICJYNjI0IiwgIlg2NTVGIiwgIlg2ODlDIiwgIlg2MDgiLCAiWDY5OCIsICJYNjgyQiIsICJYNjgyQyIsICJYNjg4QyIsICJYNjg4QiIsICJYNjU4RSIsICJYNjU5QiIsICJYNjg5QiIsICJYNjg5IiwgIlg2ODlEIiwgIlg2NjIiLCAiWDY2MkIiLCAiWDY3NSIsICJYNjgxMkIiLCAiWDY4MTIiLCAiWDY4MTdCIiwgIlg2ODE3IiwgIlg2ODE2QyIsICJYNjgxNiIsICJYNjgxNkQiLCAiWDY2OEMiLCAiWDY2NUIiLCAiWDY2NUUiLCAiWDUxMCIsICJYNTU5QyIsICJYNTU5RiIsICJYNTU5IiwgIlg2MDYiLCAiWDYwNkMiLCAiWDYwNkQiLCAiWDYyMyIsICJYNjI0QiIsICJYNjI1QyIsICJYNjI1RCIsICJYNjI1QiIsICJYNjUwRCIsICJYNjUwQiIsICJYNjUwIiwgIlg2NTBDIiwgIlg2NTVDIiwgIlg2NTVEIiwgIlg2ODBCIiwgIlg1NzMiLCAiWDU3M0IiLCAiWDYyMiIsICJYNjkzIiwgIlg2OTVDIiwgIlg2OTVEIiwgIlg2OTUiLCAiWDY2M0IiLCAiWDY2MyIsICJYNjcwIiwgIlg2NzEiLCAiWDY3MUIiLCAiWDY3MiIsICJYNjgxOSIsICJYNTcyIiwgIlg1NzItTFRFIiwgIlg1NzEiLCAiWDYwNCIsICJYNjEwQiIsICJYNjkwIiwgIlg2OTBCIiwgIlg2NTYiLCAiWDY5MiIsICJYNjgzIiwgIlg0NTAiLCAiWDUwMTAiLCAiWDUwMSIsICJYNDAxIiwgIlg2MjYiLCAiWDYyNkIiLCAiWDY1MiIsICJYNjUyQSIsICJYNjUyQiIsICJYNjUyQyIsICJYNjYwQiIsICJYNjYwQyIsICJYNjYwIiwgIlg1NTE1IiwgIlg1NTE1RiIsICJYNTUxNUkiLCAiWDYwOUIiLCAiWDU1MTREIiwgIlg1NTE2QiIsICJYNTUxNkMiLCAiWDYyNyIsICJYNjgwIiwgIlg2NTMiLCAiWDY1M0MiLCAiWDY1NyIsICJYNjU3QiIsICJYNjU3QyIsICJYNjUxMUIiLCAiWDY1MTFFIiwgIlg2NTExIiwgIlg2NTEyIiwgIlg2ODIzQyIsICJYNjEyQiIsICJYNjEyIiwgIlg1MDMiLCAiWDUxMSIsICJYMzUyIiwgIlgzNTEiLCAiWDUzMCIsICJYNjc2QyIsICJYNjgyMSIsICJYNjgyMyIsICJYNjgyNyIsICJYNTA5IiwgIlg2MDMiLCAiWDY4MTUiLCAiWDYyMEIiLCAiWDYyMCIsICJYNjg3QiIsICJYNjgxMUIiLCAiWDY4MTAiLCAiWDY4MTEiXSkKICAgIHUxID0gZiJEYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDEzOyBSTVgzNzYwIEJ1aWxkL1RQMUEuMjIwNjI0LjAxNCkgW0ZCQU4vRkI0QTtGQkFWL3tzdHIocnIoMzUwLDQ1MCkpfS4wLjAuNDQuMTE3O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkxDL2luX0lEO0ZCQlYve3N0cihycig0MTAwMDAwMDAsNTk5OTk5OTk5KSl9O0ZCQ1IvU21hcnRmcmVuIDEwMCUgdW50dWsgSW5kb25lc2lhO0ZCTUYvcmVhbG1lO0ZCQkQvcmVhbG1lO0ZCRFYvUk1YMzc2MDtGQlNWL3tzdHIocnIoMTAsMTMpKX07RkJDQS9hcm02NC12OGE6bnVsbDtGQkRNLyIrIntkZW5zaXR5PTIuMCx3aWR0aD03MjAsaGVpZ2h0PTE0NDB9O0ZCX0ZXLzE7RkJSVi8wO10gRkJCSy8xIgogICAgdTIgPSBmIk1vemlsbGEvNS4wIChpUGFkOyBDUFUgT1Mge3N0cihycigxMSwxNikpfV97c3RyKHJyKDQsOSkpfThfNF8xIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMC4xLjQgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uL3tzdHIocnIoNCwxOSkpfS57c3RyKHJyKDEsOSkpfSBTYWZhcmkvNjAwLjEuNCIKICAgIHUzID0gZiJNb3ppbGxhLzUuMCBMaW51eDsgQW5kcm9pZCB7c3RyKHJyKDYsMTMpKX07IEJ1aWxkL1RQMUEuMjIwNjI0LjAxNDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDU3LjAuMC41NC44NDtdIgogICAgdTQgPSBmIk1vemlsbGEvNS4wIExpbnV4OyBBbmRyb2lkIHtzdHIocnIoNiwxMykpfTsgQnVpbGQvVUtRMS4yMzA5MjQuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lL3tzdHIocnIoNzMsMTUwKSl9LjAue3N0cihycig1NTAwLDU5MDApKX0ue3N0cihycig3NSwxNTApKX0gTW9iaWxlIFNhZmFyaS81MzcuMzYiCiAgICB1NSA9IGYiTW96aWxsYS81LjAgTGludXg7IEFuZHJvaWQge3N0cihycig2LDEzKSl9OyBCdWlsZC9OTUYyNkYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgogICAgdTYgPSBmIk1vemlsbGEvNS4wIExpbnV4OyBBbmRyb2lkIHtzdHIocnIoNiwxMykpfTsgQnVpbGQvVFAxQS4yMjA2MjQuMDE0OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgogICAgdTcgPSBmIk1vemlsbGEvNS4wIExpbnV4OyBBbmRyb2lkIHtzdHIocnIoNiwxMykpfTsgQnVpbGQvTlJEOTBNKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUve3N0cihycig3MywxNTApKX0uMC57c3RyKHJyKDU1MDAsNTkwMCkpfS57c3RyKHJyKDc1LDE1MCkpfSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKICAgIFVhTWFpbm4gPSByYW5kb20uY2hvaWNlKFt1MSwgdTIsIHUzLCB1NCwgdTUsIHU2LCB1N10pCiAgICB1Z2VuLmFwcGVuZChVYU1haW5uKQogCmZvciB4IGluIHJhbmdlKDEwKToKCWE9cmFuZG9tLmNob2ljZShbJzMnLCc0JywnNScsJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInLCcxMyddKQoJYj1yYW5kb20uY2hvaWNlKFsnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMicsJzEzJ10pCgljPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQoJZD1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKCWU9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCgl1YWs9ZidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge2F9OyBQaXhlbCB7Yn0pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97Y30uMC57ZH0ue2V9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwpkZWYgdWFrdSgpOgoJdHJ5OgoJCXVhPW9wZW4oJ2ZjY2MudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkKCQlmb3IgdWIgaW4gdWE6CgkJCXVnZW4uYXBwZW5kKHViKQoJZXhjZXB0OgoJCWE9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vQVhPTTk1OS9GQ0svYmxvYi9tYXN0ZXIvZmNjYy50eHQnKS50ZXh0CgkJdWE9b3BlbignLmZjY2MudHh0JywndycpCgkJYWE9cmUuZmluZGFsbCgnbGluZSI+KC4qPyk8JyxzdHIoYSkpCgkJZm9yIHVuIGluIGFhOgoJCQl1YS53cml0ZSh1bisnXG4nKQoJCXVhPW9wZW4oJy5iYm5ldy50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQojLS0tLS0tLS0tLS0tWyBJTkRJQ0FUSU9OIF0tLS0tLS0tLS0tLS0tLS0jClAgPSAnXHgxYlsxOzk3bScgIyBQVVRJSApNID0gJ1x4MWJbMTs5MW0nICMgTUVSQUgKSCA9ICdceDFiWzE7OTJtJyAjIEhJSkFVCksgPSAnXHgxYlsxOzkzbScgIyBLVU5JTkcKQiA9ICdceDFiWzE7OTRtJyAjIEJJUlUKVSA9ICdceDFiWzE7OTVtJyAjIFVOR1UKTyA9ICdceDFiWzE7OTZtJyAjIEJJUlUgTVVEQQpOID0gJ1x4MWJbMG0nCSMgV0FSTkEgTUFUSQojLS0tLS0tLS0tLS0tWyBXQVJOQS1DT0xPUiBdLS0tLS0tLS0tLS0tLS0jClAgPSAnXHgxYlsxOzk3bScKTSA9ICdceDFiWzE7OTFtJwpIID0gJ1x4MWJbMTs5Mm0nCksgPSAnXHgxYlsxOzkzbScKQiA9ICdceDFiWzE7OTRtJwpVID0gJ1x4MWJbMTs5NW0nIApPID0gJ1x4MWJbMTs5Nm0nCk4gPSAnXHgxYlswbScgICAgClogPSAiXDAzM1sxOzMwbSIKc2lyID0gJ1wwMzNbNDFtXHgxYlsxOzk3bScKeCA9ICdcMzNbbScgIyBERUZBVUxUCm0gPSAnXHgxYlsxOzkxbScgI1JFRCArCmsgPSAnXDAzM1s5M20nICMgS1VOSU5HICsKaCA9ICdceDFiWzE7OTJtJyAjIEhJSkFVICsKaGggPSAnXDAzM1szMm0nICMgSElKQVUgLQp1ID0gJ1wwMzNbOTVtJyAjIFVOR1UKa2sgPSAnXDAzM1szM20nICMgS1VOSU5HIC0KYiA9ICdcMzNbMTs5Nm0nICMgQklSVSAtCnAgPSAnXHgxYlswOzM0bScgIyBCSVJVICsKYXN1ID0gcmFuZG9tLmNob2ljZShbbSxrLGgsdSxiXSkKdHJ5OmNla19kYXRhID0gcmVxdWVzdHMuZ2V0KCJodHRwOi8vaXAtYXBpLmNvbS9qc29uLyIpLmpzb24oKQpleGNlcHQ6Y2VrX2RhdGEgPSB7Jy0nfQp0cnk6YXNhbF9rb3RhID0gY2VrX2RhdGFbImNpdHkiXQpleGNlcHQ6YXNhbF9rb3RhID0geyctJ30KdHJ5OmFzYWxfcmVnID0gY2VrX2RhdGFbInJlZ2lvbiJdCmV4Y2VwdDphc2FsX3JlZyA9IGNla19kYXRhWyctJ10KdHJ5OnRpbWVzID0gY2VrX2RhdGFbInRpbWV6b25lIl0KZXhjZXB0OnRpbWVzID0gY2VrX2RhdGFbJy0nXQp0cnk6Y2l0eSA9IGNla19kYXRhWyJjaXR5Il0KZXhjZXB0OmNpdHkgPSBjZWtfZGF0YVsnLSddCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ09OVkVSVEVSLUJVTEFOIF0tLS0tLS0tLS0tLS0tLSMKZGljID0geycxJzonSmFudWFyeScsJzInOidGZWJydWFyeScsJzMnOidNYXJjaCcsJzQnOidBcHJpbCcsJzUnOidNYXknLCc2JzonSnVuZScsJzcnOidKdWx5JywnOCc6J0F1Z3VzdCcsJzknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZWNlbWJlcid9CmRpYzIgPSB7JzAxJzonSmFudWFyeScsJzAyJzonRmVicnVhcnknLCcwMyc6J01hcmNoJywnMDQnOidBcHJpbCcsJzA1JzonTWF5JywnMDYnOidKdW5lJywnMDcnOidKdWx5JywnMDgnOidBdWd1c3QnLCcwOSc6J1NlcHRlbWJlcicsJzEwJzonT2N0b2JlcicsJzExJzonTm92ZW1iZXInLCcxMic6J0RldmVtYmVyJ30KdGdsID0gZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkuZGF5CmJsbiA9IGRpY1soc3RyKGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLm1vbnRoKSldCnRobiA9IGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLnllYXIKb2tjID0gJ09LLScrc3RyKHRnbCkrJy0nK3N0cihibG4pKyctJytzdHIodGhuKSsnLnR4dCcKY3BjID0gJ0NQLScrc3RyKHRnbCkrJy0nK3N0cihibG4pKyctJytzdHIodGhuKSsnLnR4dCcKIy0tLS0tLS0tLS0tLS0tLS0tLVsgTUFDSElORS1TVVBQT1JUIF0tLS0tLS0tLS0tLS0tLS0jCmRlZiBhbHZpbm9feHkodSk6CiAgICAgICAgZm9yIGUgaW4gdSArICJcbiI6c3lzLnN0ZG91dC53cml0ZShlKTtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjAwNSkKZGVmIGNsZWFyKCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykKIy0tLS0tLS0tLS0tLS0tLS0tLVsgTE9HTy1MQUtOQVQgXS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgYmFubmVyKCk6CgljZXRhayhwYW5lbChmIiIiW2JvbGQgcmVkXQrioIDioIDioIDioIDioIDioIDiorjioJjiorDioYPioJTioKnioKTioKbioKTiooDioYDioIDioIDioIDioIDioIAK4qCA4qCA4qCA4qKA4qCE4qKS4qCS4qC64qCG4qCI4qCA4qCA4qKQ4qOC4qCk4qCE4qGA4qCv4qCV4qOS4qOS4qGA4qCACuKggOKggOKikOKhoeKglOKggeKghuKggOKggOKggOKggOKggOKigOKgoOKgmeKihuKggOKgiOKigeKgi+KgpeKjgOKjgArioIjioInioIDio7DioIDioIDioIDioIDioYDioIDiorDio4bioqDioKDioqHioYDiooLio5fio5biop3ioY7ioInioIAgW0JZIFpYX0xBTlNdCuKioOKhtOKgm+Khh+KggOKgkOKggOKhhOKjoeKih+KguOKiuOKiuOKhh+KgguKhneKgjOKit+Kiq+KiruKhnOKhgOKggArioIDioIDiorDio5zioJjioYDioqHioLDioLPio47iooLio5/ioY7ioJjio6zioZXio4jio7zioKLioLnioZ/ioIfioIAK4qCA4qCg4qKL4qK/4qKz4qK84qOE4qOG4qOm4qOx4qO/4qO/4qO/4qO34qCs4qO/4qO/4qO/4qO/4qCR4qC14qCA4qCAWyBCaXNtaWxsYWggZHVsdSBicmUgXQrioIDioIDioIDioZzioqnio6/iop3ioYDioIHioIDioJnioJvioJvioIPioIDioIjioJvioJviob/ioIDioIDioIDioIAK4qCA4qCA4qCA4qCA4qCA4qO/4qCi4qGB4qCA4qCA4qCA4qCA4qCA4qCA4qCA4qCA4qCA4qCA4qGH4qCA4qCA4qCA4qCACuKggOKggOKggOKggOKigOKjgOKhh+KggOKgkeKggOKggOKggOKggOKgkOKihOKghOKigOKhvOKgg+KggOKggOKggOKggFsgVkVSU0lPTiAzLjQgXQrioIDioIDioIDioIDiorjio7/io7fio6Tio4DioIjioLLioaTio4Dio4DioIDiobDioIvioIDioIDioIDioIDioIDioIAK4qCA4qCA4qCA4qCA4qO84qO/4qO/4qO/4qO/4qO/4qO24qOk4qOZ4qO34qOF4qGA4qCA4qCA4qCA4qCA4qCA4qCA4qCACuKggOKggOKigOKjvuKjv+Kjv+Kjv+Kjv+Kju+Kiv+Kjv+Kjv+Kjv+Kjv+Kjv+Khv+KggOKggOKggOKggOKggOKggOKggArioIDioaDioJ/ioIHioJnioJ/ioJvioJvior/io7/io77io7/io7/io7/io7/io6fioYAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICIiIix3aWR0aD05MCx0aXRsZT1mIkJBTk5FUiIsc3R5bGU9ZiIiKSkKIy0tLS0tLS0tLS0tLS0tLS0tLS0tWyBCQUdJQU4tTUFTVUsgXS0tLS0tLS0tLS0tLS0tIwpkZWYgbG9naW4xMjMoKToKCW9zLnN5c3RlbSgnY2xlYXInKQoJYmFubmVyKCkKCWNldGFrKHBhbmVsKGYiW1tib2xkIHJlZF0wMVtib2xkIHdoaXRlXV0gTG9naW4gTWVuZ2d1bmFrYW4gQ29va2llICAgICAgICAgICAgICBbW2JvbGQgcHVycGxlXTAzW2JvbGQgd2hpdGVdXSBDcmFjayBJbnN0YWdyYW0gXG5bW2JvbGQgcHVycGxlXTAyW2JvbGQgd2hpdGVdXSBNZW51IENyYWNrIFRhbnBhIExvZ2luICAgICAgICAgICAgICAgIFtbYm9sZCBwdXJwbGVdMDRbYm9sZCB3aGl0ZV1dIENlayBIYXNpbCBDcmFjayAiLHdpZHRoPTkwLHRpdGxlPWYiW2JvbGQgcHVycGxlXU1lbnUgQm90IixwYWRkaW5nPSgwLDIpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJYnJ5biA9IGlucHV0KGYnIFvigKJdIFBpbGloIE1lbnUgOiAnKQoJaWYgYnJ5biBpbiBbJzEnLCcwMSddOgoJCWxvZ2luX2xhZ2kzMzQoKQoJZWxpZiBicnluIGluIFsnMicsJzAyJ106CgkJbGFpbm55YSgpCgllbGlmIGJyeW4gaW4gWyczJywnMDMnXToKCQlsb2dpbkNvb2tpZSgpCgllbGlmIGJyeW4gaW4gWyc0JywnMDQnXToKCQlyZXN1bHQoKQoJZWxzZToKCQlwcmludCgnIFvigKJdIFNhbGFoIFBpbGloIEFuamluZycpCgkJdGltZS5zbGVlcCg1KQoJCWV4aXQoKQoJCQpkZWYgbG9naW4oKToKCXRyeToKCQl0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpCgkJY29rID0gb3BlbignLmNvay50eHQnLCdyJykucmVhZCgpCgkJdG9rZW5rdS5hcHBlbmQodG9rZW4pCgkJdHJ5OgoJCQlzeSA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWU/ZmllbGRzPWlkLG5hbWUmYWNjZXNzX3Rva2VuPScrdG9rZW5rdVswXSwgY29va2llcz17J2Nvb2tpZSc6Y29rfSkKCQkJc3kyID0ganNvbi5sb2FkcyhzeS50ZXh0KVsnbmFtZSddCgkJCXN5MyA9IGpzb24ubG9hZHMoc3kudGV4dClbJ2lkJ10KCQkJbWVudShzeTIsc3kzKQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJbG9naW4xMjMoKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJbGkgPSAnIFvigKJdIFByb2JsZW0gSW50ZXJuZXQgQ29ubmVjdGlvbiwgQ2hlY2sgQW5kIFRyeSBBZ2FpbicKCQkJbG8gPSBtYXJrKGxpLCBzdHlsZT0ncmVkJykKCQkJc29sKCkucHJpbnQobG8sIHN0eWxlPSdjeWFuJykKCQkJZXhpdCgpCglleGNlcHQgSU9FcnJvcjoKCQlsb2dpbjEyMygpCgkJCmRlZiBsb2dpbl9sYWdpMzM0KCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJCXRva2Vua3UuYXBwZW5kKHRva2VuKQoJCXRyeToKCQkJc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pCgkJCXN5MiA9IGpzb24ubG9hZHMoc3kudGV4dClbJ25hbWUnXQoJCQlzeTMgPSBqc29uLmxvYWRzKHN5LnRleHQpWydpZCddCgkJCW1lbnUoc3kyLHN5MykKCQlleGNlcHQgS2V5RXJyb3I6CgkJCWxvZ2luX2xhZ2kzMzQoKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJcHJpbnQoJ1shXSBDb25uZWN0aW9uRXJyb3InKQoJCQlleGl0KCkKCWV4Y2VwdCBJT0Vycm9yOgoJCWxvZ2luX2xhZ2kzMzQoKQpkZWYgbG9naW5fbGFnaTMzNCgpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2sgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCQl0b2tlbmt1LmFwcGVuZCh0b2tlbikKCQl0cnk6CgkJCXN5ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9maWVsZHM9aWQsbmFtZSZhY2Nlc3NfdG9rZW49Jyt0b2tlbmt1WzBdLCBjb29raWVzPXsnY29va2llJzpjb2t9KQoJCQlzeTIgPSBqc29uLmxvYWRzKHN5LnRleHQpWyduYW1lJ10KCQkJc3kzID0ganNvbi5sb2FkcyhzeS50ZXh0KVsnaWQnXQoJCQltZW51KHN5MixzeTMpCgkJZXhjZXB0IEtleUVycm9yOgoJCQlsb2dpbl9sYWdpMzM0KCkKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCWxpID0gJyBb4oCiXSBQcm9ibGVtIEludGVybmV0IENvbm5lY3Rpb24sIENoZWNrIEFuZCBUcnkgQWdhaW4nCgkJCWxvID0gbWFyayhsaSwgc3R5bGU9J3JlZCcpCgkJCXNvbCgpLnByaW50KGxvLCBzdHlsZT0nY3lhbicpCgkJCWV4aXQoKQoJZXhjZXB0IElPRXJyb3I6CgkJbG9naW5fbGFnaTMzNCgpCgkJCmRlZiBsb2dpbl9sYWdpMzM0KCk6Cgl0cnk6CgkJb3Muc3lzdGVtKCdjbGVhcicpCgkJYmFubmVyKCkKCQlzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCQljb2sgPSBpbnB1dCgnXG5bIV0gTWFzdWthbiBDb29raWUgOiAnKQoJCXNlcy5oZWFkZXJzLnVwZGF0ZSgKCQkJewoJCQkJJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAoJCQl9CgkJKQoJCWRhdGEgPSB7CgkJCQknYWNjZXNzX3Rva2VuJzogJzEzNDg1NjQ2OTg1MTczOTB8MDA3YzBhOTEwMWI5ZTFjOGZmYWI3Mjc2NjY4MDUwMzgnLAoJCQkJJ3Njb3BlJzogJycKCQl9CgkJcmVzcG9uc2UgPSBqc29uLmxvYWRzKHNlcy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi42L2RldmljZS9sb2dpbi8nLCBkYXRhPWRhdGEpLnRleHQpCgkJY29kZSwgdXNlcl9jb2RlID0gcmVzcG9uc2VbJ2NvZGUnXSwgcmVzcG9uc2VbJ3VzZXJfY29kZSddCgkJdmVyaWZpY2F0aW9uX3VybCwgc3RhdHVzX3VybCA9ICgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9kZXZpY2U/dXNlcl9jb2RlPXt9Jy5mb3JtYXQodXNlcl9jb2RlKSksICgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuNi9kZXZpY2UvbG9naW5fc3RhdHVzP21ldGhvZD1wb3N0JmNvZGU9e30mYWNjZXNzX3Rva2VuPTEzNDg1NjQ2OTg1MTczOTAlN0MwMDdjMGE5MTAxYjllMWM4ZmZhYjcyNzY2NjgwNTAzOCZjYWxsYmFjaz1MZWV0c2hhcmVzQ2FsbGJhY2snLmZvcm1hdChjb2RlKSkKCQlzZXMuaGVhZGVycy5wb3AoCgkJCSdjb250ZW50LXR5cGUnCgkJKQoJCXNlcy5oZWFkZXJzLnVwZGF0ZSgKCQkJewoJCQkJJ3NlYy1mZXRjaC1tb2RlJzogJ25hdmlnYXRlJywKCQkJCSd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBSTVgxOTQxIEJ1aWxkL1BQUjEuMTgwNjEwLjAxMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMDcuMC41MzA0LjU0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywKCQkJCSdzZWMtZmV0Y2gtc2l0ZSc6ICdjcm9zcy1zaXRlJywKCQkJCSdIb3N0JzogJ20uZmFjZWJvb2suY29tJywKCQkJCSdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45JywKCQkJCSdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsCgkJCX0KCQkpCgkJcmVzcG9uc2UyID0gc2VzLmdldCh2ZXJpZmljYXRpb25fdXJsLCBjb29raWVzID0geydjb29raWUnOiBjb2t9KS50ZXh0CgkJaWYgJ0JhZ2FpbWFuYSBBbmRhIGluZ2luIG1hc3VrIGtlIEZhY2Vib29rPycgaW4gc3RyKHJlc3BvbnNlMikgb3IgJy9sb2dpbi8/bmV4dD0nIGluIHN0cihyZXNwb25zZTIpOgoJCQlleGl0KCdcblshXSBjb29raWUgaW52YWxpZCcpCgkJZWxzZToKCQkJYWN0aW9uID0gcmUuc2VhcmNoKCdhY3Rpb249IiguKj8pIj4nLCBzdHIocmVzcG9uc2UyKSkuZ3JvdXAoMSkucmVwbGFjZSgnYW1wOycsICcnKQoJCQlmYl9kdHNnID0gcmUuc2VhcmNoKCduYW1lPSJmYl9kdHNnIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlMikpLmdyb3VwKDEpCgkJCWphem9lc3QgPSByZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoXGQrKSInLCBzdHIocmVzcG9uc2UyKSkuZ3JvdXAoMSkKCQkJZGF0YSA9IHsKCQkJCSdmYl9kdHNnJzogZmJfZHRzZywKCQkJCSdqYXpvZXN0JzogamF6b2VzdCwKCQkJCSdxcic6IDAsCgkJCQkndXNlcl9jb2RlJzogdXNlcl9jb2RlLAoJCQl9CgkJCXNlcy5oZWFkZXJzLnVwZGF0ZSgKCQkJCXsKCQkJCQknb3JpZ2luJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20nLAoJCQkJCSdyZWZlcmVyJzogdmVyaWZpY2F0aW9uX3VybCwKCQkJCQknY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsCgkJCQkJJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywKCQkJCX0KCQkJKQoJCQlyZXNwb25zZTMgPSBzZXMucG9zdCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbXt9Jy5mb3JtYXQoYWN0aW9uKSwgZGF0YSA9IGRhdGEsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IGNva30pCgkJCWlmICdodHRwczovL20uZmFjZWJvb2suY29tL2RpYWxvZy9vYXV0aC8/YXV0aF90eXBlPXJlcmVxdWVzdCZyZWRpcmVjdF91cmk9JyBpbiBzdHIocmVzcG9uc2UzLnVybCk6CgkJCQlzZXMuaGVhZGVycy5wb3AoCgkJCQkJJ2NvbnRlbnQtdHlwZScKCQkJCSkKCQkJCXNlcy5oZWFkZXJzLnBvcCgKCQkJCQknb3JpZ2luJwoJCQkJKQoJCQkJcmVzcG9uc2U0ID0gc2VzLnBvc3QocmVzcG9uc2UzLnVybCwgZGF0YSA9IGRhdGEsIGNvb2tpZXMgPSB7J2Nvb2tpZSc6IGNva30pLnRleHQKCQkJCWFjdGlvbiA9IHJlLnNlYXJjaCgnYWN0aW9uPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkucmVwbGFjZSgnYW1wOycsICcnKQoJCQkJZmJfZHRzZyA9IHJlLnNlYXJjaCgnbmFtZT0iZmJfZHRzZyIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJamF6b2VzdCA9IHJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IihcZCspIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJc2NvcGUgPSByZS5zZWFyY2goJ25hbWU9InNjb3BlIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQlkaXNwbGF5ID0gcmUuc2VhcmNoKCduYW1lPSJkaXNwbGF5IiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQl1c2VyX2NvZGUgPSByZS5zZWFyY2goJ25hbWU9InVzZXJfY29kZSIgdmFsdWU9IiguKj8pIicsIHN0cihyZXNwb25zZTQpKS5ncm91cCgxKQoJCQkJbG9nZ2VyX2lkID0gcmUuc2VhcmNoKCduYW1lPSJsb2dnZXJfaWQiIHZhbHVlPSIoLio/KSInLCBzdHIocmVzcG9uc2U0KSkuZ3JvdXAoMSkKCQkJCWF1dGhfdHlwZSA9IHJlLnNlYXJjaCgnbmFtZT0iYXV0aF90eXBlIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQllbmNyeXB0ZWRfcG9zdF9ib2R5ID0gcmUuc2VhcmNoKCduYW1lPSJlbmNyeXB0ZWRfcG9zdF9ib2R5IiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQlyZXR1cm5fZm9ybWF0ID0gcmUuc2VhcmNoKCduYW1lPSJyZXR1cm5fZm9ybWF0XFxbXFxdIiB2YWx1ZT0iKC4qPykiJywgc3RyKHJlc3BvbnNlNCkpLmdyb3VwKDEpCgkJCQlzZXMuaGVhZGVycy51cGRhdGUoCgkJCQkJewoJCQkJCQknb3JpZ2luJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20nLAoJCQkJCQkncmVmZXJlcic6IHJlc3BvbnNlMy51cmwsCgkJCQkJCSdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKCQkJCQl9CgkJCQkpCgkJCQlkYXRhID0gewoJCQkJCSdmYl9kdHNnJzogZmJfZHRzZywKCQkJCQknamF6b2VzdCc6IGphem9lc3QsCgkJCQkJJ3Njb3BlJzogc2NvcGUsCgkJCQkJJ2Rpc3BsYXknOiBkaXNwbGF5LAoJCQkJCSd1c2VyX2NvZGUnOiB1c2VyX2NvZGUsCgkJCQkJJ2xvZ2dlcl9pZCc6IGxvZ2dlcl9pZCwKCQkJCQknYXV0aF90eXBlJzogYXV0aF90eXBlLAoJCQkJCSdlbmNyeXB0ZWRfcG9zdF9ib2R5JzogZW5jcnlwdGVkX3Bvc3RfYm9keSwKCQkJCQkncmV0dXJuX2Zvcm1hdFtdJzogcmV0dXJuX2Zvcm1hdCwKCQkJCX0KCQkJCXJlc3BvbnNlNSA9IHNlcy5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29te30nLmZvcm1hdChhY3Rpb24pLCBkYXRhID0gZGF0YSwgY29va2llcyA9IHsnY29va2llJzogY29rfSkudGV4dAoJCQkJd2luZG93c19yZWZlcmVyID0gcmUuc2VhcmNoKCd3aW5kb3cubG9jYXRpb24uaHJlZj0iKC4qPykiJywgc3RyKHJlc3BvbnNlNSkpLmdyb3VwKDEpLnJlcGxhY2UoJ1xcJywgJycpCgkJCQlzZXMuaGVhZGVycy5wb3AoCgkJCQkJJ2NvbnRlbnQtdHlwZScKCQkJCSkKCQkJCXNlcy5oZWFkZXJzLnBvcCgKCQkJCQknb3JpZ2luJwoJCQkJKQoJCQkJc2VzLmhlYWRlcnMudXBkYXRlKAoJCQkJCXsKCQkJCQkJJ3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8nLAoJCQkJCX0KCQkJCSkKCQkJCXJlc3BvbnNlNiA9IHNlcy5nZXQod2luZG93c19yZWZlcmVyLCBjb29raWVzID0geydjb29raWUnOiBjb2t9KS50ZXh0CgkJCQlpZiAnU3Vrc2VzIScgaW4gc3RyKHJlc3BvbnNlNik6CgkJCQkJc2VzLmhlYWRlcnMudXBkYXRlKAoJCQkJCQl7CgkJCQkJCQknc2VjLWZldGNoLW1vZGUnOiAnbm8tY29ycycsCgkJCQkJCQkncmVmZXJlcic6ICdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nLAoJCQkJCQkJJ0hvc3QnOiAnZ3JhcGguZmFjZWJvb2suY29tJywKCQkJCQkJCSdhY2NlcHQnOiAnKi8qJywKCQkJCQkJCSdzZWMtZmV0Y2gtZGVzdCc6ICdzY3JpcHQnLAoJCQkJCQkJJ3NlYy1mZXRjaC1zaXRlJzogJ2Nyb3NzLXNpdGUnLAoJCQkJCQl9CgkJCQkJKQoJCQkJCXJlc3BvbnNlNyA9IHNlcy5nZXQoc3RhdHVzX3VybCwgY29va2llcyA9IHsnY29va2llJzogY29rfSkudGV4dAoJCQkJCXRvayA9IHJlLnNlYXJjaCgnImFjY2Vzc190b2tlbiI6ICIoLio/KSInLCBzdHIocmVzcG9uc2U3KSkuZ3JvdXAoMSkKCQkJCQl0b2tlbncgPSBvcGVuKCIudG9rZW4udHh0IiwgInciKS53cml0ZSh0b2spCgkJCQkJY29raWV3ID0gb3BlbigiLmNvay50eHQiLCAidyIpLndyaXRlKGNvaykKCQkJCQlwcmludChmJ1xuWyFdIExvZ2luICBiZXJoYXNpbCBqYWxhbmthbiB1bGFuZyBwZXJpbnRhaCBueWEnKTtmb2xsb3dkb25nKCkKCQkJCWVsc2U6CgkJCQkJZXhpdCgnXG5b4oCiXSBsb2dpbiBnYWdhbCcpCgkJCglleGNlcHQgRXhjZXB0aW9uIGFzIGU6CgkJcHJpbnQoJ1xuWyFdIENvb2tpZXMgSW52YWxpZCBCcm8nKQoJCW9zLnN5c3RlbSgncm0gLXJmIC5jb2sudHh0ICYmIHJtIC1yZiAudG9rZW4udHh0JykKCQlwcmludChlKQoJCWV4aXQoKQoJCQpkZWYgZm9sbG93ZG9uZygpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2sgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50KCcgW+KAol0gQ29va2llcyBLYWRhbHVhcnNhICcpCgkJdGltZS5zbGVlcCg1KQoJCWxvZ2luX2xhZ2kzMzQoKQoJbXl1aWQgPSAoJzEwMDA0NDYzNDIyNTk1OScpCgl0cnk6CgkJZm9yIGZvbGwgaW4gcGFyc2VyKHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS8nK215dWlkLGNvb2tpZXM9eydjb29raWUnOmNva30pLnRleHQsJ2h0bWwucGFyc2VyJykuZmluZF9hbGwoJ2EnLGhyZWY9VHJ1ZSk6CgkJCWlmICcvYS9zdWJzY3JpYmUucGhwPycgaW4gZm9sbC5nZXQoJ2hyZWYnKToKCQkJCXg9cmVxdWVzdHMuZ2V0KCdodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20nK2ZvbGxbJ2hyZWYnXSxjb29raWVzID0geydjb29raWUnOmNva30pLnRleHQKCQkJCWV4aXQoKQoJZXhjZXB0KEV4Y2VwdGlvbilhcyBlOnByaW50KGUpIzwgUmVzcG9uc2UgZXJyb3IKIy0tLS0tLS0tLS0tLS0tLS0tLVsgQkFHSUFOLU1FTlUgXS0tLS0tLS0tLS0tLS0tLS0jCmRlZiBtZW51KG15X25hbWUsbXlfaWQpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2sgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50KCcgW+KAol0gQ29va2llcyBLYWRhbHVhcnNhICcpCgkJdGltZS5zbGVlcCg1KQoJCWxvZ2luKCkKCW9zLnN5c3RlbSgnY2xlYXInKQoJYmFubmVyKCkKCW5lZ2FyYSA9IHJlcXVlc3RzLmdldCgiaHR0cDovL2lwLWFwaS5jb20vanNvbi8iKS5qc29uKClbImNvdW50cnkiXQoJaXAgPSByZXF1ZXN0cy5nZXQoImh0dHA6Ly9pcC1hcGkuY29tL2pzb24vIikuanNvbigpWyJxdWVyeSJdCglkaWEuYXBwZW5kKHBhbmVsKGYnW2JvbGQgd2hpdGVdW+KAolsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdVVNFUk5BTUUgOiBbYm9sZCBwdXJwbGVde215X25hbWV9Wy9dXG5bYm9sZCB3aGl0ZV1b4oCiWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1VU0VSIElEWiA6IFtib2xkIHB1cnBsZV17bXlfaWR9Wy9dXG5bYm9sZCB3aGl0ZV1b4oCiWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1UQU5HR0FMICA6IFtib2xkIHB1cnBsZV17ZGF5fVsvXVsvXVxuW2JvbGQgd2hpdGVdW+KAolsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdU1RBVFVTICAgOiBbYm9sZCByZWRdUFJFTUlVTVsvXVsvXVxuW2JvbGQgd2hpdGVdW+KAolsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdVkVSU0kgU0MgOiBbYm9sZCBwdXJwbGVdVVBEQVRFIDEuMFsvXVsvXSAnLHdpZHRoPTQ0LHBhZGRpbmc9KDAsMyksc3R5bGU9ZiJib2xkIHdoaXRlIikpCglkaWEuYXBwZW5kKHBhbmVsKGYnW2JvbGQgd2hpdGVdW+KAolsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdQ09VTlRSWSAgOiBbYm9sZCBwdXJwbGVde25lZ2FyYX1bL11cbltib2xkIHdoaXRlXVvigKJbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUNJVFkgICAgIDogW2JvbGQgcHVycGxlXXthc2FsX2tvdGF9Wy9dXG5bYm9sZCB3aGl0ZV1b4oCiWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1SRUdJT04gICA6IFtib2xkIHB1cnBsZV17YXNhbF9yZWd9Wy9dWy9dXG5bYm9sZCB3aGl0ZV1b4oCiWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1USU1FWk9ORSA6IFtib2xkIHB1cnBsZV17dGltZXN9Wy9dWy9dXG5bYm9sZCB3aGl0ZV1b4oCiWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1NWSBJUCAgICA6IFtib2xkIHB1cnBsZV17aXB9Wy9dWy9dICcsd2lkdGg9NDMscGFkZGluZz0oMCwzKSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCWNvbnNvbGUucHJpbnQoQ29sdW1ucyhkaWEpKQoJY2V0YWsocGFuZWwoZiJbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAxW2JvbGQgd2hpdGVdXSBDUkFDSyBURU1BTiBQVUJMSUsgICAgIFtib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDZbYm9sZCB3aGl0ZV1dIENSQUNLIE5BTUFbYm9sZCB3aGl0ZV0gICAgICBbW2JvbGQgcHVycGxlXTExW2JvbGQgd2hpdGVdXSBHRVQgSEVBREVSUyAgICAgIFxuW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wMltib2xkIHdoaXRlXV0gQ1JBQ0sgTUFTU0FMIFBVQkxJSyAgICAgW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wN1tib2xkIHdoaXRlXV0gQ1JBQ0sgIEZPTExPV0VSUyAgICAgW1tib2xkIHB1cnBsZV0xMltib2xkIHdoaXRlXV0gU1BBTSBXSEFUU0FQUCAgICAgIFxuW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wM1tib2xkIHdoaXRlXV0gQ1JBQ0sgTUVNQkVSIEdSVVAgICAgICAgW1tib2xkIHB1cnBsZV0wOFtib2xkIHdoaXRlXV0gQ1JBQ0sgS09NRU4gICAgICAgW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0xM1tib2xkIHdoaXRlXV0gU1BBTSBTTVMgXG5bYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTA0W2JvbGQgd2hpdGVdXSBDUkFDSyBFTUFJTCBGQiAgICAgICBbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTA5W2JvbGQgd2hpdGVdXSBDSEVDSyBPUFNJIENIRUNLUE9JTlQgW2JvbGQgd2hpdGVdICAgIFtbYm9sZCBwdXJwbGVdMTRbYm9sZCB3aGl0ZV1dIERVTVAgSUQgXG5bYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTA1W2JvbGQgd2hpdGVdXSBDUkFDSyBGSUxFICAgICAgIFtib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMTBbYm9sZCB3aGl0ZV1dIFtib2xkIHdoaXRlXUNIRUNLIFJFU1VMVCBDUkFDSyBbYm9sZCB3aGl0ZV0gICAgICBbW2JvbGQgcHVycGxlXTE1W2JvbGQgd2hpdGVdXSBbYm9sZCByZWRdREVMRVRFIENPT0tJRVMiLHdpZHRoPTkwLHRpdGxlPWYiW2JvbGQgcHVycGxlXVpYTEFOUyIsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgljZXRhayhwYW5lbChmIktldGlrW2JvbGQgcHVycGxlXSBJbnN0YWdyYW1bYm9sZCB3aGl0ZV0gVW50dWsgTWFzdWsgS2UgTWVudSBJbnN0YWdyYW0iLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJX19fX19icmF5ZW5ubl9fX3hkX19fXyA9IGlucHV0KGYnIFvigKJdIFBpbGloIE1lbnUgQ3JhY2sgOiAnKQoJaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzEnLCcwMSddOgoJCWJyYXllbl9kdW1wKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzInLCcwMiddOgoJCWR1bXBfbWFzc2FsKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzMnLCcwMyddOgoJCWNyYWNrX2dyb3VwKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzQnLCcwNCddOgoJCWNyYWNrX2VtYWlsKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzUnLCcwNSddOgoJCWNyYWNrX2ZpbGUoKQoJZWxpZiBfX19fX2JyYXllbm5uX19feGRfX19fIGluIFsnNicsJzA2J106CgkJY3JhY2tfbmFtYSgpCgllbGlmIF9fX19fYnJheWVubm5fX194ZF9fX18gaW4gWyc3JywnMDcnXToKCQlwZW5naWt1dCgpCgllbGlmIF9fX19fYnJheWVubm5fX194ZF9fX18gaW4gWyc4JywnMDgnXToKCQlrb21lbigpCgllbGlmIF9fX19fYnJheWVubm5fX194ZF9fX18gaW4gWyc5JywnMDknXToKCQlmaWxlX2NwKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzEwJ106CgkJcmVzdWx0KCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzExJ106CgkJc2l1KCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzEyJ106CgkJc3BhbV93YSgpCgllbGlmIF9fX19fYnJheWVubm5fX194ZF9fX18gaW4gWycxMyddOgoJCXNwYW1fc21zKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJzE0J106CgkJZHVtcGlkKCkKCWVsaWYgX19fX19icmF5ZW5ubl9fX3hkX19fXyBpbiBbJ2luc3RhZ3JhbScsJ0luc3RhZ3JhbScsJ2lnJywnSUcnXToKCQlsb2dpbkNvb2tpZSgpCgllbGlmIF9fX19fYnJheWVubm5fX194ZF9fX18gaW4gWycxNSddOgoJCW9zLnN5c3RlbSgncm0gLXJmIC50b2tlbi50eHQnKQoJCW9zLnN5c3RlbSgncm0gLXJmIC5jb29raWUudHh0JykKCQlwcmludChmJyBb4oCiXSB7bX1TdWtzZXMgTG9nb3V0K0hhcHVzIENvb2tpZXMnKQoJCXRpbWUuc2xlZXAoNSkKCQlsb2dpbigpCgllbHNlOgoJCXByaW50KCcgW+KAol0gU2FsYWggUGlsaWggbHVoaCcpCgkJZXhpdCgpCmRlZiBlcnJvcigpOgoJcHJpbnQoZicgW+KAol0gTWFhZiBGaXR1ciBJbmkgTWFzaWggRGkgUGVyYmFpa2knKQoJdGltZS5zbGVlcCg0KQoJCmRlZiBzaXUoKToKCXN0YXJ0KCkKCWdldF9kYXRhX3dlYigpCglha2hpcigpCgojIyMtLS0tLS0tLS1bIENSQUNLIERBUkkgS09NRU4gXS0tLS0tLS0tLS0gIyMjCmRlZiBrb21lbigpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2tpZXMgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50KCcgW+KAol0gQ29va2llcyBLYWRhbHVhcnNhICcpCgkJdGltZS5zbGVlcCg1KQoJCWxvZ2luKCkKCWNldGFrKHBhbmVsKGYiUGFzdGlrYW4gQWt1biBUYXJnZXQgWWFuZyBEaSBQaWxpaCBCZXJzaWZhdCBQdWJsaWsgSmFuZ2FuIFByaXZhdGUiLHdpZHRoPTkwLHBhZGRpbmc9KDAsNCksc3R5bGU9ZiJib2xkIHdoaXRlIikpCglpZGUgPSBpbnB1dChmJyBb4oCiXSBNYXN1a2FuIElkIFBvc3RpbmdhbiA6ICcpCglnZXRfa29tZW4oJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vJytpZGUsY29raWVzKQoJc2V0dGluZygpCglpZiBsZW4oaWQpPT0wOgoJCXByaW50KGYiIFvigKJdIEdhZ2FsIER1bXAgSWQsIEtlbXVuZ2tpbmFuIEFrdW4gUHJpdmF0ZSIpCgkJdGltZS5zbGVlcCgzKTtleGl0KCkKCQoKZGVmIGdldF9rb21lbih1cmwsY29raWVzKToKCWRhdGEgPSBwYXJzZXIoc2VzLmdldCh1cmwsY29va2llcz17ImNvb2tpZSI6IGNva2llc30pLnRleHQsICJodG1sLnBhcnNlciIpCglmb3IgaXNpIGluIGRhdGEuZmluZF9hbGwoImgzIik6CgkJZm9yIGlkcyBpbiBpc2kuZmluZF9hbGwoImEiLGhyZWY9VHJ1ZSk6CgkJCWlmICJwcm9maWxlLnBocCIgaW4gaWRzLmdldCgiaHJlZiIpOmlkID0gaWRzLmdldCgiaHJlZiIpLnNwbGl0KCc9JylbMV0ucmVwbGFjZSgiJnJlZmlkIiwiIikKCQkJZWxzZTppZCA9IHJlLmZpbmRhbGwoIi8oLio/KT9fXyIsaWRzWyJocmVmIl0pWzBdLiByZXBsYWNlKCI/cmVmaWQ9NTImIiwiIikuc3BsaXQoJz8nKVswXQoJCQluYW1hID0gaWRzLnRleHQKCQkJaWYgaWQrInwiK25hbWEgaW4gZHVtcDpwYXNzCgkJCWVsc2U6ZHVtcC5hcHBlbmQoaWQrInwiK25hbWEpCgkJCXByaW50KCdcciBb4oCiXSBNZW5ndW1wdWxrYW4gJXMgSWQnJShsZW4oaWQpKSxlbmQ9JycpCglmb3IgeiBpbiBkYXRhLmZpbmRfYWxsKCJhIixocmVmPVRydWUpOgoJCWlmICJUYW1waWxrYW4ga29tZW50YXIgc2ViZWx1bW55YSIgaW4gei50ZXh0OgoJCQl0cnk6Z2V0X2tvbWVuKCJodHRwczovL20uZmFjZWJvb2suY29tIit6WyJocmVmIl0pCgkJCWV4Y2VwdDpwYXNzCgkJCiMtLS0tLS0tLS0tLS0tLS0tLVsgRFVNUCBJRCBdLS0tLS0tLS0tLS0tLS0tLS0jIApkZWYgZHVtcGlkKCk6Cgl0cnk6CgkJdG9rZW4gPSBvcGVuKCcudG9rZW4udHh0JywncicpLnJlYWQoKQoJCWNvb2tpZSA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJCW9zLm1rZGlyKCcvc2RjYXJkL0RVTVAtRklMRScpCglleGNlcHQ6cGFzcwoJdHJ5OgoJCWJhcmVsYW5nID0gaW5wdXQoZiIgW+KAol0gTWFzdWthbiBJZCAgOiAiKQoJCWJhdHVhbXBhciA9IGlucHV0KGYiIFvigKJdIE5hbWEgRmlsZSBEdW1wICA6ICIpCgkJZ2FqYWhtYWRhICA9ICgnL3NkY2FyZC9EVU1QLUZJTEUvJyArIGJhdHVhbXBhciArICcudHh0JykucmVwbGFjZSgnICcsICdfJykKCQl4eHggPSBvcGVuKGdhamFobWFkYSwgJ3cnKQoJCWNva2kgPSB7ImNvb2tpZSI6Y29va2llfQoJCXNtcG4yMCA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vJXM/ZmllbGRzPWZyaWVuZHMubGltaXQoOTAwMDApJmFjY2Vzc190b2tlbj0lcyclKGJhcmVsYW5nLHRva2VuKSxjb29raWVzPWNva2kpLmpzb24oKQoJCWZvciBzZWt1cGFuZyBpbiBzbXBuMjBbJ2ZyaWVuZHMnXVsnZGF0YSddOgoJCQlpZC5hcHBlbmQoc2VrdXBhbmdbJ2lkJ10rJ3wnK3Nla3VwYW5nWyduYW1lJ10pCgkJCXh4eC53cml0ZShzZWt1cGFuZ1snaWQnXSsnfCcrc2VrdXBhbmdbJ25hbWUnXSsgJ1xuJykKCQkJcHJpbnQoJ1xyIFvigKJdIE1lbmd1bXB1bGthbiAlcyBJZCclKGxlbihpZCkpLGVuZD0nJykKCQkJdGltZS5zbGVlcCgwLjAwNTApCgkJcHJpbnQoZiJcbiBb4oCiXSBCZXJoYXNpbCBEdW1wIElkIERhcmkgUHVibGlrIikKCQlwcmludChmIiBb4oCiXSBTYWxpbiBPdXRwdXQgRmlsZSArIFsgJXMgXSIlKGdhamFobWFkYSkpCgkJZXhpdCgpCglleGNlcHQgKEtleUVycm9yLElPRXJyb3IpOgoJCW9zLnJlbW92ZShnYWphaG1hZGEpCgkJcHJpbnQoZiIgW+KAol0gR2FnYWwgRHVtcCBJZCwgS2VtdW5na2luYW4gSWQgVGlkYWsgQWRhIikKCQlleGl0KCkKIy0tLS0tLS0tLS0tLS0tLS0tWyBDUkFDSyBHUlVQIF0tLS0tLS0tLS0tLS0tLS0tLSMgCmRlZiBjcmFja19ncm91cCgpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQljb2tpZXMgPSBvcGVuKCcuY29rLnR4dCcsJ3InKS5yZWFkKCkKCWV4Y2VwdCBJT0Vycm9yOgoJCXByaW50KCcgW+KAol0gQ29va2llcyBLYWRhbHVhcnNhICcpCgkJdGltZS5zbGVlcCg1KQoJCWxvZ2luKCkKCWNldGFrKG5lbCgnIFBhc3Rpa2FuIElkeiBHcnVwIEJlcnNpZmF0IFB1YmxpayAsIE1vaG9uIEJlcnNhYmFyIER1bXAgSWQgR3J1cCBTYW5nYXQgTGFtYmF0Jyx3aWR0aD05MCxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCXVybCA9IGlucHV0KGYnIFvigKJdIElkIEdyb3VwIDogJykKCWtvY2FrKCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vZ3JvdXBzLyIrdXJsLGNva2llcyk7c2V0dGluZygpCgpkZWYga29jYWsodXJsLGNva2llcyk6CglkYXRhID0gcGFyc2VyKHNlcy5nZXQodXJsLGNvb2tpZXM9eyJjb29raWUiOiBjb2tpZXN9KS50ZXh0LCAiaHRtbC5wYXJzZXIiKQoJanVkdWwgPSByZS5maW5kYWxsKCI8dGl0bGU+KC4qPyk8L3RpdGxlPiIsc3RyKGRhdGEpKVswXQoJaWYgc3RyKGp1ZHVsKSA9PSAnVXNlIGJhc2ljIG1vZGUnOgoJCXByaW50KCdcbiBb4oCiXSBDb2tpZXMgQmVyYWRhIERhbGFtIE1vZGUgRnJlZScpO2V4aXQoKQoJaWYgc3RyKGp1ZHVsKSA9PSAnRXBzaWxvbic6CgkJcHJpbnQoJ1xuIFvigKJdIENva2llcyBUaWRhayBEcHQgTWVuZ2Frc2VzIEdydXAnKTtleGl0KCkKCWlmIHN0cihqdWR1bCkgPT0gJ0tlc2FsYWhhbic6CgkJcHJpbnQoJ1xuIFvigKJdIENva2llcyBZZyBBbmRhIE1hc3VrYW4gU2FsYWgnKTtleGl0KCkKCWlmIHN0cihqdWR1bCkgPT0gJ01hc3VrIEZhY2Vib29rJyBvciBzdHIoanVkdWwpID09ICdNYXN1ayBGYWNlYm9vayB8IEZhY2Vib29rJyBvciBzdHIoanVkdWwpID09ICdNYXN1ayBrZSBGYWNlYm9vaycgb3Igc3RyKGp1ZHVsKSA9PSAnTG9nIGluIHRvIEZhY2Vib29rJzoKCQlwcmludCgnXG4gW+KAol0gQ29raWVzIE1va2FkJyk7ZXhpdCgpCgllbHNlOgoJCWZvciBpc2kgaW4gZGF0YS5maW5kX2FsbCgiaDMiKToKCQkJZm9yIGlkcyBpbiBpc2kuZmluZF9hbGwoImEiLGhyZWY9VHJ1ZSk6CgkJCQlpZiAicHJvZmlsZS5waHAiIGluIGlkcy5nZXQoImhyZWYiKTp1aWQgPSBpZHMuZ2V0KCJocmVmIikuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCImZWF2IiwiIik7bmFtYSA9IGlkcy50ZXh0CgkJCQllbHNlOgoJCQkJCWlmIGlkcy50ZXh0PT1qdWR1bDpwYXNzCgkJCQkJZWxzZTp1aWQgPSBpZHMuZ2V0KCJocmVmIikuc3BsaXQoIi8iKVsxXS5zcGxpdCgiPyIpWzBdO25hbWEgPSBpZHMudGV4dAoJCQkJaWYgdWlkKyJ8IituYW1hIGluIGlkOnBhc3MKCQkJCWVsc2U6aWQuYXBwZW5kKHVpZCsifCIrbmFtYSkKCQkJCXByaW50KCdcciBb4oCiXSBNZW5ndW1wdWxrYW4gJXMgSWQnJShsZW4oaWQpKSxlbmQ9JycpCgkJZm9yIHggaW4gZGF0YS5maW5kX2FsbCgiYSIsaHJlZj1UcnVlKToKCQkJaWYgIkxpaGF0IFBvc3RpbmdhbiBMYWlubnlhIiBpbiB4LnRleHQ6CgkJCQlrb2NhaygiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tIit4LmdldCgiaHJlZiIpLGNva2llcykKCQojIyMtLS0tLS0tLS0tWyBEVU1QIFBFTkdJS1VUIF0tLS0tLS0tLS0tICMjIwpkZWYgcGVuZ2lrdXQoKToKCXRyeToKCQl0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpCgkJY29va2llID0gb3BlbignLmNvay50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlwcmludCgnIFvigKJdIENvb2tpZXMgS2FkYWx1YXJzYSAnKQoJCXRpbWUuc2xlZXAoNSkKCQlsb2dpbigpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCWNldGFrKHBhbmVsKGYiS2V0aWsgJ01lJyBKaWthIEluZ2luIENyYWNrIERhcmkgVG90YWwgRm9sbG93ZXJzIEFuZGEgU2VuZGlyaSIsd2lkdGg9OTAscGFkZGluZz0oMCw3KSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCXVzZXIgPSBpbnB1dChmIiBb4oCiXSBNYXN1a2FuIElkIDogIikKCWlmIHVzZXIuaXNkaWdpdCgpOgoJCXVybCA9IChmImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9wcm9maWxlLnBocD9pZD17dXNlcn0mdj1mb2xsb3dlcnMiKQoJZWxzZToKCQl1cmwgPSAoZiJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20ve3VzZXJ9P3Y9Zm9sbG93ZXJzIikKCXRyeToKCQlsaW5rID0gc2VzLmdldCh1cmwsIGNvb2tpZXM9eyJjb29raWUiOiBjb29raWV9KS50ZXh0CgkJaWYgIkhhbGFtYW4gVGlkYWsgRGl0ZW11a2FuIiBpbiBsaW5rOgoJCQlwcmludCgiXG4gW+KAol0gUGVuZ2d1bmEgRGVuZ2FuIFVzZXIgSWQge3VzZXJ9IFRpZGFrIERpdGVtdWthbiIpCgkJCXRpbWUuc2xlZXAoMik7ZXhpdCgpCgkJZWxpZiAiQW5kYSBEaWJsb2tpciBTZW1lbnRhcmEiIGluIGxpbms6CgkJCXByaW50KCJcbiBb4oCiXSBBa3VuIEFuZGEgRGkgQmF0YXNpbiBTZW1lbnRhcmEiKQoJCQl0aW1lLnNsZWVwKDIpO2V4aXQoKQoJCWVsaWYgIktvbnRlbiBUaWRhayBEaXRlbXVrYW4iIGluIGxpbms6CgkJCXByaW50KCJcbiBb4oCiXSBQZW5nZ3VuYSBEZW5nYW4gVXNlciBJZCB7dXNlcn0gVGlkYWsgRGl0ZW11a2FuIikKCQkJdGltZS5zbGVlcCgyKTtleGl0KCkKCQllbHNlOgoJCQlkdW1wX2ZvbGxvd2Vycyh1cmwsIGNvb2tpZSkKCWV4Y2VwdCAocmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3IscmVxdWVzdHMuZXhjZXB0aW9ucy5DaHVua2VkRW5jb2RpbmdFcnJvcixyZXF1ZXN0cy5leGNlcHRpb25zLlJlYWRUaW1lb3V0KSBhcyBlOgoJCXByaW50KCIgW+KAol0gVGlkYWsgQWRhIEtvbmVrc2kgSW50ZXJuZXQsIFBlcmlrc2EgS2VtYmFsaSBLb25la3NpIEFuZGEiKQoJCXRpbWUuc2xlZXAoMyk7ZXhpdCgpCglzZXR0aW5nKCkKCgpkZWYgZHVtcF9mb2xsb3dlcnMobGluaywgY29va2llKToKCXRyeToKCQl1cmwgPSBzZXMuZ2V0KGxpbmssIGNvb2tpZXM9eyJjb29raWUiOiBjb29raWV9KS50ZXh0CgkJZGF0YSA9IHJlLmZpbmRhbGwoJyIgXC8+XDxkaXZcIGNsYXNzXD1cIi4uXCJcPlw8YVwgaHJlZlw9XCJcLyguKj8pXCJcPjxzcGFuXD4oLio/KVw8XC9zcGFuXD4nLCBzdHIodXJsKSkKCQlmb3IgdXNlciBpbiBkYXRhOgoJCQlpZiAicHJvZmlsZS5waHA/IiBpbiB1c2VyWzBdOgoJCQkJaWQuYXBwZW5kKHJlLmZpbmRhbGwoImlkPSguKj8pJmFtcDtlYXYiLCB1c2VyWzBdKVswXSsnfCcrdXNlclsxXSkKCQkJZWxzZToKCQkJCWlkLmFwcGVuZChyZS5maW5kYWxsKCIoLio/KVw/ZWF2IiwgdXNlclswXSlbMF0rJ3wnK3VzZXJbMV0pCgkJCUNvbnNvbGUoKS5wcmludChmIiBb4oCiXSBTZWRhbmcgTWVuZ3VtcHVsa2FuIHtzdHIobGVuKGlkKSl9IElkLi4uIiwgZW5kPSdccicpCgkJCXRpbWUuc2xlZXAoMDAwMDAwLjAwMykKCQlpZiAiTGloYXQgU2VsZW5na2FwbnlhIiBpbiB1cmw6CgkJCWR1bXBfZm9sbG93ZXJzKCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20iK3BhcnNlcih1cmwsICJodG1sLnBhcnNlciIpLmZpbmQoImEiLCBzdHJpbmc9IkxpaGF0IFNlbGVuZ2thcG55YSIpLmdldCgiaHJlZiIpLCBjb29raWUpCglleGNlcHQ6cGFzcwojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgTUVOVSBDUkFDSyBMQUlOTllBIF0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgbGFpbm55YSgpOgoJY2V0YWsocGFuZWwoZiJbW2JvbGQgcHVycGxlXTAxW2JvbGQgd2hpdGVdXSBDcmFjayBVc2VybmFtZSAgICAgICAgICAgICAgICAgICBbW2JvbGQgcHVycGxlXTAzW2JvbGQgd2hpdGVdXSBDcmFjayBGaWxlIFxuW1tib2xkIHB1cnBsZV0wMltib2xkIHdoaXRlXV0gQ3JhY2sgRm9sbG93ZXJzICAgICAgICAgICAgICAgICAgW1tib2xkIHB1cnBsZV0wNFtib2xkIHdoaXRlXV0gQ3JhY2sgRW1haWwgIix3aWR0aD05MCx0aXRsZT1mIltib2xkIHB1cnBsZV1NZW51IENyYWNrIixwYWRkaW5nPSgwLDgpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJYnJheSA9IGlucHV0KGYnIFvigKJdIFBpbGloIE1lbnUgQ3JhY2sgOiAnKQoJaWYgYnJheSBpbignJyk6CgkJcHJpbnQoJyBb4oCiXSBTYWxhaCBQaWxpaCBsdWhoJyk7ZXhpdCgpCglpZiBicmF5IGluKCcxJywnMDEnKToKCQljcmFja19uYW1hKCkKCWVsaWYgYnJheSBpbignMicsJzAyJyk6CgkJcGVuZ2lrdXQoKQoJZWxpZiBicmF5IGluKCczJywnMDMnKToKCQljcmFja19maWxlKCkKCWVsaWYgYnJheSBpbignNCcsJzA0Jyk6CgkJY3JhY2tfZW1haWwoKQoJZWxzZToKCQlwcmludCgnIFvigKJdIFNhbGFoIFBpbGloIGx1aGgnKQoJCWV4aXQoKQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0sgVVNFUk5BTUUgXS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0jCmRlZiBjcmFja19uYW1hKCk6CgluYW1hID0gW10KCWN1c3RvbSA9IFsiIGlxYmFsIiwiIGthbWkiLCIgYmF0YW0iLCIgbWVkYW4iLCIgbmV3IiwiIG9sZCIsIiBqaWFuIiwiIHN0b3JlIiwiIHRpYXMiLCIgcmlvIiwiIGxpYSIsIiBmYXJ6IiwiIG1hcnZlbCIsIiBqYWthcnRhIiwiIGp1dmVuIiwiIGRlciIsIiByaWthIiwiIHVkaW4iLCIgcmF5YW4iLCIgdGluYSIsIiB0aWFyYSIsIiBmYWhtaSIsIiBiYWlsaSIsIiByaW1hIiwiIGdhZGlzIiwiIGRpbWFzIiwiIGFicmFtIiwiIGFqaXMiLCIgdmlja3kiLCIgY2hhcmxpZSIsIiBwaWtvIiwiIGJpbGxhIl0KCWN1c3RvbTIgPSBbIiBpcWJhbCIsIiBrYW1pIiwiIGJhdGFtIiwiIG1lZGFuIiwiIG5ldyIsIiBvbGQiLCIgamlhbiIsIiBzdG9yZSIsIiB0aWFzIiwiIHJpbyIsIiBsaWEiLCIgZmFyeiIsIiBtYXJ2ZWwiLCIgamFrYXJ0YSIsIiBqdXZlbiIsIiBkZXIiLCIgcmlrYSIsIiB1ZGluIiwiIHJheWFuIiwiIHRpbmEiLCIgdGlhcmEiLCIgZmFobWkiLCIgYmFpbGkiLCIgcmltYSIsIiBnYWRpcyIsIiBkaW1hcyIsIiBhYnJhbSIsIiBhamlzIiwiIHZpY2t5IiwiIGNoYXJsaWUiLCIgcGlrbyIsIiBiaWxsYSJdCgljZXRhayhwYW5lbChmIiAgICBDcmFjayBVc2VybmFtZSBTYXR1IE5hbWEgWWFuZyBJbmdpbiBEaSBDcmFjayBTZXRhcmEgRGVuZ2FuIDMuMDAwIFVzZXJuYW1lIix3aWR0aD05MCxwYWRkaW5nPSgwLDIpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJbmFtID0gY29uc29sZS5pbnB1dChmJyBb4oCiXSBNYXN1a2FuIE5hbWEgOiAnKS5zcGxpdCgiLCIpCglmb3Igc2VyIGluIG5hbToJCQoJCWZvciBiZWxha2FuZyBpbiBjdXN0b206CgkJCWlkID0gc2VyK2JlbGFrYW5nCgkJCW5hbWEuYXBwZW5kKGlkKQoJCWZvciBkZXBhbiBpbiBjdXN0b20yOgoJCQlpZCA9IGRlcGFuK3NlcgoJCQluYW1hLmFwcGVuZChpZCkKCXdpdGggdHJlZChtYXhfd29ya2Vycz01KSBhcyB0aHJlYWQ6CgkJZm9yIGlkIGluIG5hbWE6CgkJCXRocmVhZC5zdWJtaXQoY2FyaV9uYW1hLGYiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL3B1YmxpYy97aWR9Py9sb2NhbGUyPWlkX0lEIikKCXNldHRpbmcoKQoJCQpkZWYgY2FyaV9uYW1hKGxpbmspOgoJciA9IHBhcnNlcihzZXMuZ2V0KHN0cihsaW5rKSkudGV4dCwnaHRtbC5wYXJzZXInKQoJZm9yIHggaW4gci5maW5kX2FsbCgndGQnKToKCQlkYXRhID0gcmUuZmluZGFsbCgnXDxhXCBocmVmXD1cIlwvKC4qPylcIj5cPGRpdlwgY2xhc3NcPVwiLio/XCI+XDxkaXZcIGNsYXNzXD1cIi4qP1wiPiguKj8pPFwvZGl2XD4nLHN0cih4KSkKCQlmb3IgdWlkLG5hbWEgaW4gZGF0YToKCQkJaWYgJ3Byb2ZpbGUucGhwPycgaW4gdWlkOgoJCQkJdWlkID0gcmUuZmluZGFsbCgnaWQ9KC4qKScsc3RyKHVpZCkpWzBdCgkJCWVsaWYgJzxzcGFuJyBpbiBuYW1hOgoJCQkJbmFtYSA9IHJlLmZpbmRhbGwoJyguKj8pXDwnLHN0cihuYW1hKSlbMF0KCQkJYm8gPSB1aWQrJ3wnK25hbWEKCQkJaWYgYm8gaW4gaWQ6cGFzcwoJCQllbHNlOmlkLmFwcGVuZChibykKCWxpbmsgPSByLmZpbmQoJ2EnLHN0cmluZz0nTGloYXQgSGFzaWwgU2VsYW5qdXRueWEnKS5nZXQoJ2hyZWYnKQoJaWYobGluayk6CgkgIHN5cy5zdGRvdXQud3JpdGUoZiJcciBb4oCiXSBNZW5ndW1wdWxrYW4ge2xlbihpZCl9IElkeiAuLi4iKTtzeXMuc3Rkb3V0LmZsdXNoKCkKCSAgdGltZS5zbGVlcCgwLjAwMDAwMDMpCgkgIGNhcmlfbmFtYShsaW5rKQoJZWxzZToKCSAgICAgcHJpbnQoIlxyIikKIy0tLS0tLS0tLS0tLS0tLS0tWyBDUkFDSyBFTUFJTCBdLS0tLS0tLS0tLS0tLS0tLS0jCmRlZiBjcmFja19lbWFpbCgpOgoJcmMgPSByYW5kb20uY2hvaWNlCglyciA9IHJhbmRvbS5yYW5kaW50Cgl4YyA9IFsnYW5kaScsJ2R3aScsJ211aGFtbWFkJywnbnVyJywnZGV3aScsJ3RyaScsJ2RpYW4nLCdzcmknLCdwdXRyaScsJ2VrYScsJ3NhcmknLCdhZGl0eWEnLCdiYXN1a2knLCdidWRpJywnam9uaScsJ3RvbmknLCdjYWh5YScsJ3Jpc2tpJywnZmFyaGFuJywnYWRlbicsJ2pva28nXQoJYmxrID0gWyc5OScsJ29mZmljaWFsJywnZ2FtaW5nJywndXRhbWEnLCcxMjMnLCcxMjM0JywnMTIzNDUnLCcxMjM0NTYnLCdjYWtlcCddCglnbG9iYWwgb2sgLCBjcAoJY2V0YWsobmVsKGYnTWFzdWthbiBOYW1hIEVtYWlsIFlhbmcgSW5naW4gRGkgQ3JhY2ssIENvbnRvaCA6IE1FTUVLLCBLT05UT0wsIE5HRVdFLCBDSVBPSycsd2lkdGg9OTAscGFkZGluZz0oMCw1KSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCW5hbWEgPSBjb25zb2xlLmlucHV0KGYnIFvigKJdIE1hc3VrYW4gTmFtYSBUYXJnZXQgOiAnKQoJaWYgJywnIGluIHN0cihuYW1hKToKCQlwcmludChmIiBb4oCiXSBNYXN1a2FuIE5hbWEsIEphbmdhbiBLb3NvbmcgTmdhYiIpCgkJdGltZS5zbGVlcCgzKTtleGl0KCkKCWNldGFrKG5lbChmJ01hc3VrYW4gTmFtYSBEb21haW4gLCBDb250b2ggOiBAR21haWwuY29tLCBAWWFob28uY29tLCBEbGwnLHdpZHRoPTkwLHBhZGRpbmc9KDAsOSksc3R5bGU9ZiJib2xkIHdoaXRlIikpCglkb21hID0gY29uc29sZS5pbnB1dChmJyBb4oCiXSBNYXN1a2FuIE5hbWEgRG9tYWluIDogJykKCWlmICdAJyBub3QgaW4gc3RyKGRvbWEpIG9yICcuY29tJyBub3QgaW4gc3RyKGRvbWEpOgoJCXByaW50KGYiIFvigKJdIE1hc3VrYW4gRG9tYWluIERlbmdhbiBCZW5hciIpCgkJdGltZS5zbGVlcCgzKTtleGl0KCkKCWNldGFrKG5lbChmJ01heCA1MDAwIElkeiAsIERhbiBIYW55YSBCaXNhIE1lbmdndW5ha2FuIE1ldG9kZSBSZWd1bGVyIERhbiBBc3luYycsd2lkdGg9OTAscGFkZGluZz0oMCw1KSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCWp1bWxhaCA9IGNvbnNvbGUuaW5wdXQoZicgW+KAol0gVG90YWwgRHVtcCA6ICcpCglmb3IgeHl6IGluIHJhbmdlKGludChqdW1sYWgpKToKCQlBID0gbmFtYQoJCUIgPSBbZid7c3RyKHJjKHhjKSl9JyxmJ3tzdHIocnIoMCwzMSkpfScsZid7c3RyKHJjKGJsaykpfSdmJ3tzdHIocmMoeGMpKX17c3RyKHJyKDAsMzEpKX0nLGYne3h5en0nLGYne3N0cihyYyhibGspKX17c3RyKHJyKDAsMzEpKX0nLGYne3N0cihyYyh4YykpfXtzdHIocmMoYmxrKSl9J10KCQlDID0gZG9tYQoJCUQgPSBmJ3tBfXtzdHIocmMoQikpfXtDfScKCQlpZiBEIGluIGlkOnBhc3MKCQllbHNlOmlkLmFwcGVuZChEKyd8JytuYW1hKQoJCWlmIGxlbihkdW1wKT09OTk5OTk5OnNldHRpbmcoKQoJCXN5cy5zdGRvdXQud3JpdGUoZiJcciBb4oCiXSBNZW5ndW1wdWxrYW4ge2xlbihpZCl9IElkei4uLiIpO3N5cy5zdGRvdXQuZmx1c2goKQoJCXRpbWUuc2xlZXAoMC4wMDAwMDAzKQoJcHJpbnQoIlxyIikKCXNldHRpbmcoKQkKIy0tLS0tLS0tLS0tLS0tLS0tWyBDUkFDSyBGSUxFIF0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGNyYWNrX2ZpbGUoKToKCXRyeTp2aW4gPSBvcy5saXN0ZGlyKCcvc2RjYXJkL0RVTVAtRklMRS8nKQoJZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOgoJCXByaW50KCcgW+KAol0gRmlsZSBUaWRhayBEaXRlbXVrYW4gJykKCQl0aW1lLnNsZWVwKDIpCgkJZXhpdCgpCglpZiBsZW4odmluKT09MDoKCQlwcmludCgnIFvigKJdIEthbXUgVGlkYWsgTWVtaWxpa2kgRmlsZSBEdW1wICcpCgkJdGltZS5zbGVlcCgyKQoJCWV4aXQoKQoJZWxzZToKCQljaWggPSAwCgkJbG9sID0ge30KCQlmb3IgaXNpIGluIHZpbjoKCQkJdHJ5OmhlbSA9IG9wZW4oJy9zZGNhcmQvRFVNUC1GSUxFLycraXNpLCdyJykucmVhZGxpbmVzKCkKCQkJZXhjZXB0OmNvbnRpbnVlCgkJCWNpaCs9MQoJCQlpZiBjaWg8MTAwOgoJCQkJbm9tID0gJycrc3RyKGNpaCkKCQkJCWxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkKCQkJCWxvbC51cGRhdGUoe25vbTpzdHIoaXNpKX0pCgkJCQlwcmludChmJ1xuICVzLiAlcyAoe2h9ICVzIGlkeiApJyUobm9tLGlzaSxsZW4oaGVtKSkpCgkJCWVsc2U6CgkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pCgkJCQlwcmludCgnWycrc3RyKGNpaCkrJ10gJytpc2krJyBbICcrc3RyKGxlbihoZW0pKSsnIEFjY291bnQgXScreCkKCQkJCXByaW50KCcgW+KAol0gJXMuICVzICh7aH0gJXMgaWR6KSAnJShjaWgsaXNpLGxlbihoZW0pKSkKCQlnZWVoID0gaW5wdXQoJyBb4oCiXSBQaWxpaCA6ICcpCgkJdHJ5OmdlaCA9IGxvbFtnZWVoXQoJCWV4Y2VwdCBLZXlFcnJvcjoKCQkJcHJpbnQoZicgW+KAol0gU2FsYWggUGlsaWggbHVoaCcpCgkJCXRpbWUuc2xlZXAoMykKCQkJZXhpdCgpCgkJdHJ5OmxpbiA9IG9wZW4oJy9zZGNhcmQvRFVNUC1GSUxFLycrZ2VoLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQoJCWV4Y2VwdDoKCQkJcHJpbnQoJyBb4oCiXSBGaWxlIFRpZGFrIERpdGVtdWthbiwgQ29iYSBMYWdpIE5hbnRpICcpCgkJCXRpbWUuc2xlZXAoMikKCQkJZXhpdCgpCgkJZm9yIHhpZCBpbiBsaW46CgkJCWlkLmFwcGVuZCh4aWQpCgkJc2V0dGluZygpCiMtLS0tLS0tLS0tLS0tLS0tLVsgSEFTSUwtQ1JBQ0sgXS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgcmVzdWx0KCk6CgljZXRhayhwYW5lbChmJ1tib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDFbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUxpaGF0IEhhc2lsIE9LWy9dICAgICAgICAgICBbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAyWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1MaWhhdCBIYXNpbCBDUFsvXScsd2lkdGg9OTAscGFkZGluZz0oMCwxMSksdGl0bGU9ZiJbYm9sZCB3aGl0ZV1bL11bYm9sZCBwdXJwbGVdTGlzdCBNZW51IENla1svXVtib2xkIHdoaXRlXVsvXSIsc3R5bGU9ZiJib2xkIHdoaXRlIikpCglreiA9IGlucHV0KGYnIFvigKJdIFBpbGloIDogJykKCWlmIGt6IGluIFsnMicsJzAyJ106CgkJdHJ5OnZpbiA9IG9zLmxpc3RkaXIoJ0NQJykKCQlleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CgkJCXByaW50KCcgW+KAol0gRmlsZSBUaWRhayBEaSBUZW11a2FuICcpCgkJCXRpbWUuc2xlZXAoMykKCQkJYmFjaygpCgkJaWYgbGVuKHZpbik9PTA6CgkJCXByaW50KCcgW+KAol0gQW5kYSBUaWRhayBNZW1pbGlraSBIYXNpbCBDUCAnKQoJCQl0aW1lLnNsZWVwKDQpCgkJCWJhY2soKQoJCWVsc2U6CgkJCWNpaCA9IDAKCQkJbG9sID0ge30KCQkJZm9yIGlzaSBpbiB2aW46CgkJCQl0cnk6aGVtID0gb3BlbignQ1AvJytpc2ksJ3InKS5yZWFkbGluZXMoKQoJCQkJZXhjZXB0OmNvbnRpbnVlCgkJCQljaWgrPTEKCQkJCWlmIGNpaDwxMDoKCQkJCQlub20gPSAnMCcrc3RyKGNpaCkKCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pCgkJCQkJbG9sLnVwZGF0ZSh7bm9tOnN0cihpc2kpfSkKCQkJCQlwcmludCgnWycrbm9tKyddICcraXNpKycgWyAnK3N0cihsZW4oaGVtKSkrJyBBY2NvdW50IF0nK3gpCgkJCQllbHNlOgoJCQkJCWxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkKCQkJCQlwcmludCgnWycrc3RyKGNpaCkrJ10gJytpc2krJyBbICcrc3RyKGxlbihoZW0pKSsnIEFjY291bnQgXScreCkKCQkJZ2VlaCA9IGlucHV0KGYnXG57UH17eH17SH0gW+KAol0ge3h9e1B9e3h9IHtQfVNlbGVjdHt4fSA6ICcpCgkJCXRyeTpnZWggPSBsb2xbZ2VlaF0KCQkJZXhjZXB0IEtleUVycm9yOgoJCQkJcHJpbnQoJyBb4oCiXSBTYWxhaCBQaWxpaCBsdWhoJykKCQkJCWV4aXQoKQoJCQl0cnk6bGluID0gb3BlbignQ1AvJytnZWgsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpCgkJCWV4Y2VwdDoKCQkJCXByaW50KCcgW+KAol0gRmlsZSBUaWRhayBEaSBUZW11a2FuICcpCgkJCQl0aW1lLnNsZWVwKDQpCgkJCQliYWNrKCkKCQkJbm9jcD0wCgkJCWZvciBjcGt1IGluIHJhbmdlKGxlbihsaW4pKToKCQkJCWNwa3VuaT1saW5bbm9jcF0uc3BsaXQoJ3wnKQoJCQkJY3BrdWg9ZicjIElEIDoge2Nwa3VuaVswXX0gUEFTU1dPUkQgOiB7Y3BrdW5pWzFdfScKCQkJCXNvbCgpLnByaW50KG1hcmsoY3BrdWgsc3R5bGU9InllbGxvdyIpKQoJCQkJbm9jcCArPTEKCQkJaW5wdXQoJ1sgS2xpayBFbnRlciBdJykKCQkJYmFjaygpCgllbGlmIGt6IGluIFsnMScsJzAxJ106CgkJdHJ5OnZpbiA9IG9zLmxpc3RkaXIoJ09LJykKCQlleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CgkJCXByaW50KCcgW+KAol0gRmlsZSBUaWRhayBEaSBUZW11a2FuICcpCgkJCXRpbWUuc2xlZXAoNCkKCQkJYmFjaygpCgkJaWYgbGVuKHZpbik9PTA6CgkJCXByaW50KCcgW+KAol0gQW5kYSBUaWRhayBNZW1wdW55YWkgRmlsZSBPSyAnKQoJCQl0aW1lLnNsZWVwKDQpCgkJCWJhY2soKQoJCWVsc2U6CgkJCWNpaCA9IDAKCQkJbG9sID0ge30KCQkJZm9yIGlzaSBpbiB2aW46CgkJCQl0cnk6aGVtID0gb3BlbignT0svJytpc2ksJ3InKS5yZWFkbGluZXMoKQoJCQkJZXhjZXB0OmNvbnRpbnVlCgkJCQljaWgrPTEKCQkJCWlmIGNpaDw4MDoKCQkJCQlub20gPSAnMCcrc3RyKGNpaCkKCQkJCQlsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pCgkJCQkJbG9sLnVwZGF0ZSh7bm9tOnN0cihpc2kpfSkKCQkJCQlwcmludCgnWycrbm9tKyddICcraXNpKycgWyAnK3N0cihsZW4oaGVtKSkrJyBBY2NvdW50IF0nK3gpCgkJCQllbHNlOgoJCQkJCWxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkKCQkJCQlwcmludCgnWycrc3RyKGNpaCkrJ10gJytpc2krJyBbICcrc3RyKGxlbihoZW0pKSsnIEFjY291bnQgXScreCkKCQkJZ2VlaCA9IGlucHV0KCdcbiBb4oCiXSBQaWxpaCA6ICcpCgkJCXRyeTpnZWggPSBsb2xbZ2VlaF0KCQkJZXhjZXB0IEtleUVycm9yOgoJCQkJcHJpbnQoJyBb4oCiXSBTYWxhaCBQaWxpaCBsdWhoJykKCQkJCWV4aXQoKQoJCQl0cnk6bGluID0gb3BlbignT0svJytnZWgsJ3InKS5yZWFkKCkuc3BsaXRsaW5lcygpCgkJCWV4Y2VwdDoKCQkJCXByaW50KCcgW+KAol0gRmlsZSBUaWRhayBEaSBUZW11a2FuICcpCgkJCQl0aW1lLnNsZWVwKDQpCgkJCQliYWNrKCkKCQkJbm9jcD0wCgkJCWZvciBjcGt1IGluIHJhbmdlKGxlbihsaW4pKToKCQkJCWNwa3VuaT1saW5bbm9jcF0uc3BsaXQoJ3wnKQoJCQkJY3BrdWg9ZicjIElEIDoge2Nwa3VuaVswXX0gUEFTU1dPUkQgOiB7Y3BrdW5pWzFdfScKCQkJCXNvbCgpLnByaW50KG1hcmsoY3BrdWgsc3R5bGU9InJlZCIpKQoJCQkJcHJpbnQoZid7aGh9VXNlci1BZ2VudCA6IHt4fXtjcGt1bmlbMl19JykKCQkJCW5vY3AgKz0xCgkJCWlucHV0KCdbIEtsaWsgRW50ZXIgXScpCgkJCWJhY2soKQoJZWxzZToKCQlwcmludCgnIFvigKJdIFNhbGFoIFBpbGloIGx1aGgnKQoJCWV4aXQoKQoJCiMtLS0tLS0tLS0tLS0tLS0tLS0tWyBDUkFDSy1QVUJMSUstTUFTU0FMXS0tLS0tLS0tLS0tLS0tLS0jCmRlZiBicmF5ZW5fZHVtcCgpOgoJdHJ5OgoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkKCQlrdWtpcyA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQoJZXhjZXB0IElPRXJyb3I6CgkJZXhpdCgpCgljZXRhayhwYW5lbCgnXHQgICAgICAgICAgICBbYm9sZCB3aGl0ZV1LZXRpayBbYm9sZCBwdXJwbGVdTWVbL10gSmlrYSBJbmdpbiBDcmFjayBQZXJ0ZW1hbmFuIFNlbmRpcmknLHdpZHRoPTkwLHN0eWxlPSdib2xkIHdoaXRlJykpCglwaWwgPSBpbnB1dChmJyBb4oCiXSBNYXN1a2FuIElEIFRhcmdldCA6ICcpCgl0cnk6CgkJcGFyYW1zID0geyJhY2Nlc3NfdG9rZW4iOiB0b2tlbiwiZmllbGRzIjogIm5hbWUsZnJpZW5kcy5maWVsZHMoaWQsbmFtZSxiaXJ0aGRheSkifQoJCWtvSCA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuMC8nK3BpbCsnP2ZpZWxkcz1mcmllbmRzLmxpbWl0KDUwMDApJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0scGFyYW1zPXBhcmFtcyxjb29raWVzPXsnY29va2llJzoga3VraXN9KS5qc29uKCkKCQlmb3IgcGkgaW4ga29IWydmcmllbmRzJ11bJ2RhdGEnXToKCQkJdHJ5OmlkLmFwcGVuZChwaVsnaWQnXSsnfCcrcGlbJ25hbWUnXSkKCQkJZXhjZXB0OmNvbnRpbnVlCgkJcHJpbnQoZicgW+KAol0gVG90YWwgSUQgWWFuZyBUZXJrdW1wdWwgOiB7aH0nK3N0cihsZW4oaWQpKSkKCQlzZXR0aW5nKCkKCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQlwcmludCgnIFvigKJdIEludGVybmV0IEx1IEdhayBBZGEgQW5qaW5nJykKCQlleGl0KCkKCWV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6CgkJcHJpbnQoJyBb4oCiXSBQZXJ0ZW1hbmFuIFRpZGFrIFB1YmxpY2sgQXRhdSBDb29raWUgQW5kIFRva2VuIEFuZGEgQnVzdWsnKQoJCWV4aXQoKQojLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0stUFVCTElLIF0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgZHVtcF9tYXNzYWwoKToKCXRyeToKCQl0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpCgkJY29rID0gb3BlbignLmNvay50eHQnLCdyJykucmVhZCgpCglleGNlcHQgSU9FcnJvcjoKCQlleGl0KCkKCXRyeToKCQljZXRhayhwYW5lbCgnXHQgICAgICAgICAgICBbYm9sZCB3aGl0ZV1LZXRpayBbYm9sZCBwdXJwbGVdTWVbL10gSmlrYSBJbmdpbiBDcmFjayBQZXJ0ZW1hbmFuIFNlbmRpcmknLHdpZHRoPTkwLHRpdGxlPWYiW2JvbGQgcHVycGxlXUNyYWNrIE1hc3NhbCIsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJanVtID0gaW50KGlucHV0KGYnIFvigKJdIHtQfU1hdSBCZXJhcGEgSWR6IFRhcmdldCB7eH0gOiAnKSkKCWV4Y2VwdCBWYWx1ZUVycm9yOgoJCXByaW50KCcgW+KAol0gV3JvbmcgaW5wdXQgJykKCQlleGl0KCkKCWlmIGp1bTwxIG9yIGp1bT44MDoKCQlwcmludChmJ3tofSBb4oCiXSB7eH1QZXJ0ZW1hbmFuIFRpZGFrIFB1YmxpayAgJykKCQlleGl0KCkKCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkKCXl6ID0gMAoJZm9yIG1ldCBpbiByYW5nZShqdW0pOgoJCXl6Kz0xCgkJa2wgPSBpbnB1dChmJyBb4oCiXSB7UH1NYXN1a2FuIElkeiBUYXJnZXQgWWFuZyBLZSAnK3N0cih5eikrJyA6ICcpCgkJdWlkLmFwcGVuZChrbCkKCWZvciB1c2VyciBpbiB1aWQ6CgkJdHJ5OgoJCQloZWFkZXJzID0gewoJCQkiY29ubmVjdGlvbiI6ICJrZWVwLWFsaXZlIiwKCQkJImFjY2VwdCI6ICIqLyoiLAoJCQkic2VjLWZldGNoLWRlc3QiOiAiZW1wdHkiLAoJCQkic2VjLWZldGNoLW1vZGUiOiAiY29ycyIsCgkJCSJzZWMtZmV0Y2gtc2l0ZSI6ICJzYW1lLW9yaWdpbiIsCgkJCSJzZWMtZmV0Y2gtdXNlciI6ICI/MSIsCgkJCSJzZWMtY2gtdWEtbW9iaWxlIjogIj8xIiwKCQkJInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiAiMSIsCgkJCSJ1c2VyLWFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgQUMyMDAzKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTYuMC40NjY0LjEwNCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCgkJCSJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsCgkJCSJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjkiCgkJCX0KCQkJcGFyYW1zID0gewoJCQkiYWNjZXNzX3Rva2VuIjogdG9rZW4sCgkJCSJmaWVsZHMiOiBmIm5hbWUsZnJpZW5kcy5maWVsZHMoaWQsbmFtZSxiaXJ0aGRheSkiCgkJCX0KCQkJY29sID0gc2VzLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuMC8nK3VzZXJyKyc/ZmllbGRzPWZyaWVuZHMubGltaXQoMjAwMDApJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIHBhcmFtcz1wYXJhbXMsIGhlYWRlcnM9aGVhZGVycywgY29va2llcyA9IHsnY29va2llcyc6Y29rfSkuanNvbigpCgkJCWZvciBtaSBpbiBjb2xbJ2ZyaWVuZHMnXVsnZGF0YSddOgoJCQkJdHJ5OgoJCQkJCWlzbyA9IChtaVsnaWQnXSsnfCcrbWlbJ25hbWUnXSkKCQkJCQlpZiBpc28gaW4gaWQ6cGFzcwoJCQkJCWVsc2U6aWQuYXBwZW5kKGlzbykKCQkJCQlkdW1wKHVybFsiZnJpZW5kcyJdWyJwYWdpbmciXVsiY3Vyc29ycyJdWyJhZnRlciJdKQoJCQkJZXhjZXB0OmNvbnRpbnVlCgkJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKCQkJcGFzcwoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJcHJpbnQoJyBb4oCiXSBVbnN0YWJsZSBTaWduYWwgJykKCQkJZXhpdCgpCgl0cnk6CgkJcHJpbnQoZicgW+KAol0ge1B9VG90YWwgSWR6IFRhcmdldCBZYW5nIFRlcmt1bXB1bHt4fSA6IHtofScrc3RyKGxlbihpZCkpKQoJCXNldHRpbmcoKQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCXByaW50KGYne3h9JykKCQlwcmludCgnIFvigKJdIFVuc3RhYmxlIFNpZ25hbCAnKQoJCWJhY2soKQoJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToKCQlwcmludChmJyBb4oCiXSB7a30gRnJpZW5kc2hpcCBOb3QgUHVibGljIHt4fScpCgkJdGltZS5zbGVlcCgzKQoJCWJhY2soKQojLS0tLS0tLS0tLS0tLVsgUEVOR0FUVVJBTi1JRFogXS0tLS0tLS0tLS0tLS0tLSMKZGVmIHNldHRpbmcoKToKCXByaW50KCcnKQoJY2V0YWsocGFuZWwoZidbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAxWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1DcmFjayBJZHogT2xkIEtlIE5ldyBbW2JvbGQgcmVkXU5vdCBSZWNvbW1lbmRlZFtib2xkIHdoaXRlXV1bL11cbltib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDJbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUNyYWNrIElkeiBOZXcgS2UgT2xkIFtbYm9sZCBwdXJwbGVdVmVyeSBSZWNvbW1lbmRlZFtib2xkIHdoaXRlXV1bL11cbltib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDNbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUNyYWNrIElkeiBSYW5kb20gW1tib2xkIHB1cnBsZV1WZXJ5IFJlY29tbWVuZGVkW2JvbGQgd2hpdGVdXVsvXScsd2lkdGg9OTAscGFkZGluZz0oMCw4KSx0aXRsZT1mIltib2xkIHB1cnBsZV1TZXR0aW5nIFVydXRhbiBJZHoiLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJaHUgPSBpbnB1dChmJyBb4oCiXSBQaWxpaCBVcnV0YW4gSWR6IDogJykKCWlmIGh1IGluIFsnMScsJzAxJ106CgkJZm9yIHR1YSBpbiBzb3J0ZWQoaWQpOgoJCQlpZDIuYXBwZW5kKHR1YSkKCgllbGlmIGh1IGluIFsnMicsJzAyJ106CgkJbXVkYT1bXQoJCWZvciBiYWNvdCBpbiBzb3J0ZWQoaWQpOgoJCQltdWRhLmFwcGVuZChiYWNvdCkKCQliY209bGVuKG11ZGEpCgkJYmNtaT0oYmNtLTEpCgkJZm9yIHhtdWQgaW4gcmFuZ2UoYmNtKToKCQkJaWQyLmFwcGVuZChtdWRhW2JjbWldKQoJCQliY21pIC09MQoJZWxpZiBodSBpbiBbJzMnLCcwMyddOgoJCWZvciBiYWNvdCBpbiBpZDoKCQkJeHggPSByYW5kb20ucmFuZGludCgwLGxlbihpZDIpKQoJCQlpZDIuaW5zZXJ0KHh4LGJhY290KQoJZWxzZToKCQlwcmludCgnIFvigKJdIFBpbGloIFlhbmcgQmVuZXIgS29udG9vbGwgJykKCQlleGl0KCkKCXVydXQgPSBbXQoJdXJ1dC5hcHBlbmQocGFuZWwoZidbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAxWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1Mb2dpbiBTaXRlIFtib2xkIHB1cnBsZV1tLmZhY2Vib29rLmNvbVtib2xkIHdoaXRlXSBbL11cbltib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDJbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUxvZ2luIFNpdGUgW2JvbGQgcHVycGxlXW1iYXNpYy5mYWNlYm9vay5jb21bYm9sZCB3aGl0ZV0gWy9dXG5bYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAzWy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1Mb2dpbiBTaXRlIFtib2xkIHB1cnBsZV1mcmVlLmZhY2Vib29rLmNvbVtib2xkIHdoaXRlXSAnLHdpZHRoPTQyLHRpdGxlPWYiW2JvbGQgcHVycGxlXVZhbGlkYXRlIixzdHlsZT1mImJvbGQgd2hpdGUiKSkKCXVydXQuYXBwZW5kKHBhbmVsKGYnW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wNFsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdTG9naW4gU2l0ZSBbYm9sZCBwdXJwbGVdbS5mYWNlYm9vay5jb21bYm9sZCB3aGl0ZV0gWy9dXG5bYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTA1Wy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1Mb2dpbiBTaXRlIFtib2xkIHB1cnBsZV1tYmFzaWMuZmFjZWJvb2suY29tW2JvbGQgd2hpdGVdIFsvXVxuW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wNlsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdTG9naW4gU2l0ZSBbYm9sZCBwdXJwbGVdZnJlZS5mYWNlYm9vay5jb21bYm9sZCB3aGl0ZV0gJyx3aWR0aD00Mix0aXRsZT1mIltib2xkIHB1cnBsZV1SZWd1bGVyW2JvbGQgd2hpdGVdIixzdHlsZT1mImJvbGQgd2hpdGUiKSkKCXVydXQuYXBwZW5kKHBhbmVsKGYnW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0wN1svXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdTG9naW4gU2l0ZSBbYm9sZCBwdXJwbGVdbS5mYWNlYm9vay5jb21bYm9sZCB3aGl0ZV0gWy9dXG5bYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTA4Wy9dW2JvbGQgd2hpdGVdXVsvXSBbYm9sZCB3aGl0ZV1Mb2dpbiBTaXRlIFtib2xkIHB1cnBsZV1tLmFscGhhLmZhY2Vib29rLmNvbVtib2xkIHdoaXRlXSAnLHdpZHRoPTQyLHRpdGxlPWYiW2JvbGQgcHVycGxlXUFscGhhIEFuZCBBc3luYyIsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgl1cnV0LmFwcGVuZChwYW5lbChmJ1tib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDlbL11bYm9sZCB3aGl0ZV1dWy9dIFtib2xkIHdoaXRlXUxvZ2luIFNpdGUgW2JvbGQgcHVycGxlXXguZmFjZWJvb2suY29tW2JvbGQgd2hpdGVdIFsvXVxuW2JvbGQgd2hpdGVdW1tib2xkIHB1cnBsZV0xMFsvXVtib2xkIHdoaXRlXV1bL10gW2JvbGQgd2hpdGVdTG9naW4gU2l0ZSBbYm9sZCBwdXJwbGVdZC5mYWNlYm9vay5jb21bYm9sZCB3aGl0ZV0gJyx3aWR0aD00Mix0aXRsZT1mIltib2xkIHB1cnBsZV1PbGQgTWV0b2RlIixzdHlsZT1mImJvbGQgd2hpdGUiKSkKCWNvbnNvbGUucHJpbnQoQ29sdW1ucyh1cnV0KSkKCWhjID0gaW5wdXQoZicgW+KAol0gUGlsaWggTWV0b2RlIDogJykKCWlmIGhjIGluIFsnMScsJzAxJ106CgkJbWV0aG9kLmFwcGVuZCgndmFsaWRhdGUxJykKCWVsaWYgaGMgaW4gWycyJywnMDInXToKCQltZXRob2QuYXBwZW5kKCd2YWxpZGF0ZTInKQoJZWxpZiBoYyBpbiBbJzMnLCcwMyddOgoJCW1ldGhvZC5hcHBlbmQoJ3ZhbGlkYXRlMycpCgllbGlmIGhjIGluIFsnNCcsJzA0J106CgkJbWV0aG9kLmFwcGVuZCgncmVndWxlcjEnKQoJZWxpZiBoYyBpbiBbJzUnLCcwNSddOgoJCW1ldGhvZC5hcHBlbmQoJ3JlZ3VsZXIyJykKCWVsaWYgaGMgaW4gWyc2JywnMDYnXToKCSAgICBtZXRob2QuYXBwZW5kKCdyZWd1bGVyMycpCgllbGlmIGhjIGluIFsnNycsJzA3J106CgkgICAgbWV0aG9kLmFwcGVuZCgna29udG9sJykKCWVsaWYgaGMgaW4gWyc4JywnMDgnXToKCSAgICBtZXRob2QuYXBwZW5kKCdiYXBpJykKCWVsaWYgaGMgaW4gWyc5JywnMDknXToKCSAgICBtZXRob2QuYXBwZW5kKCdjb2xtZWsxJykKCWVsaWYgaGMgaW4gWycxMCcsJzEwJ106CgkgICAgbWV0aG9kLmFwcGVuZCgnY29sbWVrMicpCgllbHNlOgoJCW1ldGhvZC5hcHBlbmQoJ3ZhbGlkYXRlMScpCgljZXRhayhwYW5lbCgnJydbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAxW2JvbGQgd2hpdGVdXSBbYm9sZCB3aGl0ZV1NZW5nZ3VuYWthbiBQYXNzd29yZCBWMSBbW2JvbGQgcHVycGxlXVJlY29tbWVuZGVkW2JvbGQgd2hpdGVdXQpbYm9sZCB3aGl0ZV1bW2JvbGQgcHVycGxlXTAyW2JvbGQgd2hpdGVdXSBbYm9sZCB3aGl0ZV1NZW5nZ3VuYWthbiBQYXNzd29yZCBWMiBbW2JvbGQgcHVycGxlXVZlcnkgUmVjb21tZW5kZWRbYm9sZCB3aGl0ZV1dCltib2xkIHdoaXRlXVtbYm9sZCBwdXJwbGVdMDNbYm9sZCB3aGl0ZV1dIFtib2xkIHdoaXRlXU1lbmdndW5ha2FuIFBhc3N3b3JkIE1hbnVhbCBbW2JvbGQgcmVkXU5vdCBSZWNvbW1lbmRlZFtib2xkIHdoaXRlXV0nJycsc3R5bGU9J2JvbGQgd2hpdGUnLHRpdGxlPSdbYm9sZCBwdXJwbGVdU2V0dGluZyBQYXNzd29yZCcscGFkZGluZz0oMCw4KSx3aWR0aD05MCkpCglwd3BsdXM9aW5wdXQoZicgW+KAol0ge1B9UGlsaWggU2FuZGkgOiAnKQoJaWYgcHdwbHVzIGluIFsnMDMnLCczJ106CgkJcHdwbHVzcy5hcHBlbmQoJ3lhJykKCQlwd2t1PWlucHV0KGYnIFvigKJdIHtQfVNhbmRpIDogJykKCQlwd2t1aD1wd2t1LnNwbGl0KCcsJykKCQlmb3IgeHB3IGluIHB3a3VoOgoJCQlwd255YS5hcHBlbmQoeHB3KQoJZWxzZToKCQlwd3BsdXNzLmFwcGVuZCgnbm8nKQoJCgljZXRhayhwYW5lbChmJyAgICAgIFtib2xkIHdoaXRlXUFwYWthaCBBbmRhIEluZ2luIE1lbmFtcGlsa2FuIEFwbGlrYXNpIFlhbmcgVGVya2FpdCBEaSBEYWxhbSBBa3VuID8gWS9UJyx3aWR0aD05MCx0aXRsZT1mIltib2xkIHB1cnBsZV1aeExhbnNzIC0gQXBrIixzdHlsZT1mImJvbGQgd2hpdGUiKSkKCV9icmF5ZW5fID0gaW5wdXQoJyBb4oCiXSBQaWxpaCA6ICcpCglpZiBfYnJheWVuXyBpbiBbJyddOgoJCXByaW50KCcgW+KAol0gU2FsYWggUGlsaWggbHVoaCcpCgkJZXhpdCgpCgllbGlmIF9icmF5ZW5fIGluIFsneScsJ1knXToKCQl0YXBsaWthc2kuYXBwZW5kKCd5YScpCgllbHNlOgoJCXRhcGxpa2FzaS5hcHBlbmQoJ25vJykKCQkKCWNldGFrKHBhbmVsKGYnICAgICAgW2JvbGQgd2hpdGVdQXBha2FoIEFuZGEgSW5naW4gTWVuYW1waWxrYW4gT3BzaSBDaGVja3BvaW50IERpIERhbGFtIEFrdW4gPyBZL1QnLHdpZHRoPTkwLHRpdGxlPWYiW2JvbGQgcHVycGxlXVBpbGloIE9wc2kiLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJX2JyYXllbl8gPSBpbnB1dCgnIFvigKJdIFBpbGloIDogJykKCWlmIF9icmF5ZW5fIGluIFsnJ106CgkJcHJpbnQoJyBb4oCiXSBTYWxhaCBQaWxpaCBsdWhoJykKCQlleGl0KCkKCWVsaWYgX2JyYXllbl8gaW4gWyd5JywnWSddOgoJCWdhYnJpZWwuYXBwZW5kKCd5YScpCgllbHNlOgoJCWdhYnJpZWwuYXBwZW5kKCdubycpCgkKCWNldGFrKHBhbmVsKGYnW2JvbGQgd2hpdGVdQXBha2FoIEFuZGEgSW5naW4gTWVuZ3VuYWthbiBVc2VyLUFnZW50IE1hbnVhbCBVbnR1ayBNZWxha3VrYW4gQ3JhY2sgQWNjb3VudCA/IFkvVCcsd2lkdGg9OTAsdGl0bGU9ZiJbYm9sZCBwdXJwbGVdU2V0dGluZyBVc2VyLUFnZW50IixzdHlsZT1mImJvbGQgd2hpdGUiKSkKCXVhdGFtYmFoID0gaW5wdXQoZicgW+KAol0gUGlsaWggOiAnKQoJaWYgdWF0YW1iYWggaW4gWyd5JywnWWEnLCd5YScsJ1knXToKCQl1YWx1aC5hcHBlbmQoJ3lhJykKCQliemVyID0gaW5wdXQoZicgW+KAol0gTWFzdWthbiBVc2VyLUFnZW50IDogJykKCQl1YWx1LmFwcGVuZChiemVyKQoJZWxzZToKCQl1YWx1aC5hcHBlbmQoJ3RpZGFrJykKCXBhc3N3cmQoKQojLS0tLS0tLS0tLS0tLS0tLS0tLVsgQkFHSUFOLVdPUkRMSVNUIF0tLS0tLS0tLS0tLS0jCmRlZiBwYXNzd3JkKCk6CglnbG9iYWwgcHJvZyxkZXMKCXByaW50KCcnKQoJdXJ1dCA9IFtdCgl1cnV0LmFwcGVuZChwYW5lbChmJyAgICAgICAgW2JvbGQgcHVycGxlXSVzIFtib2xkIHdoaXRlXSclKG9rYyksd2lkdGg9NDQsdGl0bGU9ZiJbYm9sZCBwdXJwbGVdT0sgU0FWRSBJTiIsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgl1cnV0LmFwcGVuZChwYW5lbChmJyAgICAgICAgIFtib2xkIHJlZF0lcyBbYm9sZCB3aGl0ZV0nJShjcGMpLHdpZHRoPTQ0LHRpdGxlPWYiW2JvbGQgcmVkXUNQIFNBVkUgSU4iLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJd2EucHJpbnQoQ29sdW1ucyh1cnV0KSkKCWNldGFrKHBhbmVsKGYnXHRbYm9sZCB3aGl0ZV1Pbi9PZmYgTW9kZSBQZXNhd2F0IFNldGlhcCAzMDAgSWR6IEFnYXIgVGVyaGluZGFyIERhcmkgU3BhbSBJcCcsd2lkdGg9OTAsdGl0bGU9ZiJbYm9sZCBwdXJwbGVdSW5mb3JtYXNpIixzdWJ0aXRsZT1mIltib2xkIHB1cnBsZV1Qcm9zZXMgQ3JhY2siLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJcHJvZyA9IFByb2dyZXNzKFNwaW5uZXJDb2x1bW4oJ2Nsb2NrJyksVGV4dENvbHVtbigne3Rhc2suZGVzY3JpcHRpb259JyksQmFyQ29sdW1uKCksVGV4dENvbHVtbigne3Rhc2sucGVyY2VudGFnZTouMGZ9JScpKQoJZGVzID0gcHJvZy5hZGRfdGFzaygnJyx0b3RhbD1sZW4oaWQyKSkKCXdpdGggcHJvZzoKCQl3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHBvb2w6CgkJCWZvciB5dXpvbmcgaW4gaWQyOgoJCQkJaWRmLG5tZiA9IHl1em9uZy5zcGxpdCgnfCcpWzBdLHl1em9uZy5zcGxpdCgnfCcpWzFdLmxvd2VyKCkKCQkJCWZycyA9IG5tZi5zcGxpdCgiICIpWzBdCgkJCQlwd3YgPSBbXQoJCQkJaWYgbGVuKG5tZik8NjoKCQkJCQlpZiBsZW4oZnJzKTwzOgoJCQkJCQlwYXNzCgkJCQkJZWxzZToKCQkJCQkJcHd2LmFwcGVuZChubWYpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycxJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzInKQoJCQkJCQlwd3YuYXBwZW5kKGZycysnMycpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwMCcpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwMScpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwMicpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwMycpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwNCcpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwNScpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwNicpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwNycpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwOCcpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycwOScpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycxMicpCgkJCQkJCXB3di5hcHBlbmQoZnJzKyczMjEnKQoJCQkJZWxzZToKCQkJCQlpZiBsZW4oZnJzKTwzOgoJCQkJCQlwd3YuYXBwZW5kKG5tZikKCQkJCQllbHNlOgoJCQkJCQlwd3YuYXBwZW5kKG5tZikKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzEnKQoJCQkJCQlwd3YuYXBwZW5kKGZycysnMicpCgkJCQkJCXB3di5hcHBlbmQoZnJzKyczJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzAwJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzAxJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzAyJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzAzJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA0JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA1JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA2JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA3JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA4JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzA5JykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzEyJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzMyMScpCgkJCQkJCXB3di5hcHBlbmQoZnJzKycxMicpCgkJCQkJCXB3di5hcHBlbmQoZnJzKyczMjEnKQoJCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzJykKCQkJCQkJcHd2LmFwcGVuZChmcnMrJzEyMzQnKQoJCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNDUnKQoJCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNDU2JykKCQkJCWlmICd5YScgaW4gcHdwbHVzczogCgkJCQkJZm9yIHhwd2QgaW4gcHdueWE6CgkJCQkJCXB3di5hcHBlbmQoeHB3ZCkKCQkJCWVsc2U6cGFzcwoJCQkJaWYgJ3ZhbGlkYXRlMScgaW4gbWV0aG9kOgoJCQkJCXBvb2wuc3VibWl0KHZhbGlkYXRlMSxpZGYscHd2KQoJCQkJZWxpZiAndmFsaWRhdGUyJyBpbiBtZXRob2Q6CgkJCQkJcG9vbC5zdWJtaXQodmFsaWRhdGUyLGlkZixwd3YpCgkJCQllbGlmICd2YWxpZGF0ZTMnIGluIG1ldGhvZDoKCQkJCQlwb29sLnN1Ym1pdCh2YWxpZGF0ZTMsaWRmLHB3dikKCQkJCWVsaWYgJ3JlZ3VsZXIxJyBpbiBtZXRob2Q6CgkJCQkJcG9vbC5zdWJtaXQocmVndWxlcjEsaWRmLHB3dikKCQkJCWVsaWYgJ3JlZ3VsZXIyJyBpbiBtZXRob2Q6CgkJCQkJcG9vbC5zdWJtaXQocmVndWxlcjIsaWRmLHB3dikKCQkJCWVsaWYgJ3JlZ3VsZXIzJyBpbiBtZXRob2Q6CgkJCQkJcG9vbC5zdWJtaXQocmVndWxlcjMsaWRmLHB3dikKCQkJCWVsaWYgJ2JhcGknIGluIG1ldGhvZDoKCQkJCQlwb29sLnN1Ym1pdChiYXBpLGlkZixwd3YpCgkJCQllbGlmICdrb250b2wnIGluIG1ldGhvZDoKCQkJCQlwb29sLnN1Ym1pdChrb250b2wsaWRmLHB3dikKCQkJCWVsaWYgJ2NvbG1lazEnIGluIG1ldGhvZDoKCQkJCQlwb29sLnN1Ym1pdChjb2xtZWsxLGlkZixwd3YpCgkJCQllbGlmICdjb2xtZWsyJyBpbiBtZXRob2Q6CgkJCQkJcG9vbC5zdWJtaXQoY29sbWVrMixpZGYscHd2KQoJCQkJZWxzZToKCQkJCQlwb29sLnN1Ym1pdCh2YWxpZGF0ZTEsaWRmLHB3dikKCQlwcmludCgnJykKCXByaW50KGYnICBDcmFjayBUZWxhaCBTZWxlc2FpLFNlbW9nYSBBbmRhIEJlcnN5dWt1ciBEZW5nYW4gSGFzaWwgTnlhJykKCXByaW50KGYnICBb4oCiXSBPSyA6IHtIfXtva30gJykKCXByaW50KGYnICBb4oCiXSBDUCA6IHtLfXtjcH0gJykKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgTUVUT0RFIFZBTElEQVRFIF0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIHZhbGlkYXRlMShpZGYscHd2KToKCWdsb2JhbCBsb29wLG9rLGNwCglibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkKCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikKCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQoJcHJvZy51cGRhdGUoZGVzLGRlc2NyaXB0aW9uPWYiW2JvbGQgcHVycGxlXVZhbGlkYXRlIFYxW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczQ6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsnSG9zdCc6ICdtLmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43J30pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjMuMyUyRmRpYWxvZyUyRm9hdXRoJTNGY2xpZW50X2lkJTNENjMwNDk4NDE3MDE4ODExJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZtLndlYnRvb25zLmNvbSUyNTJGb2F1dGglMjUyRmZhY2Vib29rQ2FsbGJhY2slMjZkaXNwbGF5JTNEcGFnZSUyNnNjb3BlJTNEcHVibGljX3Byb2ZpbGUlMjZzdGF0ZSUzRE9faUMwMDl6dnFVZEkya2QlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNEOWQwZGQwMDYtY2U0My00OWMzLWJjMzUtMjZlZjdiYTUyYjRmJTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWh0dHBzJTNBJTJGJTJGbS53ZWJ0b29ucy5jb20lMkZvYXV0aCUyRmZhY2Vib29rQ2FsbGJhY2slM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzRE9faUMwMDl6dnFVZEkya2QlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykKCQkJZGF0YWEgPXsibHNkIjpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihwLnRleHQpKS5ncm91cCgxKSwiamF6b2VzdCI6cmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJ1aWQiOmlkZiwibmV4dCI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4ucGhwP3NraXBfYXBpX2xvZ2luPTEmYXBpX2tleT02MzA0OTg0MTcwMTg4MTEma2lkX2RpcmVjdGVkX3NpdGU9MCZhcHBfaWQ9NjMwNDk4NDE3MDE4ODExJnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjMuMyUyRmRpYWxvZyUyRm9hdXRoJTNGY2xpZW50X2lkJTNENjMwNDk4NDE3MDE4ODExJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZtLndlYnRvb25zLmNvbSUyNTJGb2F1dGglMjUyRmZhY2Vib29rQ2FsbGJhY2slMjZkaXNwbGF5JTNEcGFnZSUyNnNjb3BlJTNEcHVibGljX3Byb2ZpbGUlMjZzdGF0ZSUzRE9faUMwMDl6dnFVZEkya2QlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNEOWQwZGQwMDYtY2U0My00OWMzLWJjMzUtMjZlZjdiYTUyYjRmJTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWh0dHBzJTNBJTJGJTJGbS53ZWJ0b29ucy5jb20lMkZvYXV0aCUyRmZhY2Vib29rQ2FsbGJhY2slM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzRE9faUMwMDl6dnFVZEkya2QlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyIiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnB3LH0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJa29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2JwoJCQloZWFkZT17J0hvc3QnOiAnbS5mYWNlYm9vay5jb20nLCdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iOTgiJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLCd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLCdvcmlnaW4nOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScsJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLCd1c2VyLWFnZW50JzogdWEsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0Jywnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLCdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLCdyZWZlcmVyJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9JytpZGYrJyZmbG93PWxvZ2luX25vX3BpbiZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZ2My4zJTJGZGlhbG9nJTJGb2F1dGglM0ZjbGllbnRfaWQlM0Q2MzA0OTg0MTcwMTg4MTElMjZyZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRm0ud2VidG9vbnMuY29tJTI1MkZvYXV0aCUyNTJGZmFjZWJvb2tDYWxsYmFjayUyNmRpc3BsYXklM0RwYWdlJTI2c2NvcGUlM0RwdWJsaWNfcHJvZmlsZSUyNnN0YXRlJTNET19pQzAwOXp2cVVkSTJrZCUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0Q5ZDBkZDAwNi1jZTQzLTQ5YzMtYmMzNS0yNmVmN2JhNTJiNGYlMjZ0cCUzRHVuc3BlY2lmaWVkJmNhbmNlbF91cmw9aHR0cHMlM0ElMkYlMkZtLndlYnRvb25zLmNvbSUyRm9hdXRoJTJGZmFjZWJvb2tDYWxsYmFjayUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNET19pQzAwOXp2cVVkSTJrZCUyM18lM0RfJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInLCdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCdhY2NlcHQtbGFuZ3VhZ2UnOiAnaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcnfQoJCQlwbyA9IHNlcy5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC92YWxpZGF0ZS1wYXNzd29yZC8/c2hibD0wJmxvY2FsZTI9aWRfSUQnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJY2VrZXIoaWRmLHB3KQoJCQkJCWJyZWFrCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWNla19hcGsoa3VraSkKCQkJCQlicmVhawoJCQkJCgkJCWVsc2U6CgkJCQljb250aW51ZQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJdGltZS5zbGVlcCgzMSkKCWxvb3ArPTEKCmRlZiB2YWxpZGF0ZTIoaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikKCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIltib2xkIHB1cnBsZV1WYWxpZGF0ZSBWMltib2xkIHdoaXRlXSB7bG9vcH0ve2xlbihpZCl9IE9LLTpbYm9sZCBwdXJwbGVde29rfVsvXSBDUC06W2JvbGQgcmVkXXtjcH1bL10iKQoJcHJvZy5hZHZhbmNlKGRlcykgCglmb3IgcHcgaW4gcHd2OgoJCXRyeToKCQkJaWYgJ3lhJyBpbiB1YWx1aDogdWEgPSB1YWx1WzBdCgkJCW5pcD1yYW5kb20uY2hvaWNlKHByb3gpCgkJCXByb3hzPSB7J2h0dHAnOiAnc29ja3M1Oi8vJytuaXB9CgkJCXNlcy5oZWFkZXJzLnVwZGF0ZSh7J0hvc3QnOiAnbWJhc2ljLmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43J30pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4ucGhwP3NraXBfYXBpX2xvZ2luPTEmYXBpX2tleT0xNDE1OTUxMjkyMzQ1NDMma2lkX2RpcmVjdGVkX3NpdGU9MCZhcHBfaWQ9MTQxNTk1MTI5MjM0NTQzJnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjUuMCUyRmRpYWxvZyUyRm9hdXRoJTNGY2xpZW50X2lkJTNEMTQxNTk1MTI5MjM0NTQzJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZpYmlzcGFpbnQuY29tJTI1MkZsb2dpbi5qc3AlMjZkaXNwbGF5JTNEcG9wdXAlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNEZTgxODQ1NzQtN2U4Zi00MWYzLWI2ZDUtNDdhNmMxM2Y2OGZkJTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWh0dHBzJTNBJTJGJTJGaWJpc3BhaW50LmNvbSUyRmxvZ2luLmpzcCUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyM18lM0RfJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInKQoJCQlkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS90b29scy9kZWJ1Zy9hY2Nlc3N0b2tlbi8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQoJCQlrb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gcC5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQlrb2tpKz0nIG1fcGl4ZWxfcmF0aW89Mi42MjU7IHdkPTQxMng3NTYnCgkJCWhlYWRlPXsnSG9zdCc6ICdtYmFzaWMuZmFjZWJvb2suY29tJywnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLCdzZWMtY2gtdWEnOiAnIiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9Ijk4IicsJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzEnLCdzZWMtY2gtdWEtcGxhdGZvcm0nOiAnIkFuZHJvaWQiJywndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywnb3JpZ2luJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20nLCdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywndXNlci1hZ2VudCc6IHVhLCdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45JywneC1yZXF1ZXN0ZWQtd2l0aCc6ICdYTUxIdHRwUmVxdWVzdCcsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywncmVmZXJlcic6ICdodHRwczovL20uZmFjZWJvb2suY29tL2luZGV4LnBocD9uZXh0PWh0dHBzJTNBJTJGJTJGZGV2ZWxvcGVycy5mYWNlYm9vay5jb20lMkZ0b29scyUyRmRlYnVnJTJGYWNjZXNzdG9rZW4lMkYnLCdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCdhY2NlcHQtbGFuZ3VhZ2UnOiAnaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcnfQoJCQlwbyA9IHNlcy5wb3N0KCdodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsYWxsb3dfcmVkaXJlY3RzPUZhbHNlKQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWNla2VyKGlkZixwdykKCQkJCQlicmVhawoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQljZWtfYXBrKGt1a2kpCgkJCQkJYnJlYWsKCQkJCQoJCQllbHNlOgoJCQkJY29udGludWUKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMzEpCglsb29wKz0xCgkKZGVmIHZhbGlkYXRlMyhpZGYscHd2KToKCWdsb2JhbCBsb29wLG9rLGNwCglibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkKCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikKCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQoJcHJvZy51cGRhdGUoZGVzLGRlc2NyaXB0aW9uPWYiW2JvbGQgcHVycGxlXVZhbGlkYXRlIFYzW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczU6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsnSG9zdCc6ICdmcmVlLmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ3VzZXItYWdlbnQnOiB1YTIsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsJ3NlYy1mZXRjaC1tb2RlJzogJ2NvcnMnLCdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsJ2FjY2VwdC1sYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyd9KQoJCQlwID0gc2VzLmdldCgnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD0nK2lkZisnJmZsb3c9bG9naW5fbm9fcGluJm5leHQ9aHR0cHMlM0ElMkYlMkZtb2JpbGUuZmFjZWJvb2suY29tJTJGdjE0LjAlMkZkaWFsb2clMkZvYXV0aCUzRmFwcF9pZCUzRDE3MjI3MTM3ODc4ODc5ODQlMjZjYnQlM0QxNjc2MDI3MTgwNzM4JTI2Y2hhbm5lbF91cmwlM0RodHRwcyUyNTNBJTI1MkYlMjUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyNTJGeCUyNTJGY29ubmVjdCUyNTJGeGRfYXJiaXRlciUyNTJGJTI1M0Z2ZXJzaW9uJTI1M0Q0NiUyNTIzY2IlMjUzRGYzNjNiMGE3M2MxOTgwNCUyNTI2ZG9tYWluJTI1M0R3d3cuYmlsaWJpbGkudHYlMjUyNmlzX2NhbnZhcyUyNTNEZmFsc2UlMjUyNm9yaWdpbiUyNTNEaHR0cHMlMjUyNTNBJTI1MjUyRiUyNTI1MkZ3d3cuYmlsaWJpbGkudHYlMjUyNTJGZjIwMDE5ZGJkOTA2OWY4JTI1MjZyZWxhdGlvbiUyNTNEb3BlbmVyJTI2Y2xpZW50X2lkJTNEMTcyMjcxMzc4Nzg4Nzk4NCUyNmRpc3BsYXklM0R0b3VjaCUyNmRvbWFpbiUzRHd3dy5iaWxpYmlsaS50diUyNmUyZSUzRCUyNTdCJTI1N0QlMjZmYWxsYmFja19yZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnd3dy5iaWxpYmlsaS50diUyNTJGaWQlMjUyRiUyNmxvY2FsZSUzRGVuX1VTJTI2bG9nZ2VyX2lkJTNEZjNkMjBkMDY2ZmY2MjU0JTI2b3JpZ2luJTNEMiUyNnJlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGc3RhdGljeHguZmFjZWJvb2suY29tJTI1MkZ4JTI1MkZjb25uZWN0JTI1MkZ4ZF9hcmJpdGVyJTI1MkYlMjUzRnZlcnNpb24lMjUzRDQ2JTI1MjNjYiUyNTNEZjE0NTIyYmZlZTE3MDE0JTI1MjZkb21haW4lMjUzRHd3dy5iaWxpYmlsaS50diUyNTI2aXNfY2FudmFzJTI1M0RmYWxzZSUyNTI2b3JpZ2luJTI1M0RodHRwcyUyNTI1M0ElMjUyNTJGJTI1MjUyRnd3dy5iaWxpYmlsaS50diUyNTI1MkZmMjAwMTlkYmQ5MDY5ZjglMjUyNnJlbGF0aW9uJTI1M0RvcGVuZXIlMjUyNmZyYW1lJTI1M0RmMTg1ZDMwNmJjNTBkMDglMjZyZXNwb25zZV90eXBlJTNEdG9rZW4lMjUyQ3NpZ25lZF9yZXF1ZXN0JTI1MkNncmFwaF9kb21haW4lMjZzZGslM0Rqb2V5JTI2dmVyc2lvbiUzRHYxNC4wJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1odHRwcyUzQSUyRiUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyRnglMkZjb25uZWN0JTJGeGRfYXJiaXRlciUyRiUzRnZlcnNpb24lM0Q0NiUyM2NiJTNEZjE0NTIyYmZlZTE3MDE0JTI2ZG9tYWluJTNEd3d3LmJpbGliaWxpLnR2JTI2aXNfY2FudmFzJTNEZmFsc2UlMjZvcmlnaW4lM0RodHRwcyUyNTNBJTI1MkYlMjUyRnd3dy5iaWxpYmlsaS50diUyNTJGZjIwMDE5ZGJkOTA2OWY4JTI2cmVsYXRpb24lM0RvcGVuZXIlMjZmcmFtZSUzRGYxODVkMzA2YmM1MGQwOCUyNmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRjPTEmX3JkcicpCgkJCWRhdGFhID17ImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksImphem9lc3QiOnJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihwLnRleHQpKS5ncm91cCgxKSwidWlkIjppZGYsIm5leHQiOiJodHRwczovL2ZyZWUuZmFjZWJvb2suY29tL2xvZ2luLnBocD9za2lwX2FwaV9sb2dpbj0xJmFwaV9rZXk9MTcyMjcxMzc4Nzg4Nzk4NCZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0xNzIyNzEzNzg3ODg3OTg0JnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm1vYmlsZS5mYWNlYm9vay5jb20lMkZ2MTQuMCUyRmRpYWxvZyUyRm9hdXRoJTNGYXBwX2lkJTNEMTcyMjcxMzc4Nzg4Nzk4NCUyNmNidCUzRDE2NzYwMjcxODA3MzglMjZjaGFubmVsX3VybCUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGc3RhdGljeHguZmFjZWJvb2suY29tJTI1MkZ4JTI1MkZjb25uZWN0JTI1MkZ4ZF9hcmJpdGVyJTI1MkYlMjUzRnZlcnNpb24lMjUzRDQ2JTI1MjNjYiUyNTNEZjM2M2IwYTczYzE5ODA0JTI1MjZkb21haW4lMjUzRHd3dy5iaWxpYmlsaS50diUyNTI2aXNfY2FudmFzJTI1M0RmYWxzZSUyNTI2b3JpZ2luJTI1M0RodHRwcyUyNTI1M0ElMjUyNTJGJTI1MjUyRnd3dy5iaWxpYmlsaS50diUyNTI1MkZmMjAwMTlkYmQ5MDY5ZjglMjUyNnJlbGF0aW9uJTI1M0RvcGVuZXIlMjZjbGllbnRfaWQlM0QxNzIyNzEzNzg3ODg3OTg0JTI2ZGlzcGxheSUzRHRvdWNoJTI2ZG9tYWluJTNEd3d3LmJpbGliaWxpLnR2JTI2ZTJlJTNEJTI1N0IlMjU3RCUyNmZhbGxiYWNrX3JlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGd3d3LmJpbGliaWxpLnR2JTI1MkZpZCUyNTJGJTI2bG9jYWxlJTNEZW5fVVMlMjZsb2dnZXJfaWQlM0RmM2QyMGQwNjZmZjYyNTQlMjZvcmlnaW4lM0QyJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZzdGF0aWN4eC5mYWNlYm9vay5jb20lMjUyRnglMjUyRmNvbm5lY3QlMjUyRnhkX2FyYml0ZXIlMjUyRiUyNTNGdmVyc2lvbiUyNTNENDYlMjUyM2NiJTI1M0RmMTQ1MjJiZmVlMTcwMTQlMjUyNmRvbWFpbiUyNTNEd3d3LmJpbGliaWxpLnR2JTI1MjZpc19jYW52YXMlMjUzRGZhbHNlJTI1MjZvcmlnaW4lMjUzRGh0dHBzJTI1MjUzQSUyNTI1MkYlMjUyNTJGd3d3LmJpbGliaWxpLnR2JTI1MjUyRmYyMDAxOWRiZDkwNjlmOCUyNTI2cmVsYXRpb24lMjUzRG9wZW5lciUyNTI2ZnJhbWUlMjUzRGYxODVkMzA2YmM1MGQwOCUyNnJlc3BvbnNlX3R5cGUlM0R0b2tlbiUyNTJDc2lnbmVkX3JlcXVlc3QlMjUyQ2dyYXBoX2RvbWFpbiUyNnNkayUzRGpvZXklMjZ2ZXJzaW9uJTNEdjE0LjAlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWh0dHBzJTNBJTJGJTJGc3RhdGljeHguZmFjZWJvb2suY29tJTJGeCUyRmNvbm5lY3QlMkZ4ZF9hcmJpdGVyJTJGJTNGdmVyc2lvbiUzRDQ2JTIzY2IlM0RmMTQ1MjJiZmVlMTcwMTQlMjZkb21haW4lM0R3d3cuYmlsaWJpbGkudHYlMjZpc19jYW52YXMlM0RmYWxzZSUyNm9yaWdpbiUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGd3d3LmJpbGliaWxpLnR2JTI1MkZmMjAwMTlkYmQ5MDY5ZjglMjZyZWxhdGlvbiUzRG9wZW5lciUyNmZyYW1lJTNEZjE4NWQzMDZiYzUwZDA4JTI2ZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZGM9MSZfcmRyIiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnB3LH0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJa29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2JwoJCQloZWFkZT17J0hvc3QnOiAnZnJlZS5mYWNlYm9vay5jb20nLCdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iOTgiJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLCd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLCdvcmlnaW4nOiAnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbScsJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLCd1c2VyLWFnZW50JzogdWEsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0Jywnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLCdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLCdyZWZlcmVyJzogJ2h0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9JytpZGYrJyZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJywnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywnYWNjZXB0LWxhbmd1YWdlJzogJ21zLU1ZLG1zO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43JywnY29ubmVjdGlvbic6ICdjbG9zZSd9CgkJCXBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJY2VrZXIoaWRmLHB3KQoJCQkJCWJyZWFrCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWNla19hcGsoa3VraSkKCQkJCQlicmVhawoJCQkJCgkJCWVsc2U6CgkJCQljb250aW51ZQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJdGltZS5zbGVlcCgzMSkKCWxvb3ArPTEKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBNRVRIT0QgUkVHVUxFUiBdLS0tLS0tLS0tLS0tLS0tLS0tLS0jCmRlZiByZWd1bGVyMShpZGYscHd2KToKCWdsb2JhbCBsb29wLG9rLGNwCglibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkKCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikKCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQoJcHJvZy51cGRhdGUoZGVzLGRlc2NyaXB0aW9uPWYiW2JvbGQgcHVycGxlXVJlZ3VsZXIgVjFbYm9sZCB3aGl0ZV0ge2xvb3B9L3tsZW4oaWQpfSBPSy06W2JvbGQgcHVycGxlXXtva31bL10gQ1AtOltib2xkIHJlZF17Y3B9Wy9dIikKCXByb2cuYWR2YW5jZShkZXMpIAoJZm9yIHB3IGluIHB3djoKCQl0cnk6CgkJCWlmICd5YScgaW4gdWFsdWg6IHVhID0gdWFsdVswXQoJCQluaXA9cmFuZG9tLmNob2ljZShwcm94KQoJCQlwcm94cz0geydodHRwJzogJ3NvY2tzNTovLycrbmlwfQoJCQlzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjoibS5mYWNlYm9vay5jb20iLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjoiMSIsInVzZXItYWdlbnQiOnVhLCJhY2NlcHQiOiJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJkbnQiOiIxIiwieC1yZXF1ZXN0ZWQtd2l0aCI6Im1hcmsudmlhLmdwIiwic2VjLWZldGNoLXNpdGUiOiJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjoiY29ycyIsInNlYy1mZXRjaC11c2VyIjoiZW1wdHkiLCJzZWMtZmV0Y2gtZGVzdCI6ImRvY3VtZW50IiwicmVmZXJlciI6Imh0dHBzOi8vbS5mYWNlYm9vay5jb20vIiwiYWNjZXB0LWVuY29kaW5nIjoiZ3ppcCwgZGVmbGF0ZSBiciIsImFjY2VwdC1sYW5ndWFnZSI6ImVuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44In0pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLz9lbWFpbD0nK2lkZikudGV4dAoJCQlkYXRhYSA9ewonbHNkJzpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihwKSkuZ3JvdXAoMSksCidqYXpvZXN0JzpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocCkpLmdyb3VwKDEpLAonbV90cyc6cmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJywgc3RyKHApKS5ncm91cCgxKSwKJ2xpJzpyZS5zZWFyY2goJ25hbWU9ImxpIiB2YWx1ZT0iKC4qPykiJywgc3RyKHApKS5ncm91cCgxKSwKJ2VtYWlsJzppZGYsCidwYXNzJzpwdwp9CgkJCXNlcy5oZWFkZXJzLnVwZGF0ZSh7J0hvc3QnOiAnbS5mYWNlYm9vay5jb20nLAonY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLAondXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyc6ICcxJywKJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywKJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAondXNlci1hZ2VudCc6IHVhLAonYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsCidzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsCidzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKJ3NlYy1mZXRjaC11c2VyJzogJ2VtcHR5JywKJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywKJ3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi8/ZW1haWw9JytpZGYsCidhY2NlcHQtZW5jb2RpbmcnOidnemlwLCBkZWZsYXRlIGJyJywKJ2FjY2VwdC1sYW5ndWFnZSc6J2VuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44J30pCgoJCQlwbyA9IHNlcy5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9yZWd1bGFyL2xvZ2luLz9zaGJsPTEmcmVmc3JjPWRlcHJlY2F0ZWQnLGRhdGE9ZGF0YWEsYWxsb3dfcmVkaXJlY3RzPUZhbHNlLHByb3hpZXM9cHJveHMpCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJY2VrZXIoaWRmLHB3KQoJCQkJCWJyZWFrCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWNla19hcGsoa3VraSkKCQkJCQlicmVhawoJCQkJCgkJCWVsc2U6CgkJCQljb250aW51ZQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJdGltZS5zbGVlcCgzMSkKCWxvb3ArPTEKCmRlZiByZWd1bGVyMihpZGYscHd2KToKCWdsb2JhbCBsb29wLG9rLGNwCglibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkKCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQoJdWEyID0gcmFuZG9tLmNob2ljZSh1Z2VuMikKCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQoJcHJvZy51cGRhdGUoZGVzLGRlc2NyaXB0aW9uPWYiW2JvbGQgcHVycGxlXVJlZ3VsZXIgVjJbYm9sZCB3aGl0ZV0ge2xvb3B9L3tsZW4oaWQpfSBPSy06W2JvbGQgcHVycGxlXXtva31bL10gQ1AtOltib2xkIHJlZF17Y3B9Wy9dIikKCXByb2cuYWR2YW5jZShkZXMpIAoJZm9yIHB3IGluIHB3djoKCQl0cnk6CgkJCWlmICd5YScgaW4gdWFsdWg6IHVhID0gdWFsdVswXQoJCQluaXA9cmFuZG9tLmNob2ljZShwcm94KQoJCQlwcm94cz0geydodHRwJzogJ3NvY2tzNTovLycrbmlwfQoJCQlsaW5rID0gc2VzLmdldCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi5waHA/c2tpcF9hcGlfbG9naW49MSZhcGlfa2V5PTM0NTAwMDk4NjAzMzU4NyZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0zNDUwMDA5ODYwMzM1ODcmc2lnbmVkX25leHQ9MSZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZ2MTIuMCUyRmRpYWxvZyUyRm9hdXRoJTNGY2N0X3ByZWZldGNoaW5nJTNEMCUyNmNsaWVudF9pZCUzRDM0NTAwMDk4NjAzMzU4NyUyNmNidCUzRDE2NzkxOTAzNTUxODUlMjZlMmUlM0QlMjU3QiUyNTIyaW5pdCUyNTIyJTI1M0ExNjc5MTkwMzU1MTg2JTI1N0QlMjZpZXMlM0QwJTI2c2RrJTNEYW5kcm9pZC0xMi4yLjAlMjZzc28lM0RjaHJvbWVfY3VzdG9tX3RhYiUyNm5vbmNlJTNEMzZlYWI0MTAtM2JmMi00YTE4LTkyYjYtODg5OTQ4MmJjZTAzJTI2c2NvcGUlM0RvcGVuaWQlMjUyQ3B1YmxpY19wcm9maWxlJTI1MkN1c2VyX2dlbmRlciUyNTJDdXNlcl9mcmllbmRzJTI2c3RhdGUlM0QlMjU3QiUyNTIyMF9hdXRoX2xvZ2dlcl9pZCUyNTIyJTI1M0ElMjUyMjhmYWJjNWZmLTkwZTItNDI1OC1hNDUxLWExZjRhNzk2YzM0OCUyNTIyJTI1MkMlMjUyMjNfbWV0aG9kJTI1MjIlMjUzQSUyNTIyY3VzdG9tX3RhYiUyNTIyJTI1MkMlMjUyMjdfY2hhbGxlbmdlJTI1MjIlMjUzQSUyNTIyOXY1NGJiaG9qNTh0bnMwcjR0am4lMjUyMiUyNTdEJTI2ZGVmYXVsdF9hdWRpZW5jZSUzRGZyaWVuZHMlMjZsb2dpbl9iZWhhdmlvciUzRE5BVElWRV9XSVRIX0ZBTExCQUNLJTI2cmVkaXJlY3RfdXJpJTNEZmIzNDUwMDA5ODYwMzM1ODclMjUzQSUyNTJGJTI1MkZhdXRob3JpemUlMjUyRiUyNmF1dGhfdHlwZSUzRHJlcmVxdWVzdCUyNnJlc3BvbnNlX3R5cGUlM0RpZF90b2tlbiUyNTJDdG9rZW4lMjUyQ3NpZ25lZF9yZXF1ZXN0JTI1MkNncmFwaF9kb21haW4lMjZyZXR1cm5fc2NvcGVzJTNEdHJ1ZSUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0Q4ZmFiYzVmZi05MGUyLTQyNTgtYTQ1MS1hMWY0YTc5NmMzNDglMjZ0cCUzRHVuc3BlY2lmaWVkJmNhbmNlbF91cmw9ZmIzNDUwMDA5ODYwMzM1ODclM0ElMkYlMkZhdXRob3JpemUlMkYlM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzRCUyNTdCJTI1MjIwX2F1dGhfbG9nZ2VyX2lkJTI1MjIlMjUzQSUyNTIyOGZhYmM1ZmYtOTBlMi00MjU4LWE0NTEtYTFmNGE3OTZjMzQ4JTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjUyQyUyNTIyN19jaGFsbGVuZ2UlMjUyMiUyNTNBJTI1MjI5djU0YmJob2o1OHRuczByNHRqbiUyNTIyJTI1N0QlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykKCQkJZGF0YSA9IHsKJ2xzZCc6IHJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCidqYXpvZXN0JzogcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCidtX3RzJzogcmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCidsaSc6IHJlLnNlYXJjaCgnbmFtZT0ibGkiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwKJ3RyeV9udW1iZXInOiAwLAondW5yZWNvZ25pemVkX3RyaWVzJzogMCwKJ2VtYWlsJzppZGYsCidwYXNzJzpwdywKJ2xvZ2luJzonTWFzdWsnLAoncHJlZmlsbF9jb250YWN0X3BvaW50JzogJycsCidwcmVmaWxsX3NvdXJjZSc6ICcnLAoncHJlZmlsbF90eXBlJzogJycsCidmaXJzdF9wcmVmaWxsX3NvdXJjZSc6ICcnLAonZmlyc3RfcHJlZmlsbF90eXBlJzogJycsCidoYWRfY3BfcHJlZmlsbGVkJzogRmFsc2UsCidoYWRfcGFzc3dvcmRfcHJlZmlsbGVkJzogRmFsc2UsCidpc19zbWFydF9sb2NrJzogRmFsc2UsCidiaV94cndoJzogMAp9CgkJCWhlYWRlcnMgPSB7J0hvc3QnOiAnbS5mYWNlYm9vay5jb20nLCd4LWZiLXJsYWZyJzogJzAnLCdhY2Nlc3MtY29udHJvbC1hbGxvdy1vcmlnaW4nOiAnKicsJ2ZhY2Vib29rLWFwaS12ZXJzaW9uJzogJ3YxMi4wJywnc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eSc6ICdtYXgtYWdlPTE1NTUyMDAwOyBwcmVsb2FkJywncHJhZ21hJzogJ25vLWNhY2hlJywnY2FjaGUtY29udHJvbCc6ICdwcml2YXRlLCBuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZScsJ3gtZmItcmVxdWVzdC1pZCc6ICdBM1BVRFpuenkyeGdrTUFrSDliY1ZvZicsJ3gtZmItdHJhY2UtaWQnOiAnQ3g0anJrSkppcmUnLCd4LWZiLXJldic6ICcxMDA3MTI3NTE0JywneC1mYi1kZWJ1Zyc6ICdBWFJMTjJhYjZ0Yk5CeEZXUzZraUVSZThtRXllSGtwWWdjMXhNNzdqb1NDYWs4aFkxQjIrdFdmZXB0VVhWbVJwTXFubzJqOTVyMTMrY3cwYkxvT2k0QT09JywnY29udGVudC1sZW5ndGgnOiAnMjE0MScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhJzogJyJDaHJvbWl1bSI7dj0iMTA3IiwgIk5vdD1BP0JyYW5kIjt2PSIyNCInLCdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsJ3NhdmUtZGF0YSc6ICdvbicsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLCdzZWMtZmV0Y2gtdXNlcic6ICc/MScsJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywncmVmZXJlcic6ICdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLnBocD9za2lwX2FwaV9sb2dpbj0xJmFwaV9rZXk9MzQ1MDAwOTg2MDMzNTg3JmtpZF9kaXJlY3RlZF9zaXRlPTAmYXBwX2lkPTM0NTAwMDk4NjAzMzU4NyZzaWduZWRfbmV4dD0xJm5leHQ9aHR0cHMlM0ElMkYlMkZtLmZhY2Vib29rLmNvbSUyRnYxMi4wJTJGZGlhbG9nJTJGb2F1dGglM0ZjY3RfcHJlZmV0Y2hpbmclM0QwJTI2Y2xpZW50X2lkJTNEMzQ1MDAwOTg2MDMzNTg3JTI2Y2J0JTNEMTY3OTE5MDM1NTE4NSUyNmUyZSUzRCUyNTdCJTI1MjJpbml0JTI1MjIlMjUzQTE2NzkxOTAzNTUxODYlMjU3RCUyNmllcyUzRDAlMjZzZGslM0RhbmRyb2lkLTEyLjIuMCUyNnNzbyUzRGNocm9tZV9jdXN0b21fdGFiJTI2bm9uY2UlM0QzNmVhYjQxMC0zYmYyLTRhMTgtOTJiNi04ODk5NDgyYmNlMDMlMjZzY29wZSUzRG9wZW5pZCUyNTJDcHVibGljX3Byb2ZpbGUlMjUyQ3VzZXJfZ2VuZGVyJTI1MkN1c2VyX2ZyaWVuZHMlMjZzdGF0ZSUzRCUyNTdCJTI1MjIwX2F1dGhfbG9nZ2VyX2lkJTI1MjIlMjUzQSUyNTIyOGZhYmM1ZmYtOTBlMi00MjU4LWE0NTEtYTFmNGE3OTZjMzQ4JTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjUyQyUyNTIyN19jaGFsbGVuZ2UlMjUyMiUyNTNBJTI1MjI5djU0YmJob2o1OHRuczByNHRqbiUyNTIyJTI1N0QlMjZkZWZhdWx0X2F1ZGllbmNlJTNEZnJpZW5kcyUyNmxvZ2luX2JlaGF2aW9yJTNETkFUSVZFX1dJVEhfRkFMTEJBQ0slMjZyZWRpcmVjdF91cmklM0RmYjM0NTAwMDk4NjAzMzU4NyUyNTNBJTI1MkYlMjUyRmF1dGhvcml6ZSUyNTJGJTI2YXV0aF90eXBlJTNEcmVyZXF1ZXN0JTI2cmVzcG9uc2VfdHlwZSUzRGlkX3Rva2VuJTI1MkN0b2tlbiUyNTJDc2lnbmVkX3JlcXVlc3QlMjUyQ2dyYXBoX2RvbWFpbiUyNnJldHVybl9zY29wZXMlM0R0cnVlJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNmxvZ2dlcl9pZCUzRDhmYWJjNWZmLTkwZTItNDI1OC1hNDUxLWExZjRhNzk2YzM0OCUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1mYjM0NTAwMDk4NjAzMzU4NyUzQSUyRiUyRmF1dGhvcml6ZSUyRiUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNEJTI1N0IlMjUyMjBfYXV0aF9sb2dnZXJfaWQlMjUyMiUyNTNBJTI1MjI4ZmFiYzVmZi05MGUyLTQyNTgtYTQ1MS1hMWY0YTc5NmMzNDglMjUyMiUyNTJDJTI1MjIzX21ldGhvZCUyNTIyJTI1M0ElMjUyMmN1c3RvbV90YWIlMjUyMiUyNTJDJTI1MjI3X2NoYWxsZW5nZSUyNTIyJTI1M0ElMjUyMjl2NTRiYmhvajU4dG5zMHI0dGpuJTI1MjIlMjU3RCUyM18lM0RfJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInLCdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZScsJ2FjY2VwdC1sYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1HQjtxPTAuOCxlbjtxPTAuNyxlbi1VUztxPTAuNid9CgkJCWxpbmsgPSByYW5kb20uY2hvaWNlKFsiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcmVndWxhci9sb2dpbi8/YXBpX2tleT0xNDA4MTAwMzI2NTYzNzQmYXV0aF90b2tlbj02M2VkM2U3NjhmMGU3ODNmNGNjODFhNmIxMDI2YzUwMCZza2lwX2FwaV9sb2dpbj0xJnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjE0LjAlMkZkaWFsb2clMkZvYXV0aCUzRmNsaWVudF9pZCUzRDE0MDgxMDAzMjY1NjM3NCUyNnJlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGYWNjb3VudHMucGl4aXYubmV0JTI1MkZwaWd5YSUyNTJGcHJveHklMjUyRmNhbGxiYWNrJTI1MkZmYWNlYm9vayUyNnJlc3BvbnNlX3R5cGUlM0Rjb2RlJTI2c2NvcGUlM0RlbWFpbCUyNnN0YXRlJTNER2VEWVVvZEVfcFZONXBEWEtCYmhhRjEyUnZYU1UtMzBpa3o0ZFpWSEk4dyUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0RkM2U3ZTRkZi04ZTdiLTQyYzktODFhNy1lZTBlMmFiYjE5YzklMjZ0cCUzRHVuc3BlY2lmaWVkJnJlZnNyYz1kZXByZWNhdGVkJmFwcF9pZD0xNDA4MTAwMzI2NTYzNzQmY2FuY2VsPWh0dHBzJTNBJTJGJTJGYWNjb3VudHMucGl4aXYubmV0JTJGcGlneWElMkZwcm94eSUyRmNhbGxiYWNrJTJGZmFjZWJvb2slM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzREdlRFlVb2RFX3BWTjVwRFhLQmJoYUYxMlJ2WFNVLTMwaWt6NGRaVkhJOHclMjNfJTNEXyZsd3Y9MTAwJmxvY2FsZTI9aWRfSUQmcmVmaWQ9OSIsImh0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3JlZ3VsYXIvbG9naW4vP2FwaV9rZXk9MjEzNTYwNDM5MTE0JmF1dGhfdG9rZW49N2FkZTUyMWVjZWFhYjE0NTg4NjZkOTgyMTE0OWQ2NGYmc2tpcF9hcGlfbG9naW49MSZzaWduZWRfbmV4dD0xJm5leHQ9aHR0cHMlM0ElMkYlMkZtb2JpbGUuZmFjZWJvb2suY29tJTJGdjIuOSUyRmRpYWxvZyUyRm9hdXRoJTNGYXBwX2lkJTNEMjEzNTYwNDM5MTE0JTI2Y2J0JTNEMTY3NzE4MjE3Nzk5NiUyNmNoYW5uZWxfdXJsJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZzdGF0aWN4eC5mYWNlYm9vay5jb20lMjUyRnglMjUyRmNvbm5lY3QlMjUyRnhkX2FyYml0ZXIlMjUyRiUyNTNGdmVyc2lvbiUyNTNENDYlMjUyM2NiJTI1M0RmMTFkYTFmYzY2Mzc5M2MlMjUyNmRvbWFpbiUyNTNEd3d3LnN0YXJtYWtlcnN0dWRpb3MuY29tJTI1MjZpc19jYW52YXMlMjUzRGZhbHNlJTI1MjZvcmlnaW4lMjUzRGh0dHBzJTI1MjUzQSUyNTI1MkYlMjUyNTJGd3d3LnN0YXJtYWtlcnN0dWRpb3MuY29tJTI1MjUyRmYxMjQ1MDI4ZWZiNTY1OCUyNTI2cmVsYXRpb24lMjUzRG9wZW5lciUyNmNsaWVudF9pZCUzRDIxMzU2MDQzOTExNCUyNmRpc3BsYXklM0R0b3VjaCUyNmRvbWFpbiUzRHd3dy5zdGFybWFrZXJzdHVkaW9zLmNvbSUyNmUyZSUzRCUyNTdCJTI1N0QlMjZmYWxsYmFja19yZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnd3dy5zdGFybWFrZXJzdHVkaW9zLmNvbSUyNTJGbG9naW4lMjUyRnBhZ2UlMjUzRnJldHVybl91cmwlMjUzRCUyNTJGaW5zdHJ1bWVudGFsJTI1MkZ1cGxvYWQlMjZsb2NhbGUlM0R6aF9DTiUyNmxvZ2dlcl9pZCUzRGYyYmRhMTU1ODhhMDQ5OCUyNm9yaWdpbiUzRDIlMjZyZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyNTJGeCUyNTJGY29ubmVjdCUyNTJGeGRfYXJiaXRlciUyNTJGJTI1M0Z2ZXJzaW9uJTI1M0Q0NiUyNTIzY2IlMjUzRGYxOTMxYjQxNDlhM2E0NCUyNTI2ZG9tYWluJTI1M0R3d3cuc3Rhcm1ha2Vyc3R1ZGlvcy5jb20lMjUyNmlzX2NhbnZhcyUyNTNEZmFsc2UlMjUyNm9yaWdpbiUyNTNEaHR0cHMlMjUyNTNBJTI1MjUyRiUyNTI1MkZ3d3cuc3Rhcm1ha2Vyc3R1ZGlvcy5jb20lMjUyNTJGZjEyNDUwMjhlZmI1NjU4JTI1MjZyZWxhdGlvbiUyNTNEb3BlbmVyJTI1MjZmcmFtZSUyNTNEZjNmMzlhMTBlZjk2M2RjJTI2cmVzcG9uc2VfdHlwZSUzRHRva2VuJTI1MkNzaWduZWRfcmVxdWVzdCUyNTJDZ3JhcGhfZG9tYWluJTI2c2NvcGUlM0RlbWFpbCUyNnNkayUzRGpvZXklMjZ2ZXJzaW9uJTNEdjIuOSUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZ0cCUzRHVuc3BlY2lmaWVkJnJlZnNyYz1kZXByZWNhdGVkJmFwcF9pZD0yMTM1NjA0MzkxMTQmY2FuY2VsPWh0dHBzJTNBJTJGJTJGc3RhdGljeHguZmFjZWJvb2suY29tJTJGeCUyRmNvbm5lY3QlMkZ4ZF9hcmJpdGVyJTJGJTNGdmVyc2lvbiUzRDQ2JTIzY2IlM0RmMTkzMWI0MTQ5YTNhNDQlMjZkb21haW4lM0R3d3cuc3Rhcm1ha2Vyc3R1ZGlvcy5jb20lMjZpc19jYW52YXMlM0RmYWxzZSUyNm9yaWdpbiUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGd3d3LnN0YXJtYWtlcnN0dWRpb3MuY29tJTI1MkZmMTI0NTAyOGVmYjU2NTglMjZyZWxhdGlvbiUzRG9wZW5lciUyNmZyYW1lJTNEZjNmMzlhMTBlZjk2M2RjJTI2ZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJmx3dj0xMDAmbG9jYWxlMj1pZF9JRCZyZWZpZD05IiwiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcmVndWxhci9sb2dpbi8/YXBpX2tleT0yMTM1NjA0MzkxMTQmYXV0aF90b2tlbj01ZjhjNzE3OGExMzM5NWI0Y2QyNzJhM2UxODk3ZGU4YiZza2lwX2FwaV9sb2dpbj0xJnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjE0LjAlMkZkaWFsb2clMkZvYXV0aCUzRmNjdF9wcmVmZXRjaGluZyUzRDAlMjZjbGllbnRfaWQlM0QyMTM1NjA0MzkxMTQlMjZjYnQlM0QxNjc3NDE5OTEzMzYxJTI2ZTJlJTNEJTI1N0IlMjUyMmluaXQlMjUyMiUyNTNBMTY3NzQxOTkxMzM2MSUyNTdEJTI2aWVzJTNEMSUyNnNkayUzRGFuZHJvaWQtMTQuMS4xJTI2c3NvJTNEY2hyb21lX2N1c3RvbV90YWIlMjZub25jZSUzRDA2Mzk3OGUzLTI4YWEtNGEwZi1iYmM2LTkyNzJhOTk3M2ZjYiUyNnNjb3BlJTNEdXNlcl9iaXJ0aGRheSUyNTJDb3BlbmlkJTI1MkNwdWJsaWNfcHJvZmlsZSUyNTJDdXNlcl9nZW5kZXIlMjUyQ3VzZXJfZnJpZW5kcyUyNTJDZW1haWwlMjZzdGF0ZSUzRCUyNTdCJTI1MjIwX2F1dGhfbG9nZ2VyX2lkJTI1MjIlMjUzQSUyNTIyODFiNDI0M2QtMTZkNC00MjkzLWFhNDctNjM1OWFiZjVhYmRkJTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjUyQyUyNTIyN19jaGFsbGVuZ2UlMjUyMiUyNTNBJTI1MjJsZ2cxdGRudjNqam50NGhvdXRiZiUyNTIyJTI1N0QlMjZjb2RlX2NoYWxsZW5nZV9tZXRob2QlM0RTMjU2JTI2ZGVmYXVsdF9hdWRpZW5jZSUzRGZyaWVuZHMlMjZsb2dpbl9iZWhhdmlvciUzRE5BVElWRV9XSVRIX0ZBTExCQUNLJTI2cmVkaXJlY3RfdXJpJTNEZmJjb25uZWN0JTI1M0ElMjUyRiUyNTJGY2N0LmNvbS5zdGFybWFrZXJpbnRlcmFjdGl2ZS5zdGFybWFrZXIlMjZhdXRoX3R5cGUlM0RyZXJlcXVlc3QlMjZyZXNwb25zZV90eXBlJTNEaWRfdG9rZW4lMjUyQ3Rva2VuJTI1MkNzaWduZWRfcmVxdWVzdCUyNTJDZ3JhcGhfZG9tYWluJTI2cmV0dXJuX3Njb3BlcyUzRHRydWUlMjZjb2RlX2NoYWxsZW5nZSUzRFAxTFNMVG9RbnRFSDJ1QnBXd0I3VlFpbWxYc2tWQzl6LXJITHQ4VE14aDAlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNEODFiNDI0M2QtMTZkNC00MjkzLWFhNDctNjM1OWFiZjVhYmRkJTI2dHAlM0R1bnNwZWNpZmllZCZyZWZzcmM9ZGVwcmVjYXRlZCZhcHBfaWQ9MjEzNTYwNDM5MTE0JmNhbmNlbD1mYmNvbm5lY3QlM0ElMkYlMkZjY3QuY29tLnN0YXJtYWtlcmludGVyYWN0aXZlLnN0YXJtYWtlciUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNEJTI1N0IlMjUyMjBfYXV0aF9sb2dnZXJfaWQlMjUyMiUyNTNBJTI1MjI4MWI0MjQzZC0xNmQ0LTQyOTMtYWE0Ny02MzU5YWJmNWFiZGQlMjUyMiUyNTJDJTI1MjIzX21ldGhvZCUyNTIyJTI1M0ElMjUyMmN1c3RvbV90YWIlMjUyMiUyNTJDJTI1MjI3X2NoYWxsZW5nZSUyNTIyJTI1M0ElMjUyMmxnZzF0ZG52M2pqbnQ0aG91dGJmJTI1MjIlMjU3RCZsd3Y9MTAwJmxvY2FsZTI9aWRfSUQmcmVmaWQ9OSJdKQoJCQlwbyA9IHNlcy5wb3N0KGxpbmssZGF0YT1kYXRhLGhlYWRlcnM9aGVhZGVycyxhbGxvd19yZWRpcmVjdHM9RmFsc2UpCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiBnYWJyaWVsOgoJCQkJCWNwKz0xCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNjcCA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBVU0VSQUdFTlQgOiB7dWF9ICcKCQkJCQlzdGF0dXNjcDEgPSBuZWwoc3RhdHVzY3AsIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCByZWQnLCB0aXRsZT0nWnhMYW5zcy1DUCcpCgkJCQkJY2V0YWsoc3RhdHVzY3AxKQoJCQkJCW9wZW4oJ0NQLycrY3BjLCdhJykud3JpdGUoaWRmKyd8JytwdysnXG4nKQoJCQkJCWFrdW4uYXBwZW5kKGlkZisnfCcrcHcpCgkJCQkJY2VrZXIoaWRmLHB3KQoJCQkJCWJyZWFrCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJYnJlYWsKCQkJCWVsaWYgJ3lhJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWNla19hcGsoa3VraSkKCQkJCQlicmVhawoJCQkJCgkJCWVsc2U6CgkJCQljb250aW51ZQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJdGltZS5zbGVlcCgzMSkKCWxvb3ArPTEKCQpkZWYgcmVndWxlcjMoaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikKCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIltib2xkIHB1cnBsZV1SZWd1bGVyIFYzW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczU6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ImZyZWUuZmFjZWJvb2suY29tIiwidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YSwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwiZG50IjoiMSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtdXNlciI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL2ZyZWUuZmFjZWJvb2suY29tLyIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUgYnIiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJlbi1HQixlbi1VUztxPTAuOSxlbjtxPTAuOCJ9KQoJCQlwID0gc2VzLmdldCgnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbS9sb2dpbi8/ZW1haWw9JytpZGYpLnRleHQKCQkJZGF0YWEgPXsKJ2xzZCc6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIocCkpLmdyb3VwKDEpLAonamF6b2VzdCc6cmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKHApKS5ncm91cCgxKSwKJ21fdHMnOnJlLnNlYXJjaCgnbmFtZT0ibV90cyIgdmFsdWU9IiguKj8pIicsIHN0cihwKSkuZ3JvdXAoMSksCidsaSc6cmUuc2VhcmNoKCduYW1lPSJsaSIgdmFsdWU9IiguKj8pIicsIHN0cihwKSkuZ3JvdXAoMSksCidlbWFpbCc6aWRmLAoncGFzcyc6cHcKfQoJCQlzZXMuaGVhZGVycy51cGRhdGUoeydIb3N0JzogJ2ZyZWUuZmFjZWJvb2suY29tJywKJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywKJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsCidvcmlnaW4nOiAnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbScsCidjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKJ3VzZXItYWdlbnQnOiB1YSwKJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLAonc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLAonc2VjLWZldGNoLW1vZGUnOiAnY29ycycsCidzZWMtZmV0Y2gtdXNlcic6ICdlbXB0eScsCidzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsCidyZWZlcmVyJzogJ2h0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vbG9naW4vP2VtYWlsPScraWRmLAonYWNjZXB0LWVuY29kaW5nJzonZ3ppcCwgZGVmbGF0ZSBicicsCidhY2NlcHQtbGFuZ3VhZ2UnOidlbi1HQixlbi1VUztxPTAuOSxlbjtxPTAuOCd9KQoKCQkJcG8gPSBzZXMucG9zdCgnaHR0cHM6Ly9mcmVlLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcmVndWxhci9sb2dpbi8/c2hibD0xJnJlZnNyYz1kZXByZWNhdGVkJyxkYXRhPWRhdGFhLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxwcm94aWVzPXByb3hzKQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWNla2VyKGlkZixwdykKCQkJCQlicmVhawoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQljZWtfYXBrKGt1a2kpCgkJCQkJYnJlYWsKCQkJCQoJCQllbHNlOgoJCQkJY29udGludWUKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMzEpCglsb29wKz0xCgkKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBNRVRPREUgQVNZTkMgXS0tLS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYga29udG9sKGlkZixwd3YpOgoJZ2xvYmFsIGxvb3Asb2ssY3AKCWJvID0gcmFuZG9tLmNob2ljZShbbSxrLGgsYix1LHhdKQoJdWEgPSByYW5kb20uY2hvaWNlKHVnZW4pCgl1YTIgPSByYW5kb20uY2hvaWNlKHVnZW4yKQoJc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpCglwcm9nLnVwZGF0ZShkZXMsZGVzY3JpcHRpb249ZiJbYm9sZCBwdXJwbGVdQXN5bmNbYm9sZCB3aGl0ZV0ge2xvb3B9L3tsZW4oaWQpfSBPSy06W2JvbGQgcHVycGxlXXtva31bL10gQ1AtOltib2xkIHJlZF17Y3B9Wy9dIikKCXByb2cuYWR2YW5jZShkZXMpIAoJZm9yIHB3IGluIHB3djoKCQl0cnk6CgkJCWlmICd5YScgaW4gdWFsdWg6IHVhID0gdWFsdVswXQoJCQluaXA9cmFuZG9tLmNob2ljZShwcm94KQoJCQlwcm94cz0geydodHRwJzogJ3NvY2tzNTovLycrbmlwfQoJCQlzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjogIm0uZmFjZWJvb2suY29tIiwiY2FjaGUtY29udHJvbCI6ICJtYXgtYWdlPTAiLCJ1c2VyLWFnZW50IjogdWEsImFjY2VwdCI6ICJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkiLCJzZWMtY2gtdWEiOiAnIiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjEwNCInLCJzZWMtY2gtdWEtbW9iaWxlIjogIj8xIiwic2VjLWZldGNoLXNpdGUiOiAic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ICJjb3JzIiwic2VjLWZldGNoLWRlc3QiOiAiZW1wdHkiLCJzZWMtZmV0Y2gtdXNlciI6ICI/MSIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiAiMSIsImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQoJCQlwID0gc2VzLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi5waHA/c2tpcF9hcGlfbG9naW49MSZhcGlfa2V5PTIwNjQyODA4OTUwODE0MyZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0yMDY0MjgwODk1MDgxNDMmc2lnbmVkX25leHQ9MSZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZkaWFsb2clMkZvYXV0aCUzRnJlc3BvbnNlX3R5cGUlM0Rjb2RlJTI2Y2xpZW50X2lkJTNEMjA2NDI4MDg5NTA4MTQzJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZ3d3cuemFsb3JhLmNvLmlkJTI1MkZjdXN0b21lciUyNTJGc29jaWFsY29ubmVjdCUyNTJGZW5kcG9pbnQlMjUzRmhhdXRoX2RvbmUlMjUzREZhY2Vib29rJTI2c2NvcGUlM0RlbWFpbCUyNTJDdXNlcl9iaXJ0aGRheSUyNnN0YXRlJTNESEEtUzNYMFBWN1pRSDZEQUZUSzVJSlJNOUVXWUNCT1U4MjE0TkxHJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNmxvZ2dlcl9pZCUzRDBjNjdiNTIwLWExODctNDhhNi04MTI1LTMyNTZmZTk3NTc3NSUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1odHRwcyUzQSUyRiUyRnd3dy56YWxvcmEuY28uaWQlMkZjdXN0b21lciUyRnNvY2lhbGNvbm5lY3QlMkZlbmRwb2ludCUzRmhhdXRoX2RvbmUlM0RGYWNlYm9vayUyNmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNESEEtUzNYMFBWN1pRSDZEQUZUSzVJSlJNOUVXWUNCT1U4MjE0TkxHJTIzXyUzRF8mZGlzcGxheT10b3VjaCZsb2NhbGU9aWRfSUQmcGxfZGJsPTAmcmVmc3JjPWRlcHJlY2F0ZWQmX3JkciIpCgkJCWRhdGFhID17J2xzZCc6IHJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJyxzdHIocC50ZXh0KSkuZ3JvdXAoMSksICdqYXpvZXN0JzogcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJyxzdHIocC50ZXh0KSkuZ3JvdXAoMSksICdtX3RzJzogcmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJyxzdHIocC50ZXh0KSkuZ3JvdXAoMSksICdsaSc6IHJlLnNlYXJjaCgnbmFtZT0ibGkiIHZhbHVlPSIoLio/KSInLHN0cihwLnRleHQpKS5ncm91cCgxKSwgJ3RyeV9udW1iZXInOiAnMCcsICd1bnJlY29nbml6ZWRfdHJpZXMnOiAnMCcsICdlbWFpbCc6IGlkZiwgJ3Bhc3MnOiBwdywgJ3ByZWZpbGxfY29udGFjdF9wb2ludCc6ICcnLCAncHJlZmlsbF9zb3VyY2UnOiAnJywgJ3ByZWZpbGxfdHlwZSc6ICcnLCAnZmlyc3RfcHJlZmlsbF9zb3VyY2UnOiAnJywgJ2ZpcnN0X3ByZWZpbGxfdHlwZSc6ICcnLCAnaGFkX2NwX3ByZWZpbGxlZCc6ICdmYWxzZScsICdoYWRfcGFzc3dvcmRfcHJlZmlsbGVkJzogJ2ZhbHNlJywgJ2lzX3NtYXJ0X2xvY2snOiAnZmFsc2UnLCAnYmlfeHJ3aCc6IHJlLnNlYXJjaCgnbmFtZT0iYmlfeHJ3aCIgdmFsdWU9IiguKj8pIicsc3RyKHAudGV4dCkpLmdyb3VwKDEpfQoJCQlrb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gcC5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQlrb2tpKz0nIG1fcGl4ZWxfcmF0aW89Mi42MjU7IHdkPTQxMng3NTYnCgkJCWhlYWRlPXsKCQkJIkhvc3QiOiAibS5mYWNlYm9vay5jb20iLAoJCQkiY29udGVudC1sZW5ndGgiOiBmIntsZW4oc3RyKGRhdGFhKSl9IiwKCQkJIngtZmItbHNkIjogcmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLHN0cihwLnRleHQpKS5ncm91cCgxKSwKCQkJIm9yaWdpbiI6ICJodHRwczovL20uZmFjZWJvb2suY29tIiwKCQkJImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLAoJCQkidXNlci1hZ2VudCI6IHVhLAoJCQkiYWNjZXB0IjogIiovKiIsCgkJCSJ4LXJlcXVlc3RlZC13aXRoIjogImNvbS5taWNyb3NvZnQuYmluZyIsCgkJCSJzZWMtY2gtdWEiOiAnIkNocm9taXVtIjt2PSIxMDYiLCAiR29vZ2xlIENocm9tZSI7dj0iMTA2IiwgIk5vdDtBPUJyYW5kIjt2PSI5OSInLAoJCQkic2VjLWNoLXVhLXBsYXRmb3JtIjogJyJBbmRyb2lkIicsCgkJCSJzZWMtY2gtdWEtbW9iaWxlIjogIj8xIiwKCQkJInNlYy1mZXRjaC1zaXRlIjogInNhbWUtb3JpZ2luIiwKCQkJInNlYy1mZXRjaC1tb2RlIjogImNvcnMiLAoJCQkic2VjLWZldGNoLWRlc3QiOiAiZW1wdHkiLAoJCQkic2VjLWZldGNoLXVzZXIiOiAiPzEiLAoJCQkicmVmZXJlciI6ICJodHRwczovL20uZmFjZWJvb2suY29tL3Y4LjAvZGlhbG9nL29hdXRoP3Jlc3BvbnNlX3R5cGU9Y29kZSUyQ2dyYW50ZWRfc2NvcGVzJmNsaWVudF9pZD0xMjM5MTM4MzUzMjAxNzE2JnJlZGlyZWN0X3VyaT1odHRwcyUzQSUyRiUyRmthY2hpc2hvcC1kMGMzYS5maXJlYmFzZWFwcC5jb20lMkZfXyUyRmF1dGglMkZoYW5kbGVyJnN0YXRlPUFNYmRtRG1EYXBsV0hfRGRvVl9XNFFRVG1XbWVjejFHeFdYQWxqMmNkcl9WZl8wYUtSaS1vV2UtWjNGVGlJajhwYTRKRDM0MnpOZUxXOTFhSHAxMkxZOWRPWWI4dE9QS090c0VsbGFqM0pZZEY3OS1jZjhXci1PUExoQW43WnExTGVVZkpXZEN4WDJtQVBLVllPRzBDQ2hETnhpQm5tVkNVRzNMR0NKM3NDVFNjMUViNWRac2VGVlplMmxVcWM2WXp6OTJWNThLaTNUdllNN0hqQ180MjFxd0dtTUhKTmkweElhZVZBOTE3WUNrbThkLXdNdGhPX2xTbTNlSVFQcnlQbmJyZVJZZ09OQnpodHg2OTJNWUNZQTNfNmRQbGttNzBKVmtJdUhHSFJpSjk4S29rU01RUmh4alpKQ0FwX0diS1ZNRFh2U1dtMFp0ZFlSNUNJNFVaZ3JCJnNjb3BlPXB1YmxpY19wcm9maWxlJTJDZW1haWwmZGlzcGxheT1wb3B1cCZyZXQ9bG9naW4mZmJhcHBfcHJlcz0wJmxvZ2dlcl9pZD0wODdhMzY0Yy0zZDY5LTQ1YjQtYTU1Yi0wNDdkYWU1MDMxN2MmdHA9dW5zcGVjaWZpZWQiLAoJCQkiYWNjZXB0LWVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUgYnIiLAoJCQkiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IiwKCQkJfQoJCQlwbyA9IHNlcy5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9sb2dpbi9hc3luYy8/cmVmc3JjPWRlcHJlY2F0ZWQmbHd2PTEwMCcsZGF0YT1kYXRhYSxjb29raWVzPXsnY29va2llJzoga29raX0saGVhZGVycz1oZWFkZSxhbGxvd19yZWRpcmVjdHM9RmFsc2UscHJveGllcz1wcm94cykKCQkJaWYgImNoZWNrcG9pbnQiIGluIHBvLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIGdhYnJpZWw6CgkJCQkJY3ArPTEKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c2NwID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIFVTRVJBR0VOVCA6IHt1YX0gJwoJCQkJCXN0YXR1c2NwMSA9IG5lbChzdGF0dXNjcCwgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHJlZCcsIHRpdGxlPSdaeExhbnNzLUNQJykKCQkJCQljZXRhayhzdGF0dXNjcDEpCgkJCQkJb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpCgkJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykKCQkJCQlicmVhawoJCQkJZWxpZiAneWEnIGluIGdhYnJpZWw6CgkJCQkJY3ArPTEKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c2NwID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIFVTRVJBR0VOVCA6IHt1YX0gJwoJCQkJCXN0YXR1c2NwMSA9IG5lbChzdGF0dXNjcCwgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHJlZCcsIHRpdGxlPSdaeExhbnNzLUNQJykKCQkJCQljZXRhayhzdGF0dXNjcDEpCgkJCQkJb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpCgkJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykKCQkJCQljZWtlcihpZGYscHcpCgkJCQkJYnJlYWsKCQkJZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQlicmVhawoJCQkJZWxpZiAneWEnIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJY2VrX2FwayhrdWtpKQoJCQkJCWJyZWFrCgkJCQkKCQkJZWxzZToKCQkJCWNvbnRpbnVlCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCQl0aW1lLnNsZWVwKDMxKQoJbG9vcCs9MQoJCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgTUVUT0RFIEFMUEhBIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGJhcGkoaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikKCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIltib2xkIHB1cnBsZV1NLUFscGhhW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczU6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtLmFscGhhLmZhY2Vib29rLmNvbSIsImNhY2hlLWNvbnRyb2wiOiAibWF4LWFnZT0wIiwidXNlci1hZ2VudCI6IHVhLCJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45Iiwic2VjLWNoLXVhIjogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMDQiJywic2VjLWNoLXVhLW1vYmlsZSI6ICI/MSIsInNlYy1mZXRjaC1zaXRlIjogInNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiAiY29ycyIsInNlYy1mZXRjaC1kZXN0IjogImVtcHR5Iiwic2VjLWZldGNoLXVzZXIiOiAiPzEiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcifSkKCQkJcCA9IHNlcy5nZXQoImh0dHBzOi8vbS5hbHBoYS5mYWNlYm9vay5jb20vbG9naW4ucGhwP3NraXBfYXBpX2xvZ2luPTEmYXBpX2tleT0yNzQyNjYwNjcxNjQma2lkX2RpcmVjdGVkX3NpdGU9MCZhcHBfaWQ9Mjc0MjY2MDY3MTY0JnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uYWxwaGEuZmFjZWJvb2suY29tJTJGdjIuNyUyRmRpYWxvZyUyRm9hdXRoJTNGYXBwX2lkJTNEMjc0MjY2MDY3MTY0JTI2Y2J0JTNEMTY3NTIzNzczNjkzNiUyNmNoYW5uZWxfdXJsJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZzdGF0aWN4eC5mYWNlYm9vay5jb20lMjUyRnglMjUyRmNvbm5lY3QlMjUyRnhkX2FyYml0ZXIlMjUyRiUyNTNGdmVyc2lvbiUyNTNENDYlMjUyM2NiJTI1M0RmMzNlZWVkZjBkMjNjNzQlMjUyNmRvbWFpbiUyNTNEaWQucGludGVyZXN0LmNvbSUyNTI2aXNfY2FudmFzJTI1M0RmYWxzZSUyNTI2b3JpZ2luJTI1M0RodHRwcyUyNTI1M0ElMjUyNTJGJTI1MjUyRmlkLnBpbnRlcmVzdC5jb20lMjUyNTJGZjRjMDFlOTU2NGRhNDQlMjUyNnJlbGF0aW9uJTI1M0RvcGVuZXIlMjZjbGllbnRfaWQlM0QyNzQyNjYwNjcxNjQlMjZkaXNwbGF5JTNEdG91Y2glMjZkb21haW4lM0RpZC5waW50ZXJlc3QuY29tJTI2ZTJlJTNEJTI1N0IlMjU3RCUyNmZhbGxiYWNrX3JlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGaWQucGludGVyZXN0LmNvbSUyNTJGbG9naW4lMjZsb2NhbGUlM0RpZF9JRCUyNmxvZ2dlcl9pZCUzRGYyN2ZhMDRjZDkyMGU5OCUyNm9yaWdpbiUzRDIlMjZyZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyNTJGeCUyNTJGY29ubmVjdCUyNTJGeGRfYXJiaXRlciUyNTJGJTI1M0Z2ZXJzaW9uJTI1M0Q0NiUyNTIzY2IlMjUzRGY5NmY0NGQxNWY3ZWE4JTI1MjZkb21haW4lMjUzRGlkLnBpbnRlcmVzdC5jb20lMjUyNmlzX2NhbnZhcyUyNTNEZmFsc2UlMjUyNm9yaWdpbiUyNTNEaHR0cHMlMjUyNTNBJTI1MjUyRiUyNTI1MkZpZC5waW50ZXJlc3QuY29tJTI1MjUyRmY0YzAxZTk1NjRkYTQ0JTI1MjZyZWxhdGlvbiUyNTNEb3BlbmVyJTI1MjZmcmFtZSUyNTNEZjdlZmQ5ZDg0Yjk2YTglMjZyZXNwb25zZV90eXBlJTNEdG9rZW4lMjUyQ3NpZ25lZF9yZXF1ZXN0JTI1MkNncmFwaF9kb21haW4lMjZzY29wZSUzRHB1YmxpY19wcm9maWxlJTI1MkNlbWFpbCUyNTJDdXNlcl9iaXJ0aGRheSUyNTJDdXNlcl9mcmllbmRzJTI2c2RrJTNEam9leSUyNnZlcnNpb24lM0R2Mi43JTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1odHRwcyUzQSUyRiUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyRnglMkZjb25uZWN0JTJGeGRfYXJiaXRlciUyRiUzRnZlcnNpb24lM0Q0NiUyM2NiJTNEZjk2ZjQ0ZDE1ZjdlYTglMjZkb21haW4lM0RpZC5waW50ZXJlc3QuY29tJTI2aXNfY2FudmFzJTNEZmFsc2UlMjZvcmlnaW4lM0RodHRwcyUyNTNBJTI1MkYlMjUyRmlkLnBpbnRlcmVzdC5jb20lMjUyRmY0YzAxZTk1NjRkYTQ0JTI2cmVsYXRpb24lM0RvcGVuZXIlMjZmcmFtZSUzRGY3ZWZkOWQ4NGI5NmE4JTI2ZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHIiKQoJCQlkYXRhYSA9eydsc2QnOiByZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsc3RyKHAudGV4dCkpLmdyb3VwKDEpLCAnamF6b2VzdCc6IHJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsc3RyKHAudGV4dCkpLmdyb3VwKDEpLCAnbV90cyc6IHJlLnNlYXJjaCgnbmFtZT0ibV90cyIgdmFsdWU9IiguKj8pIicsc3RyKHAudGV4dCkpLmdyb3VwKDEpLCAnbGknOiByZS5zZWFyY2goJ25hbWU9ImxpIiB2YWx1ZT0iKC4qPykiJyxzdHIocC50ZXh0KSkuZ3JvdXAoMSksICd0cnlfbnVtYmVyJzogJzAnLCAndW5yZWNvZ25pemVkX3RyaWVzJzogJzAnLCAnZW1haWwnOiBpZGYsICdwYXNzJzogcHcsICdwcmVmaWxsX2NvbnRhY3RfcG9pbnQnOiAnJywgJ3ByZWZpbGxfc291cmNlJzogJycsICdwcmVmaWxsX3R5cGUnOiAnJywgJ2ZpcnN0X3ByZWZpbGxfc291cmNlJzogJycsICdmaXJzdF9wcmVmaWxsX3R5cGUnOiAnJywgJ2hhZF9jcF9wcmVmaWxsZWQnOiAnZmFsc2UnLCAnaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCc6ICdmYWxzZScsICdpc19zbWFydF9sb2NrJzogJ2ZhbHNlJywgJ2JpX3hyd2gnOiByZS5zZWFyY2goJ25hbWU9ImJpX3hyd2giIHZhbHVlPSIoLio/KSInLHN0cihwLnRleHQpKS5ncm91cCgxKX0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJa29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2JwoJCQloZWFkZT17CgkJCSJIb3N0IjogIm0uYWxwaGEuZmFjZWJvb2suY29tIiwKCQkJImNvbnRlbnQtbGVuZ3RoIjogZiJ7bGVuKHN0cihkYXRhYSkpfSIsCgkJCSJ4LWZiLWxzZCI6IHJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJyxzdHIocC50ZXh0KSkuZ3JvdXAoMSksCgkJCSJvcmlnaW4iOiAiaHR0cHM6Ly9tLmFscGhhLmZhY2Vib29rLmNvbSIsCgkJCSJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwKCQkJInVzZXItYWdlbnQiOiB1YSwKCQkJImFjY2VwdCI6ICIqLyoiLAoJCQkieC1yZXF1ZXN0ZWQtd2l0aCI6ICJjb20ubWljcm9zb2Z0LmJpbmciLAoJCQkic2VjLWNoLXVhIjogJyJDaHJvbWl1bSI7dj0iMTA2IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEwNiIsICJOb3Q7QT1CcmFuZCI7dj0iOTkiJywKCQkJInNlYy1jaC11YS1wbGF0Zm9ybSI6ICciQW5kcm9pZCInLAoJCQkic2VjLWNoLXVhLW1vYmlsZSI6ICI/MSIsCgkJCSJzZWMtZmV0Y2gtc2l0ZSI6ICJzYW1lLW9yaWdpbiIsCgkJCSJzZWMtZmV0Y2gtbW9kZSI6ICJjb3JzIiwKCQkJInNlYy1mZXRjaC1kZXN0IjogImVtcHR5IiwKCQkJInNlYy1mZXRjaC11c2VyIjogIj8xIiwKCQkJInJlZmVyZXIiOiAiaHR0cHM6Ly9tLmFscGhhLmZhY2Vib29rLmNvbS92Mi43L2RpYWxvZy9vYXV0aD9hcHBfaWQ9Mjc0MjY2MDY3MTY0JmNidD0xNjc1MjM3NzM2OTM2JmNoYW5uZWxfdXJsPWh0dHBzJTNBJTJGJTJGc3RhdGljeHguZmFjZWJvb2suY29tJTJGeCUyRmNvbm5lY3QlMkZ4ZF9hcmJpdGVyJTJGJTNGdmVyc2lvbiUzRDQ2JTIzY2IlM0RmMzNlZWVkZjBkMjNjNzQlMjZkb21haW4lM0RpZC5waW50ZXJlc3QuY29tJTI2aXNfY2FudmFzJTNEZmFsc2UlMjZvcmlnaW4lM0RodHRwcyUyNTNBJTI1MkYlMjUyRmlkLnBpbnRlcmVzdC5jb20lMjUyRmY0YzAxZTk1NjRkYTQ0JTI2cmVsYXRpb24lM0RvcGVuZXImY2xpZW50X2lkPTI3NDI2NjA2NzE2NCZkaXNwbGF5PXRvdWNoJmRvbWFpbj1pZC5waW50ZXJlc3QuY29tJmUyZT0lN0IlN0QmZmFsbGJhY2tfcmVkaXJlY3RfdXJpPWh0dHBzJTNBJTJGJTJGaWQucGludGVyZXN0LmNvbSUyRmxvZ2luJmxvY2FsZT1pZF9JRCZsb2dnZXJfaWQ9ZjI3ZmEwNGNkOTIwZTk4Jm9yaWdpbj0yJnJlZGlyZWN0X3VyaT1odHRwcyUzQSUyRiUyRnN0YXRpY3h4LmZhY2Vib29rLmNvbSUyRnglMkZjb25uZWN0JTJGeGRfYXJiaXRlciUyRiUzRnZlcnNpb24lM0Q0NiUyM2NiJTNEZjk2ZjQ0ZDE1ZjdlYTglMjZkb21haW4lM0RpZC5waW50ZXJlc3QuY29tJTI2aXNfY2FudmFzJTNEZmFsc2UlMjZvcmlnaW4lM0RodHRwcyUyNTNBJTI1MkYlMjUyRmlkLnBpbnRlcmVzdC5jb20lMjUyRmY0YzAxZTk1NjRkYTQ0JTI2cmVsYXRpb24lM0RvcGVuZXIlMjZmcmFtZSUzRGY3ZWZkOWQ4NGI5NmE4JnJlc3BvbnNlX3R5cGU9dG9rZW4lMkNzaWduZWRfcmVxdWVzdCUyQ2dyYXBoX2RvbWFpbiZzY29wZT1wdWJsaWNfcHJvZmlsZSUyQ2VtYWlsJTJDdXNlcl9iaXJ0aGRheSUyQ3VzZXJfZnJpZW5kcyZzZGs9am9leSZ2ZXJzaW9uPXYyLjcmcmV0PWxvZ2luJmZiYXBwX3ByZXM9MCZ0cD11bnNwZWNpZmllZCIsCgkJCSJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSBiciIsCgkJCSJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLAoJCQl9CgkJCXBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vbS5hbHBoYS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL2xvZ2luL2FzeW5jLz9yZWZzcmM9ZGVwcmVjYXRlZCZsd3Y9MTAwJyxkYXRhPWRhdGFhLGNvb2tpZXM9eydjb29raWUnOiBrb2tpfSxoZWFkZXJzPWhlYWRlLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxwcm94aWVzPXByb3hzKQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWNla2VyKGlkZixwdykKCQkJCQlicmVhawoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQljZWtfYXBrKGt1a2kpCgkJCQkJYnJlYWsKCQkJCQoJCQllbHNlOgoJCQkJY29udGludWUKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMzEpCglsb29wKz0xCgojLS0tLS0tLS0tLS0tLS0tLS0tLS1bIE1FVE9ERSBYIF0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGNvbG1lazEoaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikKCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIltib2xkIHB1cnBsZV1YW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczQ6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsnSG9zdCc6ICd4LmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43J30pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL3guZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjIuMyUyRmRpYWxvZyUyRm9hdXRoJTNGYXBwX2lkJTNEMTI0MDI0NTc0Mjg3NDE0JTI2Y2J0JTNEMTY1MTY1ODIwMDk3OCUyNmUyZSUzRCUyNTdCJTI1MjJpbml0JTI1MjIlMjUzQTE2NTE2NTgyMDA5NzglMjU3RCUyNnNzbyUzRGNocm9tZV9jdXN0b21fdGFiJTI2c2NvcGUlM0RlbWFpbCUyNnN0YXRlJTNEJTI1N0IlMjUyMjBfYXV0aF9sb2dnZXJfaWQlMjUyMiUyNTNBJTI1MjI2OGYxNWJhZS0yM2Y4LTQ2M2MtODY2MC01Y2YxMjI2ZDk3ZjYlMjUyMiUyNTJDJTI1MjI3X2NoYWxsZW5nZSUyNTIyJTI1M0ElMjUyMmRhaGoyOGhxdGlldG1ocmdwcnBwJTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjU3RCUyNnJlZGlyZWN0X3VyaSUzRGZiY29ubmVjdCUyNTNBJTI1MkYlMjUyRmNjdC5jb20uaW5zdGF0aHVuZGVyLmFwcCUyNnJlc3BvbnNlX3R5cGUlM0R0b2tlbiUyNTJDc2lnbmVkX3JlcXVlc3QlMjUyQ2dyYXBoX2RvbWFpbiUyNTJDZ3JhbnRlZF9zY29wZXMlMjZyZXR1cm5fc2NvcGVzJTNEdHJ1ZSUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0Q2OGYxNWJhZS0yM2Y4LTQ2M2MtODY2MC01Y2YxMjI2ZDk3ZjYlMjZ0cCUzRHVuc3BlY2lmaWVkJmNhbmNlbF91cmw9ZmJjb25uZWN0JTNBJTJGJTJGY2N0LmNvbS5pbnN0YXRodW5kZXIuYXBwJTNGZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJTI2c3RhdGUlM0QlMjU3QiUyNTIyMF9hdXRoX2xvZ2dlcl9pZCUyNTIyJTI1M0ElMjUyMjY4ZjE1YmFlLTIzZjgtNDYzYy04NjYwLTVjZjEyMjZkOTdmNiUyNTIyJTI1MkMlMjUyMjdfY2hhbGxlbmdlJTI1MjIlMjUzQSUyNTIyZGFoajI4aHF0aWV0bWhyZ3BycHAlMjUyMiUyNTJDJTI1MjIzX21ldGhvZCUyNTIyJTI1M0ElMjUyMmN1c3RvbV90YWIlMjUyMiUyNTdEJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInKQoJCQlkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly94LmZhY2Vib29rLmNvbS9sb2dpbi5waHA/c2tpcF9hcGlfbG9naW49MSZhcGlfa2V5PTEyMzQ4MTQ3MTMyOTA0NiZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0xMjM0ODE0NzEzMjkwNDYmc2lnbmVkX25leHQ9MSZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZ2My4xJTJGZGlhbG9nJTJGb2F1dGglM0ZyZXNwb25zZV90eXBlJTNEY29kZSUyNmNsaWVudF9pZCUzRDEyMzQ4MTQ3MTMyOTA0NiUyNnN0YXRlJTNEOTdjZ3o2N24lMjZyZWRpcmVjdF91cmklM0RodHRwcyUyNTNBJTI1MkYlMjUyRnBsb2dpbi5qZC5pZCUyNTJGY2dpLWJpbiUyNTJGbWxvZ2luJTI1MkZmYWNlYm9va2NhbGxiYWNrJTI2c2NvcGUlM0RlbWFpbCUyNmxvY2FsZSUzRGVuX1VTJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNmxvZ2dlcl9pZCUzRDdkYTI5ZWExLTMxYmEtNGIwNy1hMzBkLTlmZGFmYzhiZmRkNyUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1odHRwcyUzQSUyRiUyRnBsb2dpbi5qZC5pZCUyRmNnaS1iaW4lMkZtbG9naW4lMkZmYWNlYm9va2NhbGxiYWNrJTNGZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJTI2c3RhdGUlM0Q5N2NnejY3biUyM18lM0RfJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHIiLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQoJCQlrb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gcC5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQlrb2tpKz0nIG1fcGl4ZWxfcmF0aW89Mi42MjU7IHdkPTQxMng3NTYnCgkJCWhlYWRlPXsnSG9zdCc6ICd4LmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhJzogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSI5OCInLCdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ29yaWdpbic6ICdodHRwczovL20uZmFjZWJvb2suY29tJywnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3gtcmVxdWVzdGVkLXdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLCdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLW9yaWdpbicsJ3NlYy1mZXRjaC1tb2RlJzogJ2NvcnMnLCdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsJ3JlZmVyZXInOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD0nK2lkZisnJmZsb3c9bG9naW5fbm9fcGluJm5leHQ9aHR0cHMlM0ElMkYlMkZtLmZhY2Vib29rLmNvbSUyRnYyLjMlMkZkaWFsb2clMkZvYXV0aCUzRmFwcF9pZCUzRDEyNDAyNDU3NDI4NzQxNCUyNmNidCUzRDE2NTE2NTgyMDA5NzglMjZlMmUlM0QlMjU3QiUyNTIyaW5pdCUyNTIyJTI1M0ExNjUxNjU4MjAwOTc4JTI1N0QlMjZzc28lM0RjaHJvbWVfY3VzdG9tX3RhYiUyNnNjb3BlJTNEZW1haWwlMjZzdGF0ZSUzRCUyNTdCJTI1MjIwX2F1dGhfbG9nZ2VyX2lkJTI1MjIlMjUzQSUyNTIyNjhmMTViYWUtMjNmOC00NjNjLTg2NjAtNWNmMTIyNmQ5N2Y2JTI1MjIlMjUyQyUyNTIyN19jaGFsbGVuZ2UlMjUyMiUyNTNBJTI1MjJkYWhqMjhocXRpZXRtaHJncHJwcCUyNTIyJTI1MkMlMjUyMjNfbWV0aG9kJTI1MjIlMjUzQSUyNTIyY3VzdG9tX3RhYiUyNTIyJTI1N0QlMjZyZWRpcmVjdF91cmklM0RmYmNvbm5lY3QlMjUzQSUyNTJGJTI1MkZjY3QuY29tLmluc3RhdGh1bmRlci5hcHAlMjZyZXNwb25zZV90eXBlJTNEdG9rZW4lMjUyQ3NpZ25lZF9yZXF1ZXN0JTI1MkNncmFwaF9kb21haW4lMjUyQ2dyYW50ZWRfc2NvcGVzJTI2cmV0dXJuX3Njb3BlcyUzRHRydWUlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNENjhmMTViYWUtMjNmOC00NjNjLTg2NjAtNWNmMTIyNmQ5N2Y2JTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWZiY29ubmVjdCUzQSUyRiUyRmNjdC5jb20uaW5zdGF0aHVuZGVyLmFwcCUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNEJTI1N0IlMjUyMjBfYXV0aF9sb2dnZXJfaWQlMjUyMiUyNTNBJTI1MjI2OGYxNWJhZS0yM2Y4LTQ2M2MtODY2MC01Y2YxMjI2ZDk3ZjYlMjUyMiUyNTJDJTI1MjI3X2NoYWxsZW5nZSUyNTIyJTI1M0ElMjUyMmRhaGoyOGhxdGlldG1ocmdwcnBwJTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjU3RCZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJywnYWNjZXB0LWVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43J30KCQkJcG8gPSBzZXMucG9zdCgnaHR0cHM6Ly94LmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCZsb2NhbGUyPWlkX0lEJyxkYXRhPWRhdGFhLGNvb2tpZXM9eydjb29raWUnOiBrb2tpfSxoZWFkZXJzPWhlYWRlLGFsbG93X3JlZGlyZWN0cz1GYWxzZSxwcm94aWVzPXByb3hzKQoJCQlpZiAiY2hlY2twb2ludCIgaW4gcG8uY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gZ2FicmllbDoKCQkJCQljcCs9MQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzY3AgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gVVNFUkFHRU5UIDoge3VhfSAnCgkJCQkJc3RhdHVzY3AxID0gbmVsKHN0YXR1c2NwLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcmVkJywgdGl0bGU9J1p4TGFuc3MtQ1AnKQoJCQkJCWNldGFrKHN0YXR1c2NwMSkKCQkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykKCQkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQoJCQkJCWNla2VyKGlkZixwdykKCQkJCQlicmVhawoJCQllbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOgoJCQkJaWYgJ25vJyBpbiB0YXBsaWthc2k6CgkJCQkJb2srPTEKCQkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQoJCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c29rID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIENPT0tJRVMgIDoge2t1a2l9JwoJCQkJCXN0YXR1c29rMSA9IG5lbChzdGF0dXNvaywgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHB1cnBsZScsIHRpdGxlPSdaeExhbnNzLU9LJykKCQkJCQljZXRhayhzdGF0dXNvazEpCgkJCQkJb3BlbignT0svJytva2MsJ2EnKS53cml0ZShpZGYrJ3wnK3B3Kyd8Jyt1YSsnXG4nKQoJCQkJCWJyZWFrCgkJCQllbGlmICd5YScgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQljZWtfYXBrKGt1a2kpCgkJCQkJYnJlYWsKCQkJCQoJCQllbHNlOgoJCQkJY29udGludWUKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMzEpCglsb29wKz0xCgojLS0tLS0tLS0tLS0tLS0tLS0tLS1bIE1FVE9ERSBEIF0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGNvbG1lazIoaWRmLHB3dik6CglnbG9iYWwgbG9vcCxvayxjcAoJYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pCgl1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikKCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIltib2xkIHB1cnBsZV1kW2JvbGQgd2hpdGVdIHtsb29wfS97bGVuKGlkKX0gT0stOltib2xkIHB1cnBsZV17b2t9Wy9dIENQLTpbYm9sZCByZWRde2NwfVsvXSIpCglwcm9nLmFkdmFuY2UoZGVzKSAKCWZvciBwdyBpbiBwd3Y6CgkJdHJ5OgoJCQlpZiAneWEnIGluIHVhbHVoOiB1YSA9IHVhbHVbMF0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkKCQkJcHJveHM9IHsnaHR0cCc6ICdzb2NrczQ6Ly8nK25pcH0KCQkJc2VzLmhlYWRlcnMudXBkYXRlKHsnSG9zdCc6ICdkLmZhY2Vib29rLmNvbScsJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsJ3VzZXItYWdlbnQnOiB1YSwnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43J30pCgkJCXAgPSBzZXMuZ2V0KCdodHRwczovL2QuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjIuMyUyRmRpYWxvZyUyRm9hdXRoJTNGYXBwX2lkJTNEMTI0MDI0NTc0Mjg3NDE0JTI2Y2J0JTNEMTY1MTY1ODIwMDk3OCUyNmUyZSUzRCUyNTdCJTI1MjJpbml0JTI1MjIlMjUzQTE2NTE2NTgyMDA5NzglMjU3RCUyNnNzbyUzRGNocm9tZV9jdXN0b21fdGFiJTI2c2NvcGUlM0RlbWFpbCUyNnN0YXRlJTNEJTI1N0IlMjUyMjBfYXV0aF9sb2dnZXJfaWQlMjUyMiUyNTNBJTI1MjI2OGYxNWJhZS0yM2Y4LTQ2M2MtODY2MC01Y2YxMjI2ZDk3ZjYlMjUyMiUyNTJDJTI1MjI3X2NoYWxsZW5nZSUyNTIyJTI1M0ElMjUyMmRhaGoyOGhxdGlldG1ocmdwcnBwJTI1MjIlMjUyQyUyNTIyM19tZXRob2QlMjUyMiUyNTNBJTI1MjJjdXN0b21fdGFiJTI1MjIlMjU3RCUyNnJlZGlyZWN0X3VyaSUzRGZiY29ubmVjdCUyNTNBJTI1MkYlMjUyRmNjdC5jb20uaW5zdGF0aHVuZGVyLmFwcCUyNnJlc3BvbnNlX3R5cGUlM0R0b2tlbiUyNTJDc2lnbmVkX3JlcXVlc3QlMjUyQ2dyYXBoX2RvbWFpbiUyNTJDZ3JhbnRlZF9zY29wZXMlMjZyZXR1cm5fc2NvcGVzJTNEdHJ1ZSUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0Q2OGYxNWJhZS0yM2Y4LTQ2M2MtODY2MC01Y2YxMjI2ZDk3ZjYlMjZ0cCUzRHVuc3BlY2lmaWVkJmNhbmNlbF91cmw9ZmJjb25uZWN0JTNBJTJGJTJGY2N0LmNvbS5pbnN0YXRodW5kZXIuYXBwJTNGZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJTI2c3RhdGUlM0QlMjU3QiUyNTIyMF9hdXRoX2xvZ2dlcl9pZCUyNTIyJTI1M0ElMjUyMjY4ZjE1YmFlLTIzZjgtNDYzYy04NjYwLTVjZjEyMjZkOTdmNiUyNTIyJTI1MkMlMjUyMjdfY2hhbGxlbmdlJTI1MjIlMjUzQSUyNTIyZGFoajI4aHF0aWV0bWhyZ3BycHAlMjUyMiUyNTJDJTI1MjIzX21ldGhvZCUyNTIyJTI1M0ElMjUyMmN1c3RvbV90YWIlMjUyMiUyNTdEJmRpc3BsYXk9dG91Y2gmbG9jYWxlPWlkX0lEJnBsX2RibD0wJnJlZnNyYz1kZXByZWNhdGVkJl9yZHInKQoJCQlkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9kLmZhY2Vib29rLmNvbS9sb2dpbi5waHA/c2tpcF9hcGlfbG9naW49MSZhcGlfa2V5PTE2NjM2MzI0MzM5OTkyNCZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0xNjYzNjMyNDMzOTk5MjQmc2lnbmVkX25leHQ9MSZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZkaWFsb2clMkZvYXV0aCUzRmNsaWVudF9pZCUzRDE2NjM2MzI0MzM5OTkyNCUyNmRpc3BsYXklM0Rwb3B1cCUyNnJlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGdGhpcmRwYXJ0eS5hbGlleHByZXNzLmNvbSUyNTJGZmJjYWxsYmFjay5odG0lMjZzY29wZSUzRGVtYWlsJTI1MkNwdWJsaWNfcHJvZmlsZSUyNTJDdXNlcl9tZXNzZW5nZXJfY29udGFjdCUyNm1lc3Nlbmdlcl9wYWdlX2lkJTNEMzM1OTYzMzA3NTYwJTI2c3RhdGUlM0RSNDhsYVVWZDByUFdzUnZISkZUS3RUUzVjRnI4WkclMjUyQkNSWUFCVTRxVnZQdlJLMzdwUUs1dVFXaUZzOTNJWTlhMXklMjUyQlhzeElzdk9ZNjBxNzhGako5RUN0V1BSMUw0YiUyNTJCMUFaMVhNbW90S25pbFhsQWU4TWQxamYxVlo2MUZ0SHZUJTI1MkYlMjUyRjZVQmMxZ3FVd1FFVndmYWkzWnRuYWwlMjUyRiUyNTJGZldpdXdKMzFxWSUyNTJGQW9VdnZQekphJTI1MkJBNjZZd2s4bm5QcU5CZFhCaTYlMjZyZXQlM0Rsb2dpbiUyNmZiYXBwX3ByZXMlM0QwJTI2bG9nZ2VyX2lkJTNENzcyMGNiYjMtNmNjYi00OGJlLTg4MjAtODc3NWM2YzdiNjdkJTI2dHAlM0R1bnNwZWNpZmllZCZjYW5jZWxfdXJsPWh0dHBzJTNBJTJGJTJGdGhpcmRwYXJ0eS5hbGlleHByZXNzLmNvbSUyRmZiY2FsbGJhY2suaHRtJTNGZXJyb3IlM0RhY2Nlc3NfZGVuaWVkJTI2ZXJyb3JfY29kZSUzRDIwMCUyNmVycm9yX2Rlc2NyaXB0aW9uJTNEUGVybWlzc2lvbnMlMkJlcnJvciUyNmVycm9yX3JlYXNvbiUzRHVzZXJfZGVuaWVkJTI2c3RhdGUlM0RSNDhsYVVWZDByUFdzUnZISkZUS3RUUzVjRnI4WkclMjUyQkNSWUFCVTRxVnZQdlJLMzdwUUs1dVFXaUZzOTNJWTlhMXklMjUyQlhzeElzdk9ZNjBxNzhGako5RUN0V1BSMUw0YiUyNTJCMUFaMVhNbW90S25pbFhsQWU4TWQxamYxVlo2MUZ0SHZUJTI1MkYlMjUyRjZVQmMxZ3FVd1FFVndmYWkzWnRuYWwlMjUyRiUyNTJGZldpdXdKMzFxWSUyNTJGQW9VdnZQekphJTI1MkJBNjZZd2s4bm5QcU5CZFhCaTYlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyIiwiZmxvdyI6ImxvZ2luX25vX3BpbiIsInBhc3MiOnB3LH0KCQkJa29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKCQkJa29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2JwoJCQloZWFkZT17J0hvc3QnOiAnZC5mYWNlYm9vay5jb20nLCdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iOTgiJywnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLCd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLCdvcmlnaW4nOiAnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScsJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLCd1c2VyLWFnZW50JzogdWEsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCd4LXJlcXVlc3RlZC13aXRoJzogJ1hNTEh0dHBSZXF1ZXN0Jywnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLCdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLCdyZWZlcmVyJzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9JytpZGYrJyZmbG93PWxvZ2luX25vX3BpbiZuZXh0PWh0dHBzJTNBJTJGJTJGbS5mYWNlYm9vay5jb20lMkZ2Mi4zJTJGZGlhbG9nJTJGb2F1dGglM0ZhcHBfaWQlM0QxMjQwMjQ1NzQyODc0MTQlMjZjYnQlM0QxNjUxNjU4MjAwOTc4JTI2ZTJlJTNEJTI1N0IlMjUyMmluaXQlMjUyMiUyNTNBMTY1MTY1ODIwMDk3OCUyNTdEJTI2c3NvJTNEY2hyb21lX2N1c3RvbV90YWIlMjZzY29wZSUzRGVtYWlsJTI2c3RhdGUlM0QlMjU3QiUyNTIyMF9hdXRoX2xvZ2dlcl9pZCUyNTIyJTI1M0ElMjUyMjY4ZjE1YmFlLTIzZjgtNDYzYy04NjYwLTVjZjEyMjZkOTdmNiUyNTIyJTI1MkMlMjUyMjdfY2hhbGxlbmdlJTI1MjIlMjUzQSUyNTIyZGFoajI4aHF0aWV0bWhyZ3BycHAlMjUyMiUyNTJDJTI1MjIzX21ldGhvZCUyNTIyJTI1M0ElMjUyMmN1c3RvbV90YWIlMjUyMiUyNTdEJTI2cmVkaXJlY3RfdXJpJTNEZmJjb25uZWN0JTI1M0ElMjUyRiUyNTJGY2N0LmNvbS5pbnN0YXRodW5kZXIuYXBwJTI2cmVzcG9uc2VfdHlwZSUzRHRva2VuJTI1MkNzaWduZWRfcmVxdWVzdCUyNTJDZ3JhcGhfZG9tYWluJTI1MkNncmFudGVkX3Njb3BlcyUyNnJldHVybl9zY29wZXMlM0R0cnVlJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNmxvZ2dlcl9pZCUzRDY4ZjE1YmFlLTIzZjgtNDYzYy04NjYwLTVjZjEyMjZkOTdmNiUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1mYmNvbm5lY3QlM0ElMkYlMkZjY3QuY29tLmluc3RhdGh1bmRlci5hcHAlM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzRCUyNTdCJTI1MjIwX2F1dGhfbG9nZ2VyX2lkJTI1MjIlMjUzQSUyNTIyNjhmMTViYWUtMjNmOC00NjNjLTg2NjAtNWNmMTIyNmQ5N2Y2JTI1MjIlMjUyQyUyNTIyN19jaGFsbGVuZ2UlMjUyMiUyNTNBJTI1MjJkYWhqMjhocXRpZXRtaHJncHJwcCUyNTIyJTI1MkMlMjUyMjNfbWV0aG9kJTI1MjIlMjUzQSUyNTIyY3VzdG9tX3RhYiUyNTIyJTI1N0QmZGlzcGxheT10b3VjaCZsb2NhbGU9aWRfSUQmcGxfZGJsPTAmcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicsJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsJ2FjY2VwdC1sYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyd9CgkJCXBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vZC5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAmbG9jYWxlMj1pZF9JRCcsZGF0YT1kYXRhYSxjb29raWVzPXsnY29va2llJzoga29raX0saGVhZGVycz1oZWFkZSxhbGxvd19yZWRpcmVjdHM9RmFsc2UscHJveGllcz1wcm94cykKCQkJaWYgImNoZWNrcG9pbnQiIGluIHBvLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6CgkJCQlpZiAnbm8nIGluIGdhYnJpZWw6CgkJCQkJY3ArPTEKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c2NwID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIFVTRVJBR0VOVCA6IHt1YX0gJwoJCQkJCXN0YXR1c2NwMSA9IG5lbChzdGF0dXNjcCwgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHJlZCcsIHRpdGxlPSdaeExhbnNzLUNQJykKCQkJCQljZXRhayhzdGF0dXNjcDEpCgkJCQkJb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpCgkJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykKCQkJCQlicmVhawoJCQkJZWxpZiAneWEnIGluIGdhYnJpZWw6CgkJCQkJY3ArPTEKCQkJCQlwcmludCgnXG4nKQoJCQkJCXN0YXR1c2NwID0gZidbW+KAol1dIElEICAgICAgIDoge2lkZn1cbltb4oCiXV0gUEFTU1dPUkQgOiB7cHd9XG5bW+KAol1dIFVTRVJBR0VOVCA6IHt1YX0gJwoJCQkJCXN0YXR1c2NwMSA9IG5lbChzdGF0dXNjcCwgd2lkdGg9OTAsIHN0eWxlPSdib2xkIHJlZCcsIHRpdGxlPSdaeExhbnNzLUNQJykKCQkJCQljZXRhayhzdGF0dXNjcDEpCgkJCQkJb3BlbignQ1AvJytjcGMsJ2EnKS53cml0ZShpZGYrJ3wnK3B3KydcbicpCgkJCQkJYWt1bi5hcHBlbmQoaWRmKyd8JytwdykKCQkJCQljZWtlcihpZGYscHcpCgkJCQkJYnJlYWsKCQkJZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToKCQkJCWlmICdubycgaW4gdGFwbGlrYXNpOgoJCQkJCW9rKz0xCgkJCQkJY29raT1wby5jb29raWVzLmdldF9kaWN0KCkKCQkJCQlrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJCQkJcHJpbnQoJ1xuJykKCQkJCQlzdGF0dXNvayA9IGYnW1vigKJdXSBJRCAgICAgICA6IHtpZGZ9XG5bW+KAol1dIFBBU1NXT1JEIDoge3B3fVxuW1vigKJdXSBDT09LSUVTICA6IHtrdWtpfScKCQkJCQlzdGF0dXNvazEgPSBuZWwoc3RhdHVzb2ssIHdpZHRoPTkwLCBzdHlsZT0nYm9sZCBwdXJwbGUnLCB0aXRsZT0nWnhMYW5zcy1PSycpCgkJCQkJY2V0YWsoc3RhdHVzb2sxKQoJCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykKCQkJCQlicmVhawoJCQkJZWxpZiAneWEnIGluIHRhcGxpa2FzaToKCQkJCQlvays9MQoJCQkJCWNva2k9cG8uY29va2llcy5nZXRfZGljdCgpCgkJCQkJa3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCXByaW50KCdcbicpCgkJCQkJc3RhdHVzb2sgPSBmJ1tb4oCiXV0gSUQgICAgICAgOiB7aWRmfVxuW1vigKJdXSBQQVNTV09SRCA6IHtwd31cbltb4oCiXV0gQ09PS0lFUyAgOiB7a3VraX0nCgkJCQkJc3RhdHVzb2sxID0gbmVsKHN0YXR1c29rLCB3aWR0aD05MCwgc3R5bGU9J2JvbGQgcHVycGxlJywgdGl0bGU9J1p4TGFuc3MtT0snKQoJCQkJCWNldGFrKHN0YXR1c29rMSkKCQkJCQlvcGVuKCdPSy8nK29rYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ3wnK3VhKydcbicpCgkJCQkJY2VrX2FwayhrdWtpKQoJCQkJCWJyZWFrCgkJCQkKCQkJZWxzZToKCQkJCWNvbnRpbnVlCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgoJCQl0aW1lLnNsZWVwKDMxKQoJbG9vcCs9MQoKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBDRUsgQVBMSUtBU0kgXS0tLS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgY2VrX2FwayhrdWtpKToKCXNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKCXc9c2Vzc2lvbi5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWFjdGl2ZSIsY29va2llcz17ImNvb2tpZSI6Im5vc2NyaXB0PTE7IitrdWtpfSkudGV4dAoJc29wID0gYnM0LkJlYXV0aWZ1bFNvdXAodywiaHRtbC5wYXJzZXIiKQoJeCA9IHNvcC5maW5kKCJmb3JtIixtZXRob2Q9InBvc3QiKQoJZ2FtZSA9IFtpLnRleHQgZm9yIGkgaW4geC5maW5kX2FsbCgiaDMiKV0KCXRyeToKCQlmb3IgaSBpbiByYW5nZShsZW4oZ2FtZSkpOgoJCQlwcmludCAoIlxyJXMgIFwwMzNbMG0gICAgICAgICAgICAgIMOixb7igLogJXMlcyIlKFAsSCxnYW1lW2ldLnJlcGxhY2UoIkRpdGFtYmFoa2FuIHBhZGEiLCIgRGl0YW1iYWhrYW4gcGFkYSIpKSkKCWV4Y2VwdCBBdHRyaWJ1dGVFcnJvcjoKCQlwcmludCAoIlxyICAgICVzXDAzM1swbSBjb29raWUgaW52YWxpZCIlKE0pKQoJdz1zZXNzaW9uLmdldCgiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL3NldHRpbmdzL2FwcHMvdGFiYmVkLz90YWI9aW5hY3RpdmUiLGNvb2tpZXM9eyJjb29raWUiOiJub3NjcmlwdD0xOyIra3VraX0pLnRleHQKCXNvcCA9IGJzNC5CZWF1dGlmdWxTb3VwKHcsImh0bWwucGFyc2VyIikKCXggPSBzb3AuZmluZCgiZm9ybSIsbWV0aG9kPSJwb3N0IikKCWdhbWUgPSBbaS50ZXh0IGZvciBpIGluIHguZmluZF9hbGwoImgzIildCgl0cnk6CgkJZm9yIGkgaW4gcmFuZ2UobGVuKGdhbWUpKToKCQkJcHJpbnQgKCJcciVzICBcMDMzWzBtICAgICAgICAgICAgICDDosW+4oC6ICVzIiUoUCxnYW1lW2ldLnJlcGxhY2UoIktlZGFsdXdhcnNhIiwiIEtlZGFsdXdhcnNhIikpKQoJZXhjZXB0IEF0dHJpYnV0ZUVycm9yOgoJCXByaW50ICgiXHIgICAgJXMgXDAzM1swbWNvb2tpZSBpbnZhbGlkIiUoTSkpCgpkZWYgY2VrZXIoaWRmLHB3KToKCXRyeToKCQltbCA9IHJhbmRvbS5jaG9pY2UoWydtYmFzaWMnLCdmcmVlJ10pCgkJaDIgPSB7J2hvc3QnOid7bWx9LmZhY2Vib29rLmNvbScsJ2FjY2VwdCc6J3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOScsJ2FjY2VwdC1lbmNvZGluZyc6J2d6aXAsIGRlZmxhdGUnLCdhY2NlcHQtbGFuZ3VhZ2UnOidpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNycsJ2NhY2hlLWNvbnRyb2wnOidtYXgtYWdlPTAnLCdvcmlnaW4nOidodHRwczovL3d3dy5mYWNlYm9vay5jb20nLCdyZWZlcmVyJzonaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tJywnc2VjLWNoLXVhJzonIiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjEwMSInLCd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzonMScsJ3VzZXItYWdlbnQnOiB1YX0KCQlyZXMgPSBzZXMuZ2V0KGYnaHR0cHM6Ly97bWx9LmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvcGFzc3dvcmQvP3VpZD17aWRmfSZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJyxoZWFkZXJzPWgyKS50ZXh0CgkJcmVzcyA9IHBhcnNlcihyZXMsICdodG1sLnBhcnNlcicpCgkJZm9ybSA9IHJlc3MuZmluZCgnZm9ybScseydtZXRob2QnOidwb3N0J30pCgkJZGF0YTIgPSB7eC5nZXQoJ25hbWUnKTp4LmdldCgndmFsdWUnKSBmb3IgeCBpbiBmb3JtLmZpbmRfYWxsKCdpbnB1dCcseyd0eXBlJzpbJ3N1Ym1pdCcsJ2hpZGRlbiddfSl9CgkJZGF0YTIudXBkYXRlKHsKCQkJCQknZW1haWwnOmlkZiwKCQkJCQkncGFzcyc6cHd9KQoJCXJlcyA9IHNlcy5wb3N0KCdodHRwczovL3ttbH0uZmFjZWJvb2suY29tJytmb3JtLmdldCgnYWN0aW9uJyksZGF0YT1kYXRhMixoZWFkZXJzPWgyKS50ZXh0CgkJcmVzcyA9IHBhcnNlcihyZXMsICdodG1sLnBhcnNlcicpCgkJaWYgJ0xpaGF0IGRldGFpbCBsb2dpbiB5YW5nIGRpdGFtcGlsa2FuLiBJbmkgQW5kYT8nIGluIHN0cihyZXNzLmZpbmQoJ3RpdGxlJykudGV4dCk6CgkJCWFrdW4gKz0gZicgW+KAol0gQWt1biBUYXAgWWVzcyBDZWsgRGkgTWJhc2ljICAgICAgICAgICAgICAgICAgICcKCQllbHNlOgoJCQlpZihsZW4oc2VzaShyZXMpKT09MCk6CgkJCQlpZiAnTWFzdWtrYW4gS29kZSBNYXN1ayB1bnR1ayBNZWxhbmp1dGthbicgaW4gc3RyKHJlc3MuZmluZCgndGl0bGUnKS50ZXh0KToKCQkJCQlha3VuICs9IGYnIFvigKJdIEFrdW4gVGVycGFzYW5nIEEyRiAgICAgICAgICAgICAgICAgICAgJwoJCQkJZWxzZToKCQkJCQlha3VuICs9IGYnIFvigKJdIEFrdW4gVGlkYWsgQ2hlY2twb2ludCBDZWsgRGkgTWJhc2ljICAgICAgICAgICAgICAgICAgJwoJCQllbHNlOgoJCQkJYWt1biArPSBmJyBb4oCiXSBUZXJkYXBhdCB7bGVuKG9wc2kpfSBPcHNpIENoZWNrcG9pbnQgOiAgICAgICAgICAgICAgICAgICAgICcKCQkJCW8gPSAwCgkJCQlmb3IgY3AgaW4gb3BzaToKCQkJCQlvKz0xCgkJCQkJYWt1biArPSBmJyBb4oCiXSB7Y3B9ICAgICAgICAgICAgICAgJwoJCW9wc2kuY2xlYXIoKQoJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCWFrdW4gKz0gZicgW+KAol0gS2F0YSBTYW5kaSBTYWxhaCBLZW11bmdraW5hbiBBbmRhIFRlcmtlbmEgU3BhbSBJcCAgICAgICAgICAgICAgICAgICcKCXByaW50KGFrdW4pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgkJCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgREVGIENFSyBPUFNJIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKaW1wb3J0IHJlcXVlc3RzLCBzaHV0aWwsIG9zLCByZSwgYnM0LCBzeXMsIGpzb24sIHRpbWUsIHBsYXRmb3JtICxyYW5kb20sIGRhdGV0aW1lLCBzdWJwcm9jZXNzLCBsb2dnaW5nLCBiYXNlNjQKaW1wb3J0IGhtYWMsIGhhc2hsaWIsIHVybGxpYiwgc3RkaW9tYXNrLCB1cmxsaWIucmVxdWVzdCwgdXVpZApmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHBhcnNlcgpmcm9tIHRocmVhZGluZyBpbXBvcnQgKFRocmVhZCwgRXZlbnQpCmZyb20gdGltZSBpbXBvcnQgc2xlZXAgYXMgamVkYQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQoKY3QgPSBkYXRldGltZS5ub3coKQpuID0gY3QubW9udGgKYnVsYW5fID0gWydKYW51YXJpJywgJ0ZlYnJ1YXJpJywgJ01hcmV0JywgJ0FwcmlsJywgJ01laScsICdKdW5pJywgJ0p1bGknLCAnQWd1c3R1cycsICdTZXB0ZW1iZXInLCAnT2t0b2JlcicsICdOb3ZlbWJlcicsICdEZXNlbWJlciddCnRyeToKCWlmIG4gPCAwIG9yIG4gPiAxMjoKCQlleGl0KCkKCW5UZW1wID0gbiAtIDEKZXhjZXB0IFZhbHVlRXJyb3I6CglleGl0KCkKCmN1cnJlbnQgPSBkYXRldGltZS5ub3coKQpoYXJpID0gY3VycmVudC5kYXkKYnVsYW4gPSBidWxhbl9bblRlbXBdCnRhaHVuID0gY3VycmVudC55ZWFyCmJ1bGxhbiA9IGN1cnJlbnQubW9udGgKCgpNID0gJ1x4MWJbMTs5MW0nICMgTUVSQUgKSCA9ICdceDFiWzE7OTJtJyAjIEhJSkFVCksgPSAnXHgxYlsxOzkzbScgIyBLVU5JTkcKQiA9ICdceDFiWzE7OTRtJyAjIEJJUlUKVSA9ICdceDFiWzE7OTVtJyAjIFVOR1UKTyA9ICdceDFiWzE7OTZtJyAjIEJJUlUgTVVEQQpQID0gJ1x4MWJbMTs5N20nICMgUFVUSUgKSiA9ICdcMDMzWzM4OzI7MjU1OzEyNzswOzFtJyAjIE9SQU5HRQpOID0gJ1x4MWJbMG0nICMgV0FSTkEgTUFUSQphY2FrID0gW1BdCndhcm5hID0gcmFuZG9tLmNob2ljZShhY2FrKQp0aWwgPSJcMDMzWzBtIFvigKJdICIKCmRlZiBqYWxhbihrZWxpbGluZyk6Cglmb3IgbWF1IGluIGtlbGlsaW5nICsgJ1xuJzoKCQlzeXMuc3Rkb3V0LndyaXRlKG1hdSkKCQlzeXMuc3Rkb3V0LmZsdXNoKCk7amVkYSgwLjAzKQoJCQoJCQp1YmFoX3Bhc3MgPSBbXQpwd2JhcnUgPSBbXQpwd0JhcnUgPSBbXQp1YmFoUCA9IFtdCgpkZWYgZmlsZV9jcCgpOgoJZGlycyA9IG9zLmxpc3RkaXIoJ0NQJykKCXByaW50ICgiJXMlcyVzJXNcMDMzWzBtXDAzM1swbVBpbGloIEhhc2lsIENyYWNrIFlnIFRlcnNpbXBhbiBVbnR1ayBDZWsgT3BzaSAlc1xuIiUoUCx0aWwsUCxQLFApKQoJZm9yIGZpbGUgaW4gZGlyczoKCQlwcmludCgiJXMlc1wwMzNbMG0lcyIlKFUsdGlsLGZpbGUpKTtqZWRhKDAuMDcpCgl0cnk6CgkJcHJpbnQoIlxuJXMlcyVzXDAzM1swbU1hc3VrYW4gZmlsZSBbIENvbnRvaCAlczogJXNDUC0lcy50eHQlcyBdIiUoUCx0aWwsUCxQLFAsZGF5LFApKQoJCW9wc2koKQoJZXhjZXB0IElPRXJyb3I6CgkJcHJpbnQgKCclcyVzXDAzM1swbUZpbGUgVGlkYWsgQWRhJyUoUCx0aWwpKQoJCWV4aXQoKQoKZGVmIG9wc2koKToKCUNQID0gKCJDUC8iKQoJcm9taSA9IGlucHV0KCIlcyVzJXNcMDMzWzBtTmFtYSBmaWxlICVzPiAlcyIlKFAsdGlsLFAsUCxQKSkKCWlmIHJvbWkgPT0gIiI6CgkJcHJpbnQoIiBb4oCiXSBJc2kgWWFuZyBCZW5hciAiJShQLHRpbCkpCgkJZXhpdCgpCgl0cnk6CgkJZmlsZV9jcCA9IG9wZW4oQ1Arcm9taSwgInIiKS5yZWFkbGluZXMoKQoJZXhjZXB0IElPRXJyb3I6CgkJZXhpdCgiXG4lcyVzXDAzM1swbU5hbWEgRmlsZSAlc1wwMzNbMG0gVGlkYWsgVGVyc2VkaWEiJShQLHRpbCxyb21pKSkKCWphbGFuKCIlcyVzJXNcMDMzWzBtTW9kZSBQZXNhd2F0a2FuIFRlcmxlYmloIERhaHVsdSA1IERldGlrICIlKFAsdGlsLFApKQoJcHc9aW5wdXQoIlxuJXMlcyVzXDAzM1swbVViYWggU2FuZGkgUGFkYSBBa3VuIE9uZSBUYWI/IHkvdCAlcz4gJXMiJShQLHRpbCxQLFAsUCkpCglpZiBwdyBpblsneScsJ1knXToKCQl1YmFoX3Bhc3MuYXBwZW5kKCJ1YmFoX3NhbmRpIikKCQlwdzIgPSBpbnB1dCgiJXMlcyVzXDAzM1swbU1hc3VrYW4gU2FuZGkgJXM+ICVzIiUoUCx0aWwsUCxQLFApKQoJCWlmIGxlbihwdzIpIDw9IDU6CgkJCXByaW50KCIlcyVzIFNhbmRpIE1pbmltYWwgNiBLYXJha3RlciAiJShQLHRpbCkpCgkJZWxzZToKCQkJcHdiYXJ1LmFwcGVuZChwdzIpCglwcmludCAoIiVzJXMlc1wwMzNbMG1Ub3RhbCBBa3VuICVzOiAlcyVzICIlKFAsdGlsLFAsUCxQLHN0cihsZW4oZmlsZV9jcCkpKSkKCW5vbW9yID0gMAoJZm9yIGZiIGluIGZpbGVfY3A6CgkJYWt1biA9IGZiLnJlcGxhY2UoIlxuIiwiIikKCQluZ2VjZWsgID0gYWt1bi5zcGxpdCgifCIpCgkJbm9tb3IrPTEKCQlwcmludCgiXG4lcyVzLiVzXDAzM1swbUxvZ2luIEFrdW4gJXM+ICVzJXMiJShQLHN0cihub21vciksUCxQLFAsYWt1bi5yZXBsYWNlKCIgKi0tPiAiLCIiKSkpO2plZGEoMC4wNykKCQl0cnk6CgkJCW1lbmdlY2VrKG5nZWNla1swXS5yZXBsYWNlKCIiLCIiKSwgbmdlY2VrWzFdKQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJY29udGludWUKCXByaW50KCJcbiVzJXMlc1wwMzNbMG1TZWxlc2FpIE1lbmdlY2VrIEFrdW4iJShQLHRpbCxQKSk7amVkYSgwLjA3KQoJaW5wdXQoJyVzJXMlc1slcyBFbnRlciVzIF0nJShQLHRpbCxQLFAsUCkpCglleGl0KCkKCQpkYXRhID0ge30KZGF0YTIgPSB7fQoKZGVmIG1lbmdlY2VrKHVzZXIscHcpOgoJZ2xvYmFsIGxvb3AsdWJhaF9wYXNzLHB3YmFydQoJc2Vzc2lvbj1yZXF1ZXN0cy5TZXNzaW9uKCkKCXVybCA9ICJodHRwczovL20uZmFjZWJvb2suY29tIgoJdWEgPSAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyA1NDVCKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvOTYuMC40NjY0LjQ1IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgoJc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7Ikhvc3QiOiJtLmZhY2Vib29rLmNvbSIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJpZC1JRCxpZDtxPTAuOSIsInJlZmVyZXIiOiJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vIiwidXNlci1hZ2VudCI6InVhIn0pCglzb3VwPWJzNC5CZWF1dGlmdWxTb3VwKHNlc3Npb24uZ2V0KHVybCsiL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmcmVmaWQ9OCIpLnRleHQsImh0bWwucGFyc2VyIikKCWxpbms9c291cC5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKCWZvciB4IGluIHNvdXAoImlucHV0Iik6CgkJZGF0YS51cGRhdGUoe3guZ2V0KCJuYW1lIik6eC5nZXQoInZhbHVlIil9KQoJZGF0YS51cGRhdGUoeyJlbWFpbCI6dXNlciwicGFzcyI6cHd9KQoJdXJsUG9zdD1zZXNzaW9uLnBvc3QodXJsK2xpbmsuZ2V0KCJhY3Rpb24iKSxkYXRhPWRhdGEpCglyZXNwb25zZT1iczQuQmVhdXRpZnVsU291cCh1cmxQb3N0LnRleHQsICJodG1sLnBhcnNlciIpCglpZiAiY191c2VyIiBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKToKCQlpZiAiQWt1biBBbmRhIERpa3VuY2kiIGluIHVybFBvc3QudGV4dDoKCQkJcHJpbnQoIlxyJXMlc1wwMzNbMG0gQWt1biBUZXJrdW5jaSBTZXNpIE5ldyIlKFAsdGlsKSkKCQllbHNlOgoJCQlwcmludCgiXHIlcyVzXDAzM1swbSBBa3VuIFRpZGFrIENoZWNrcG9pbnQsIFNpbGFoa2FuIEFuZGEgTG9naW4gIiUodGlsLFApKQoJCQlvcGVuKCdPSy9PSy0lcy50eHQnJSh3YWt0dSksICdhJykud3JpdGUoIiAlc3wlc1xuIiAlICh1c2VyLHB3KSkKCWVsaWYgImNoZWNrcG9pbnQiIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpOgoJCWNva2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pCgkJdGl0bGU9cmUuZmluZGFsbCgiXDx0aXRsZT4oLio/KTxcL3RpdGxlPiIsc3RyKHJlc3BvbnNlKSkKCQlsaW5rMj1yZXNwb25zZS5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKCQlsaXN0SW5wdXQ9WydmYl9kdHNnJywnamF6b2VzdCcsJ2NoZWNrcG9pbnRfZGF0YScsJ3N1Ym1pdFtDb250aW51ZV0nLCduaCddCgkJZm9yIHggaW4gcmVzcG9uc2UoImlucHV0Iik6CgkJCWlmIHguZ2V0KCJuYW1lIikgaW4gbGlzdElucHV0OgoJCQkJZGF0YTIudXBkYXRlKHt4LmdldCgibmFtZSIpOnguZ2V0KCJ2YWx1ZSIpfSkKCQlhbj1zZXNzaW9uLnBvc3QodXJsK2xpbmsyLmdldCgiYWN0aW9uIiksZGF0YT1kYXRhMikKCQlyZXNwb25zZTI9YnM0LkJlYXV0aWZ1bFNvdXAoYW4udGV4dCwiaHRtbC5wYXJzZXIiKQoJCWNlaz1bY2VrLnRleHQgZm9yIGNlayBpbiByZXNwb25zZTIuZmluZF9hbGwoIm9wdGlvbiIpXQoJCW51bWJlcj0wCgkJcHJpbnQoIlxyJXMgW+KAol0gJXNcMDMzWzBtdGVyZGFwYXQgJXMlcyVzIFwwMzNbMG1vcHNpICVzOiIlKFAsUCxQLHN0cihsZW4oY2VrKSksUCxQKSk7amVkYSgwLjA3KQoJCWlmKGxlbihjZWspPT0wKToKCQkJaWYgIkxpaGF0IERldGFpbCBMb2dpbiBZYW5nIERpdGFtcGlsa2FuLiBJbmkgQW5kYT8iIGluIHRpdGxlOgoJCQkJaWYgInViYWhfc2FuZGkiIGluIHViYWhfcGFzczoKCQkJCQlkYXQsZGF0Mj17fSx7fQoJCQkJCWJ1dD1bInN1Ym1pdFtZZXNdIiwibmgiLCJmYl9kdHNnIiwiamF6b2VzdCIsImNoZWNrcG9pbnRfZGF0YSJdCgkJCQkJZm9yIHggaW4gcmVzcG9uc2UoImlucHV0Iik6CgkJCQkJCWlmIHguZ2V0KCJuYW1lIikgaW4gYnV0OgoJCQkJCQkJZGF0LnVwZGF0ZSh7eC5nZXQoIm5hbWUiKTp4LmdldCgidmFsdWUiKX0pCgkJCQkJdWJhaFB3PXNlc3Npb24ucG9zdCh1cmwrbGluazIuZ2V0KCJhY3Rpb24iKSxkYXRhPWRhdCkudGV4dAoJCQkJCXJlc1ViYWg9YnM0LkJlYXV0aWZ1bFNvdXAodWJhaFB3LCJodG1sLnBhcnNlciIpCgkJCQkJbGluazM9cmVzVWJhaC5maW5kKCJmb3JtIix7Im1ldGhvZCI6InBvc3QifSkKCQkJCQlidXQyPVsic3VibWl0W05leHRdIiwibmgiLCJmYl9kdHNnIiwiamF6b2VzdCJdCgkJCQkJaWYgIkJ1YXQgS2F0YSBTYW5kaSBCYXJ1IiBpbiByZS5maW5kYWxsKCJcPHRpdGxlPiguKj8pPFwvdGl0bGU+IixzdHIodWJhaFB3KSk6CgkJCQkJCWZvciBiIGluIHJlc1ViYWgoImlucHV0Iik6CgkJCQkJCQlkYXQyLnVwZGF0ZSh7Yi5nZXQoIm5hbWUiKTpiLmdldCgidmFsdWUiKX0pCgkJCQkJCWRhdDIudXBkYXRlKHsicGFzc3dvcmRfbmV3IjoiIi5qb2luKHB3YmFydSl9KQoJCQkJCQlhbj1zZXNzaW9uLnBvc3QodXJsK2xpbmszLmdldCgiYWN0aW9uIiksZGF0YT1kYXQyKQoJCQkJCQljb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQoJCQkJCQlwcmludCgiXHIlcyVzXDAzM1swbUFrdW4gT25lIFRhYiwgU2FuZGkgQmVyaGFzaWwgRGkgVWJhaCBcbiBb4oCiXSBPSyAlcyVzJXN8JXN8JXMJCQkiJShQLHRpbCxQLFAsdXNlcixwd2JhcnVbMF0sY29raSkpCgkJCQkJCW9wZW4oJ09LL09LLSVzLnR4dCcgJSh3YWt0dSksICdhJykud3JpdGUoIiVzJXN8JXN8JXNcbiIgJSAoUCx1c2VyLHB3YmFydVswXSxjb2tpKSkKCQkJCWVsc2U6CgkJCQkJcHJpbnQoIlxyJXMlcyBcMDMzWzBtQWt1biBPbmUgVGFiLCBTaWxhaGthbiBBbmRhIExvZ2luCQkiJShQLHRpbCkpCgkJCQkJb3BlbignT0svT0stJXMudHh0JyAlKHdha3R1KSwgJ2EnKS53cml0ZSgiJXMgJXN8JXN8JXNcbiIgJSAoUCx1c2VyLHB3LGNva2kpKQoJCQllbGlmICJNYXN1a2thbiBLb2RlIE1hc3VrIHVudHVrIE1lbGFuanV0a2FuIiBpbiByZS5maW5kYWxsKCJcPHRpdGxlPiguKj8pPFwvdGl0bGU+IixzdHIocmVzcG9uc2UpKToKCQkJCXByaW50KCJcciVzIFvigKJdIFwwMzNbMG1Ba3VuIFRlcnBhc2FuZyBBdXRlbnRpa2FzaSBEdWEgRmFrdG9yCQkJIiUoUCkpCgkJCWVsc2U6CgkJCQlwcmludCgiJXMlc1wwMzNbMG1UZXJqYWRpIEtlc2FsYWhhbiIlKFAsdGlsKSkKCQllbHNlOgoJCQlpZiAiY191c2VyIiBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKToKCQkJCXByaW50KCJcciVzJXMgQWt1biBUaWRhayBDaGVja3BvaW50LCBTaWxhaGthbiBBbmRhIExvZ2luICIlKFApKQoJCQkJb3BlbignT0svT0stJXMudHh0JyAlKHdha3R1KSwgJ2EnKS53cml0ZSgiJXMlc3wlc1xuIiAlIChQLHVzZXIscHcpKQoJCWZvciBvcHNpIGluIHJhbmdlKGxlbihjZWspKToKCQkJbnVtYmVyICs9MQoJCQlqYWxhbiAoIiAgJXMlcy4gJXMlcyIlKFAsc3RyKG51bWJlciksUCxjZWtbb3BzaV0pKQoJZWxpZiAibG9naW5fZXJyb3IiIGluIHN0cihyZXNwb25zZSk6CgkJb2ggPSBydW4uZmluZCgiZGl2Iix7ImlkIjoibG9naW5fZXJyb3IifSkuZmluZCgiZGl2IikudGV4dAoJCXByaW50KCIlcyBb4oCiXSAlcyIlKFAsb2gpKQoJZWxzZToKCQlwcmludCgiJXMgW+KAol0gXDAzM1swbUxvZ2luIEdhZ2FsLCBTaWxhaGthbiBDZWsgS2VtYmFsaSBJZCBEYW4gS2F0YSBTYW5kaSIlKFApKQoJCSAgCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgREVGRiBTQ1JBUFQgTUVUT0RFIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgYnMKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBpdGVydG9vbHMgaW1wb3J0IGNvdW50IApmcm9tIHJlcXVlc3RzIGltcG9ydCBnZXQgCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIApmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrCmZyb20gcmljaCBpbXBvcnQgcHJpbnQgYXMgcHJpbnRzCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwgYXMgbmVsCmRvbmUgPSBGYWxzZSAKcmVzdWx0cyA9IFtdIAoKZGVmIGNsZWFyKCk6CiAgICBpZiAibGludXgiIGluIHN5cy5wbGF0Zm9ybS5sb3dlcigpOm9zLnN5c3RlbSgiY2xlYXIiKQogICAgZWxpZiAid2luIiBpbiBzeXMucGxhdGZvcm0ubG93ZXIoKTpvcy5zeXN0ZW0oImNscyIpCgpkZWYgc3RhcnQoKToKICAgIGdsb2JhbCBNdWxhaV9KYWxhbgogICAgTXVsYWlfSmFsYW4gPSBkYXRldGltZS5ub3coKQpkZWYgYWtoaXIoKToKICAgIGdsb2JhbCBBa2hpcl9KYWxhbiwgVG90YWxfV2FrdHUKICAgIEFraGlyX0phbGFuID0gZGF0ZXRpbWUubm93KCkKICAgIFRvdGFsX1dha3R1ID0gQWtoaXJfSmFsYW4gLSBNdWxhaV9KYWxhbgogICAgdHJ5OgogICAgICAgIE1lbml0ID0gc3RyKFRvdGFsX1dha3R1KS5zcGxpdCgnOicpWzFdCiAgICAgICAgRGV0aWsgPSBzdHIoVG90YWxfV2FrdHUpLnNwbGl0KCc6JylbMl0ucmVwbGFjZSgnLicsJywnKS5zcGxpdCgnLCcpWzBdICsgJywnICsgc3RyKFRvdGFsX1dha3R1KS5zcGxpdCgnOicpWzJdLnJlcGxhY2UoJy4nLCcsJykuc3BsaXQoJywnKVsxXVs6MV0KICAgICAgICBwcmludCgnXG4gW+KAol0gUHJvZ3JhbSBTZWxlc2FpIERhbGFtIFdha3R1ICVzIE1lbml0ICVzIERldGlrXG4nJShNZW5pdCxEZXRpaykpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoJ1xuXG4gW+KAol0gUHJvZ3JhbSBTZWxlc2FpIERhbGFtIFdha3R1IDAgRGV0aWtcbicpCgpjbGFzcyBnZXRfZGF0YV93ZWI6CiAgICAKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzZWxmLnh5eiA9IHJlcXVlc3RzLlNlc3Npb24oKQogICAgICAgIHVybCA9IGlucHV0KCcgW+KAol0gTWFzdWtrYW4gVVJMIDogJykKICAgICAgICBwcmludCgnXG4gWzFdIFNvdXJjZSBQYXlsb2FkJykKICAgICAgICBwcmludCgnIFsyXSBQYXJzZWQgUGF5bG9hZCcpCiAgICAgICAgcHJpbnQoJyBbM10gU291cmNlIENvZGUgUG9zdCBSZXF1ZXN0cycpCiAgICAgICAgc2VsZi50YW55YSA9IGlucHV0KCcgW+KAol0gUGlsaWggOiAnKQogICAgICAgIHNlbGYuZG9tYWluID0gdXJsLnNwbGl0KCcvJylbMl0KICAgICAgICBzZWxmLmdldF9mb3JtKHVybCkKICAgICAgIAogICAgZGVmIGdldF9mb3JtKHNlbGYsdXJsKToKICAgICAgICByZXEgPSBzZWxmLnh5ei5nZXQodXJsKQogICAgICAgIHJhcSA9IGJzKHJlcS5jb250ZW50LCdodG1sLnBhcnNlcicpCiAgICAgICAgZm9yIHggaW4gcmFxLmZpbmRfYWxsKCdmb3JtJyk6CiAgICAgICAgICAgIGlmIHNlbGYudGFueWEgaW4gWycxJywnMDEnLCdhJ106IHNlbGYucHJpbnRpbmcxKHJlcSx4KQogICAgICAgICAgICBlbGlmIHNlbGYudGFueWEgaW4gWycyJywnMDInLCdiJ106IHNlbGYucHJpbnRpbmcyKHJlcSx4KQogICAgICAgICAgICBlbGlmIHNlbGYudGFueWEgaW4gWyczJywnMDMnLCdjJ106IHNlbGYucHJpbnRpbmczKHVybCxyZXEseCkKICAgICAgICAgICAgZWxzZTogZXhpdCgnXG4gW+KAol0gSXNpIHlhbmcgQmVuZXIgYXR1aCBrYWsnKQoKICAgIGRlZiBnZXRfaGVhZDEoc2VsZixyZXEpOgogICAgICAgIGRhdGEgPSB7fQogICAgICAgIGhlYWQgPSByZXEuaGVhZGVycwogICAgICAgIHVzbHMgPSBbJ2Nvb2tpZScsJ3NldC1jb29raWUnLCdyZXBvcnQtdG8nLCdleHBpcmVzJywneC1mYi1kZWJ1ZycsJ2RhdGUnLCdsYXN0LW1vZGlmaWVkJywnZXRhZyddCiAgICAgICAgZm9yIHgseSBpbiB6aXAoaGVhZC5rZXlzKCksaGVhZC52YWx1ZXMoKSk6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlmIHgubG93ZXIoKSBpbiB1c2xzOiBjb250aW51ZQogICAgICAgICAgICAgICAgZWxzZTogZGF0YS51cGRhdGUoe3g6eX0pCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZTpjb250aW51ZQogICAgICAgIHJldHVybihkYXRhKQoKICAgIGRlZiBnZXRfZGF0YTEoc2VsZixmb3JtKToKICAgICAgICBkYXRhID0ge30KICAgICAgICBmb3IgeSBpbiBmb3JtLmZpbmRfYWxsKCdpbnB1dCcpOgogICAgICAgICAgICB0cnk6ZGF0YS51cGRhdGUoe3lbJ25hbWUnXTp5Wyd2YWx1ZSddfSkKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOmNvbnRpbnVlCiAgICAgICAgcmV0dXJuKGRhdGEpCgogICAgZGVmIGdldF9kYXRhMihzZWxmLGZvcm0pOgogICAgICAgIGRhdGEgPSBbXQogICAgICAgIGZvciB5IGluIGZvcm0uZmluZF9hbGwoJ2lucHV0Jyk6CiAgICAgICAgICAgIHRyeTpkYXRhLmFwcGVuZCh5KQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6Y29udGludWUKICAgICAgICByZXR1cm4oZGF0YSkKCiAgICBkZWYgZ2V0X3Bvc3QxKHNlbGYsZm9ybSk6CiAgICAgICAgeiA9IGZvcm1bJ2FjdGlvbiddCiAgICAgICAgaWYgJ2h0dHBzOi8vJytzZWxmLmRvbWFpbiBpbiB6OiByZXR1cm4oeikKICAgICAgICBlbGlmICdodHRwOi8vJytzZWxmLmRvbWFpbiBpbiB6OiByZXR1cm4oeikKICAgICAgICBlbHNlOiByZXR1cm4oJ2h0dHBzOi8vJXMlcyclKHNlbGYuZG9tYWluLHopKQoKICAgIGRlZiBwcmludGluZzEoc2VsZixyZXEseCk6CiAgICAgICAgaGVhZCA9IHNlbGYuZ2V0X2hlYWQxKHJlcSkKICAgICAgICBkYXRhID0gc2VsZi5nZXRfZGF0YTEoeCkKICAgICAgICBwb3N0ID0gc2VsZi5nZXRfcG9zdDEoeCkKICAgICAgICBjb2tpID0gc2VsZi54eXouY29va2llcy5nZXRfZGljdCgpCiAgICAgICAgcHJpbnQoJ1xuXG5bU09VUkNFIFBBWUxPQURdXG4nKQogICAgICAgIHByaW50KCdbSG9zdF0gJXMnJShzZWxmLmRvbWFpbikpCiAgICAgICAgcHJpbnQoJ1tIZWFkXSAlcyclKGhlYWQpKQogICAgICAgIHByaW50KCdbRGF0YV0gJXMnJShkYXRhKSkKICAgICAgICBwcmludCgnW0Nva2ldICVzJyUoY29raSkpCiAgICAgICAgcHJpbnQoJ1tQb3N0XSAlcyclKHBvc3QpKQoKICAgIGRlZiBwcmludGluZzIoc2VsZixyZXEseCk6CiAgICAgICAgaGVhZCA9IHNlbGYuZ2V0X2hlYWQxKHJlcSkKICAgICAgICBkYXRhID0gc2VsZi5nZXRfZGF0YTIoeCkKICAgICAgICBwb3N0ID0gc2VsZi5nZXRfcG9zdDEoeCkKICAgICAgICBjb2tpID0gc2VsZi54eXouY29va2llcy5nZXRfZGljdCgpCiAgICAgICAgcHJpbnQoJ1xuXG5bUEFSU0VEIFBBWUxPQURdXG4nKQogICAgICAgIHByaW50KCdoZWFkID0geycpCiAgICAgICAgZm9yIHgseSBpbiB6aXAoaGVhZC5rZXlzKCksaGVhZC52YWx1ZXMoKSk6CiAgICAgICAgICAgIHByaW50KCcgICAgJXMlczogJXMnJSh4LCcgJyooMjktbGVuKHgpKSx5KSkKICAgICAgICBwcmludCgnICAgIH0nKQogICAgICAgIHByaW50KCdkYXRhID0geycpCiAgICAgICAgZm9yIHggaW4gZGF0YToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaWYgJ3ZhbHVlJyBpbiBzdHIoeCk6CiAgICAgICAgICAgICAgICAgICAgZHAgPSAnbmFtZT0nICsgcmUuc2VhcmNoKCduYW1lPSguKj8pLz4nLHN0cih4KSkuZ3JvdXAoMSkKICAgICAgICAgICAgICAgICAgICBmcCA9IHJlLnNlYXJjaCgndmFsdWU9IiguKj8pIicsc3RyKGRwKSkuZ3JvdXAoMSkKICAgICAgICAgICAgICAgICAgICBwcmludCgiICAgICVzJXM6ICclcycsIiUoeFsnbmFtZSddLCcgJyooMTktbGVuKHhbJ25hbWUnXSkpLGZwKSkKICAgICAgICAgICAgICAgIGVsaWYgJ25hbWUnIGluIHN0cih4KToKICAgICAgICAgICAgICAgICAgICBwcmludCgiICAgICVzJXM6ICcnLCIlKHhbJ25hbWUnXSwnICcqKDE5LWxlbih4WyduYW1lJ10pKSkpCiAgICAgICAgICAgICAgICBlbHNlOiBjb250aW51ZQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6IGNvbnRpbnVlCiAgICAgICAgcHJpbnQoJyAgICB9JykKICAgICAgICBwcmludCgnY29va2llID0geycpCiAgICAgICAgZm9yIHgseSBpbiB6aXAoY29raS5rZXlzKCksY29raS52YWx1ZXMoKSk6CiAgICAgICAgICAgIHByaW50KCcgICAgJXMlczogJXMnJSh4LCcgJyooNS1sZW4oeCkpLHkpKQogICAgICAgIHByaW50KCcgICAgfScpCiAgICAgICAgcHJpbnQoIm5leHQgPSAnJXMnIiUocG9zdCkpCiAgICAgICAgcHJpbnQoInBvc3QgPSByZXF1ZXN0cy5TZXNzaW9uKCkucG9zdChuZXh0LGhlYWRlcnM9aGVhZCxkYXRhPWRhdGEsY29va2llcz1jb29raWUpIikKICAgIGRlZiBwcmludGluZzMoc2VsZix1cmwscmVxLHgpOgogICAgICAgIGhlYWQgPSBzZWxmLmdldF9oZWFkMShyZXEpCiAgICAgICAgZGF0YSA9IHNlbGYuZ2V0X2RhdGEyKHgpCiAgICAgICAgcG9zdCA9IHNlbGYuZ2V0X3Bvc3QxKHgpCiAgICAgICAgcHJpbnQoJ1xuXG5bU09VUkNFIENPREUgUE9TVCBSRVFVRVNUU11cbicpCiAgICAgICAgcHJpbnQoInVybCAgPSAnJXMnIiUodXJsKSkKICAgICAgICBwcmludCgicmVxdSA9IGJzKHJlcXVlc3RzLlNlc3Npb24oKS5nZXQodXJsKS5jb250ZW50LCdodG1sLnBhcnNlcicpIikKICAgICAgICBwcmludCgnaGVhZCA9IHsnKQogICAgICAgIGZvciB4LHkgaW4gemlwKGhlYWQua2V5cygpLGhlYWQudmFsdWVzKCkpOgogICAgICAgICAgICBwcmludCgnICAgICVzJXM6ICVzJyUoeCwnICcqKDI5LWxlbih4KSkseSkpCiAgICAgICAgcHJpbnQoJyAgICB9JykKICAgICAgICBwcmludCgnZGF0YSA9IHsnKQogICAgICAgIGZvciB4IGluIGRhdGE6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlmICd2YWx1ZScgaW4gc3RyKHgpOgogICAgICAgICAgICAgICAgICAgIGRwID0gJ25hbWU9JyArIHJlLnNlYXJjaCgnbmFtZT0oLio/KS8+JyxzdHIoeCkpLmdyb3VwKDEpCiAgICAgICAgICAgICAgICAgICAgZnAgPSByZS5zZWFyY2goJ3ZhbHVlPSIoLio/KSInLHN0cihkcCkpLmdyb3VwKDEpCiAgICAgICAgICAgICAgICAgICAgZ3AgPSBkcC5yZXBsYWNlKGZwLCcoLio/KScpCiAgICAgICAgICAgICAgICAgICAgcnMgPSAoInJlLnNlYXJjaCgnJXMnLHN0cihyZXF1KSkuZ3JvdXAoMSkiJShncCkpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoJyAgICAlcyVzOiAlcywnJSh4WyduYW1lJ10sJyAnKigxOS1sZW4oeFsnbmFtZSddKSkscnMpKQogICAgICAgICAgICAgICAgZWxpZiAnbmFtZScgaW4gc3RyKHgpOgogICAgICAgICAgICAgICAgICAgIHByaW50KCIgICAgJXMlczogJycsIiUoeFsnbmFtZSddLCcgJyooMTktbGVuKHhbJ25hbWUnXSkpKSkKICAgICAgICAgICAgICAgIGVsc2U6IGNvbnRpbnVlCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZTogY29udGludWUKICAgICAgICBwcmludCgnICAgIH0nKQogICAgICAgIHByaW50KCJjb29raWUgPSByZXF1ZXN0cy5TZXNzaW9uKCkuY29va2llcy5nZXRfZGljdCgpIikKICAgICAgICBwcmludCgibmV4dCA9ICclcyciJShwb3N0KSkKICAgICAgICBwcmludCgicG9zdCA9IHJlcXVlc3RzLlNlc3Npb24oKS5wb3N0KG5leHQsaGVhZGVycz1oZWFkLGRhdGE9ZGF0YSxjb29raWVzPWNvb2tpZSkiKQoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgREVGRiBTUEFNIFNNUyBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKCmFnZW50ID0gcmFuZG9tLmNob2ljZSgKCQlbCgkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNi4wLjE7IFNNLUo1MDBNIEJ1aWxkL01NQjI5TSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny4xMDAgTW9iaWxlIFNhZmFyaS81MzcuMzYiLAoJCQkiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMDsgU00tRzkwMEYgQnVpbGQvTFJYMjFUKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci8yLjEgQ2hyb21lLzM0LjAuMTg0Ny43NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsCgkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjI7IFJlZG1pIDRYIEJ1aWxkL04yRzQ3SCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYzLjAuMzIzOS4xMTEgTW9iaWxlIFNhZmFyaS81MzcuMzYiLAoJCQkiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMDsgUmVkbWkgTm90ZSA0IEJ1aWxkL05SRDkwTSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYzLjAuMzIzOS4xMTEgTW9iaWxlIFNhZmFyaS81MzcuMzYiCgkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUEzMDVGKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTAxLjAuNDk1MS40MSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKCV0KKQoKZGVmIHByb2Nlc3NfZGF0YTEoKToKCXNsZWVwKDAuMTApCgkKZGVmIHNwYW1fc21zKCk6CglnbG9iYWwgbm9tb3IgCgljZXRhayhwYW5lbChmJycnICAgTWFzdWthbiBOb21vciBUYXJnZXQgWWFuZyBJbmdpbiBEaSBTcGFtIENvbnRvaCA6ICs2MjgxMjM0NTY3eHh4JycnLHdpZHRoPTkwLHBhZGRpbmc9KDAsOCksc3R5bGU9ZiJib2xkIHdoaXRlIikpCglub21vciA9IGlucHV0KGYiIFvigKJdIElucHV0IE5vIEhwIDogKzYyIikucmVwbGFjZSgiKzYyIiwiIikKCWlmIG5vbW9yID09ICIiOgoJCXBhc3MKCWVsc2U6CgkJd2hpbGUgVHJ1ZToKCQkJZm9yIF8gaW4gdHJhY2socmFuZ2UoMTAwKSwgZGVzY3JpcHRpb249ZicgW+KAol0gU2VkYW5nIFNwYW0uLi4nKTpwcm9jZXNzX2RhdGExKCkKCQkJc3hwX3NtcygpCgpjbGFzcyBzeHBfc21zOgoKCWRlZiBfX2luaXRfXyhzZWxmKToKCQlzZWxmLnJlcSA9IHJlcXVlc3RzLlNlc3Npb24oKQoJCXNlbGYubWFpbigpCgoJZGVmIHNtc19vdHBfMShzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vc2VydmljZS5tb2thcG9zLmNvbS9hY2NvdW50L3YxL3ZlcmlmaWNhdGlvbi9waG9uZS9zZW5kIiwKCQkJaGVhZGVycyA9IHsKCQkJCSAgImFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLAoJCQkJICAiYXV0aG9yaXphdGlvbiI6ICJ1bmRlZmluZWQiLAoJCQkJICAic2F2ZS1kYXRhIjogIm9uIiwKCQkJCSAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJCSAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgiCgkJCQl9LAoJCQlqc29uID0gewoJCQkJICJwaG9uZV9udW1iZXIiOiBmIis2Mntub30iCgkJCSAgfQoJCSkudGV4dAoKCWRlZiBzbXNfb3RwXzIoc2VsZiwgbm8pOgoJCWRhdGEgPSBqc29uLmR1bXBzKHsKCQkJCQkibW9iaWxlIjogZiIwe25vfSIsCgkJCQkJIm5vaXNlIjogIjE1ODM1OTA2NDE1NzMxNTU1NzQiLAoJCQkJCSJyZXF1ZXN0X3RpbWUiOiAiMTU4MzU5MDY0MTU3MzEyIiwKCQkJCQkiYWNjZXNzX3Rva2VuIjogIjExMTExIgoJCQkJICAgfSkKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly9hcGlzZXJ2aWNlLnJ1cGlhaGNlcGF0d2ViLmNvbS93ZWJhcGkvdjEvcmVxdWVzdF9sb2dpbl9yZWdpc3Rlcl9hdXRoX2NvZGUiLAoJCQloZWFkZXJzID0gewoJCQkJICAgICJhY2NlcHQiOiAidGV4dC9odG1sLCBhcHBsaWNhdGlvbi94aHRtbCt4bWwsIGFwcGxpY2F0aW9uL2pzb24sICovKiIsCgkJCQkgICAgImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIsCgkJCQkgICAgImNvbnRlbnQtbGVuZ3RoIjogIjE2NiIsCgkJCQkgICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLAoJCQkJICAgICJvcmlnaW4iOiAiaHR0cHM6Ly9oNS5ydXBpYWhjZXBhdHdlYi5jb20iLAoJCQkJICAgICJyZWZlcmVyIjogImh0dHBzOi8vaDUucnVwaWFoY2VwYXR3ZWIuY29tL2R1YTIvcGFnZXMvb3BlblBhY2tldC9vcGVuUGFja2V0Lmh0bWw/YWN0aXZpdHlJZD0xMSZpbnZpdGU9MjAwMjE5MTkwMTAwMjE1NzIzIiwKCQkJCSAgICAic2VjLWZldGNoLWRlc3QiOiAiZW1wdHkiLAoJCQkJICAgICJzZWMtZmV0Y2gtbW9kZSI6ICJjb3JzIiwKCQkJCSAgICAic2VjLWZldGNoLXNpdGUiOiAic2FtZS1zaXRlIiwKCQkJCSAgICAidXNlci1hZ2VudCI6IGFnZW50CgkJCQkgIH0sCgkJCWRhdGEgPSB7CgkJCQkgImRhdGEiOiBkYXRhCgkJCSAgIH0KCQkpLnRleHQKCglkZWYgc21zX290cF8zKHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly93d3cub2x4LmNvLmlkL2FwaS9hdXRoL2F1dGhlbnRpY2F0ZSIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgImFjY2VwdCI6ICIqLyoiLAoJCQkJICAgICJ4LW5ld3JlbGljLWlkIjogIlZRTUdVMVpWRHhBQlUxbGJCZ01EVWxJPSIsCgkJCQkgICAgIngtcGFuYW1lcmEtZmluZ2VycHJpbnQiOiAiODNiMDllNDk2NTNjMzdmYjRkYzM4NDIzZDgyZDc0ZDcjMTU5NzI3MTE1ODA2MyIsCgkJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJCSAgICAiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL2pzb24iCgkJCQkgIH0sCgkJCWpzb24gPSB7CgkJCQkgImdyYW50VHlwZSI6ICJyZXRyeSIsCgkJCQkgIm1ldGhvZCI6ICJzbXMiLAoJCQkJICJwaG9uZSI6IG5vLAoJCQkJICJsYW5ndWFnZSI6ICJpZCIKCQkJCX0KCQkpLnRleHQKCglkZWYgc21zX290cF80KHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly93d3cuYWxvZG9rdGVyLmNvbS9sb2dpbi13aXRoLXBob25lLW51bWJlciIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJCSAgICAiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAoJCQkJICAgICJyZWZlcmVyIjogImh0dHBzOi8vd3d3LmFsb2Rva3Rlci5jb20vbG9naW4tYWxvZG9rdGVyIiwKCQkJCSAgICAiYWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iLAoJCQkJICAgICJvcmlnaW4iOiAiaHR0cHM6Ly93d3cuYWxvZG9rdGVyLmNvbSIKCQkJCSAgfSwKCQkJanNvbiA9IHsKCQkJCSAidXNlciI6ewoJCQkJCSAgInBob25lIjogZiIwe25vfSIKCQkJCQl9CgkJCQl9CgkJKS50ZXh0CgoJZGVmIHNtc19vdHBfNShzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vd3d3LmtlbGFzcGludGFyLmlkL3VzZXIvb3RwdmVyaWZpY2F0aW9uIiwKCQkJaGVhZGVycyA9IHsKCQkJCSAgICAieC1yZXF1ZXN0ZWQtd2l0aCI6ICJYTUxIdHRwUmVxdWVzdCIsCgkJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJCSAgICAiUmVmZXJlciI6ICJodHRwczovL3d3dy5rZWxhc3BpbnRhci5pZC8iCgkJCQkgIH0sCgkJCWRhdGEgPSB7CgkJCQkgInVzZXJfbW9iaWxlIjogbm8sCgkJCQkgIm90cF90eXBlIjogInNlbmRfb3RwX3JlZyIsCgkJCQkgIm1vYmlsZV9jb2RlIjogIiUyQjYyIgoJCQkJfQoJCSkudGV4dAoKCWRlZiBzbXNfb3RwXzYoc2VsZiwgbm8pOgoJCWFpbmtfc2FueiA9IHJhbmRvbS5jaG9pY2UoCgkJCQkJCVsKCQkJCQkJCSJIYWxsbyBNYW50YW4iLAoJCQkJCQkJIkhhbGxvIEJhbmdzYWQiLAoJCQkJCQkJIkhhbGxvIFNheWFuZyIsCgkJCQkJCQkiSGFsbG8gUmlwcGVyIiwKCQkJCQkJCSJIYWxsbyBOZ2FiIgoJCQkJCQldCgkJCQkJKQoJCWVtYWlsID0gcmFuZG9tLmNob2ljZSgKCQkJCQlbCgkJCQkJCSJuc25zbXNta3Nrc21zbUBnbWFpbC5jb20iLAoJCQkJCQkibGF2b24ubG9ja21hbkBnbWFpbC5jb20iLAoJCQkJCQkiZHVhbmVfbWNsYXVnaGxpbjM4QGdtYWlsLmNvbSIsCgkJCQkJCSJhbGZyZWRhLmxpbmRncmVuQGdtYWlsLmNvbSIsCgkJCQkJCSJsZW9uYXJkb19rdWhsbWFuQGdtYWlsLmNvbSIsCgkJCQkJCSJseXJpYzUxQGdtYWlsLmNvbSIsCgkJCQkJCSJkZXZvbnRlX2xpdHRlbEBnbWFpbC5jb20iLAoJCQkJCQkibmV3ZWxsLmt1aGljQGdtYWlsLmNvbSIKCQkJCQldCgkJCQkpCgkJcHcgPSByYW5kb20uY2hvaWNlKAoJCQkJCVsKCQkJCQkJIm1hbXNtbXMxMjMiLAoJCQkJCQkiV2FkZXBhazEwMzciLAoJCQkJCQkid2FpZnVndzEwMTEiCgkJCQkJXQoJCQkJKQoJCWJpcnRoX2RhdGUgPSByYW5kb20uY2hvaWNlKAoJCQkJCQlbCgkJCQkJCQkiMTMvMDkvMTk5OSIsCgkJCQkJCQkiMDQvMDIvMjAyMiIsCgkJCQkJCQkiMDUvMDIvMjAyMiIsCgkJCQkJCQkiMDUvMDIvMjAyMiIsCgkJCQkJCQkiMDYvMDIvMjAyMiIsCgkJCQkJCQkiMTAvMDIvMjAyMiIKCQkJCQkJXQoJKQoJCV9fcmVxX18gPSBzZWxmLnJlcS5wb3N0KCJodHRwczovL3d3dy5tYXRhaGFyaS5jb20vcmVzdC9WMS90aG9yQ3VzdG9tZXJzIiwKCQkJanNvbiA9IHsKCQkJCSJ0aG9yX2N1c3RvbWVyIjp7CgkJCQkJCSJuYW1lIjogYWlua19zYW56LAoJCQkJCQkiY2FyZF9udW1iZXIiOiBOb25lLAoJCQkJCQkiZW1haWxfYWRkcmVzcyI6IGVtYWlsLAoJCQkJCQkibW9iaWxlX2NvdW50cnlfY29kZSI6ICIrNjIiLAoJCQkJCQkiZ2VuZGVyX2lkIjogIjEiLAoJCQkJCQkibW9iaWxlX251bWJlciI6IGYiMHtub30iLAoJCQkJCQkibXJvIjogIiIsCgkJCQkJCSJwYXNzd29yZCI6IHB3LAoJCQkJCQkiYmlydGhfZGF0ZSI6IGJpcnRoX2RhdGUKCQkJCQkJfQoJCQkJfSwKCQkJaGVhZGVycyA9IHsKCQkJCQkiSG9zdCI6ICJ3d3cubWF0YWhhcmkuY29tIiwKCQkJCQkieC1uZXdyZWxpYy1pZCI6ICJWZzRHVkZWWER4QUdWVmxWQmdjR1ZsWT0iLAoJCQkJCSJvcmlnaW4iOiAiaHR0cHM6Ly93d3cubWF0YWhhcmkuY29tIiwKCQkJCQkidXNlci1hZ2VudCI6IGFnZW50LAoJCQkJCSJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCgkJCQkJImFjY2VwdCI6ICIqLyoiLAoJCQkJCSJ4LXJlcXVlc3RlZC13aXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwKCQkJCQkicmVmZXJlciI6ICJodHRwczovL3d3dy5tYXRhaGFyaS5jb20vY3VzdG9tZXIvYWNjb3VudC9jcmVhdGUvIiwKCQkJCQkiYWNjZXB0LWVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKCQkJCQkiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IgoJCQkJfQoKCQkpLnRleHQKCglkZWYgc21zX290cF83KHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly9hcGkuZHVuaWFnYW1lcy5jby5pZC9hcGkvdXNlci9hcGkvdjIvdXNlci9zZW5kLW90cCIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgIkhvc3QiOiAiYXBpLmR1bmlhZ2FtZXMuY28uaWQiLAoJCQkJICAgICJjb250ZW50LWxlbmd0aCI6ICIzMiIsCgkJCQkgICAgImFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLAoJCQkJICAgICJ4LWRldmljZSI6ICJjYzQ1ZWQ4My03M2JkLTRhOTgtODNlMy04NzRlOGJjMTFhN2YiLAoJCQkJICAgICJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQiLAoJCQkJICAgICJ1c2VyLWFnZW50IjogYWdlbnQsCgkJCQkgICAgImNpYW0tdHlwZSI6ICJGUiIsCgkJCQkgICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKCQkJCSAgICAib3JpZ2luIjogImh0dHBzOi8vZHVuaWFnYW1lcy5jby5pZCIsCgkJCQkgICAgInNlYy1mZXRjaC1zaXRlIjogInNhbWUtc2l0ZSIsCgkJCQkgICAgInNlYy1mZXRjaC1tb2RlIjogImNvcnMiLAoJCQkJICAgICJzZWMtZmV0Y2gtZGVzdCI6ICJlbXB0eSIsCgkJCQkgICAgInJlZmVyZXIiOiAiaHR0cHM6Ly9kdW5pYWdhbWVzLmNvLmlkLyIsCgkJCQkgICAgImFjY2VwdC1lbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIKCQkJCSAgfSwKCQkJanNvbiA9IHsKCQkJCSAicGhvbmVOdW1iZXIiOiBmIis2Mntub30iCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHNtc19vdHBfOChzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vaGFydmVzdGNha2VzLmNvbS9yZWdpc3RlciIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJCSAgICAiUmVmZXJlciI6ICJodHRwczovL2hhcnZlc3RjYWtlcy5jb20vcmVnaXN0ZXIiCgkJCQkgIH0sCgkJCWRhdGEgPSB7CgkJCQkgInBob25lIjogZiIwe25vfSIsCgkJCQkgInVybCI6ICIiCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHNtc19vdHBfOShzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vaWRlbnRpdHktZ2F0ZXdheS5veW9yb29tcy5jb20vaWRlbnRpdHkvYXBpL3YxL290cC9nZW5lcmF0ZV9ieV9waG9uZT9sb2NhbGU9aWQiLAoJCQloZWFkZXJzID0gewoJCQkJICAgICJIb3N0IjogImlkZW50aXR5LWdhdGV3YXkub3lvcm9vbXMuY29tIiwKCQkJCSAgICAiY29uc3VtZXJfaG9zdCI6ICJodHRwczovL3d3dy5veW9yb29tcy5jb20iLAoJCQkJICAgICJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQiLAoJCQkJICAgICJhY2Nlc3NfdG9rZW4iOiAiU0ZJNFRFUjFXVlJUYWtSVWVuWXRhbHBMYjB3NlZuaHJOR1ZMVVZsQlRFNVRjVUZWWkZwQlNuYz0iLAoJCQkJICAgICJ1c2VyLWFnZW50IjogYWdlbnQsCgkJCQkgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKCQkJCSAgICAiYWNjZXB0IjogIiovKiIsCgkJCQkgICAgIm9yaWdpbiI6ICJodHRwczovL3d3dy5veW9yb29tcy5jb20iLAoJCQkJICAgICJyZWZlcmVyIjogImh0dHBzOi8vd3d3Lm95b3Jvb21zLmNvbS9sb2dpbiIsCgkJCQkgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIKCQkJCSAgfSwKCQkJanNvbiA9IHsKCQkJCSAicGhvbmUiOiBmIjB7bm99IiwKCQkJCSAiY291bnRyeV9jb2RlIjogIis2MiIsCgkJCQkgImNvdW50cnlfaXNvX2NvZGUiOiAiSUQiLAoJCQkJICJub2QiOiAiNCIsCgkJCQkgInNlbmRfb3RwIjogInRydWUiLAoJCQkJICJkZXZpc2Vfcm9sZSI6ICJDb25zdW1lcl9HdWVzdCIKCQkJCX0KCQkpLnRleHQKCglkZWYgc21zX290cF8xMChzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vY3JwLWFwcC5zdGFtcHMuY28uaWQvYXBpL2F1dGgvdmFsaWRhdGUtbW9iaWxlLW51bWJlciIsCgkJCWpzb24gPSB7CgkJCQkibW9iaWxlX251bWJlciI6IGYiMHtub30iLAoJCQkJInRva2VuIjogInNJMDF0RjViT1NZSGFiUzdIYVhpQjFrM2owSnhGeGJjUTc5UmQxSEZCaktFS0pxWUF3U05NU2NzeDlBRVpxM08iCgkJCQl9LAoJCQloZWFkZXJzID0gewoJCQkJCSJIb3N0IjogImNycC1hcHAuc3RhbXBzLmNvLmlkIiwKCQkJCQkiY29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgiLAoJCQkJCSJjb250ZW50LWxlbmd0aCI6ICIxMDYiLAoJCQkJCSJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCIsCgkJCQkJIlVzZXItQWdlbnQiOiBhZ2VudAoJCQl9CgkJKS50ZXh0CgoJZGVmIHNtc19vdHBfMTEoc2VsZiwgbm8pOgoJCV9fcmVxX18gPSBzZWxmLnJlcS5wb3N0KCJodHRwczovL2FwcC1hcGkua3JlZGl0by5pZC9jbGllbnQvdjEvY29tbW9uL3ZlcmlmeS1jb2RlL3NlbmQiLAoJCQloZWFkZXJzID0gewoJCQkJICAgICJMUFItVElNRVNUQU1QIjogIjE2MDMyODEwMzU4MjEiLAoJCQkJICAgICJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQiLAoJCQkJICAgICJMUFItQlJBTkQiOiAiS3JlZGl0byIsCgkJCQkgICAgIkxQUi1QTEFURk9STSI6ICJhbmRyb2lkIiwKCQkJCSAgICAidXNlci1hZ2VudCI6IGFnZW50LAoJCQkJICAgICJBdXRob3JpemF0aW9uIjogImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVekkxTmlKOS5leUoxYVdRaU9pMHhOakF6TWpneE1ERTNNakF6TENKMWRIbHdaU0k2SW1GdWIyNGlMQ0psZUhBaU9qRTJNRE15T0RRMk1UZDkuX0hVblc3RlFtTWlEV3ZTZWpTME1CcU1xOTVsMnJrXzZQdXhEZVhZNU9rcyIsCgkJCQkgICAgIkxQUi1TSUdOQVRVUkUiOiAiZTE1ZGJlYTg2MDI0MDlkZjMyYTJlZDVhMTIzZGMyNDQiLAoJCQkJICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCIsCgkJCQkgICAgIkNvbnRlbnQtTGVuZ3RoIjogIjc5IgoJCQkJICAgfSwKCQkJZGF0YSA9ICd7ImV2ZW50IjoiZGVmYXVsdF92ZXJpZmljYXRpb24iLCJtb2JpbGVQaG9uZSI6IiVzIiwic2VuZGVyIjoiamF0aXNzbXMifScgJSBubwoJCSkudGV4dAoKCWRlZiBzbXNfb3RwXzEyKHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly93d3cuYXV0b2Z1bi5jby5pZDo0NDMvdjIvY2FwdGNoYS9zbXMiLAoJCQloZWFkZXJzID0gewoJCQkJCSJIb3N0IjogInd3dy5hdXRvZnVuLmNvLmlkIiwKCQkJCQkiQ29ubmVjdGlvbiI6ICJrZWVwLWFsaXZlIiwKCQkJCQkiQ29udGVudC1sZW5ndGgiOiAiODQiLAoJCQkJCSJhY2NlcHQiOiAiKi8qIiwKCQkJCQkidXNlci1hZ2VudCI6IGFnZW50LAoJCQkJCSJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLAoJCQkJCSJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04IiwKCQkJCQkiT3JpZ2luIjogImh0dHBzOi8vd3d3LmF1dG9mdW4uY28uaWQiLAoJCQkJCSJYLVJlcXVlc3RlZC1XaXRoIjogImFjci5icm93c2VyLmJhcmVib25lcyIsCgkJCQkJIlNlYy1GZXRjaC1TaXRlIjogInNhbWUtb3JpZ2luIiwKCQkJCQkiU2VjLUZldGNoLU1vZGUiOiAiY29ycyIsCgkJCQkJIlNlYy1GZXRjaC1EZXN0IjogImVtcHR5IiwKCQkJCQkiUmVmZXJlciI6ICJodHRwczovL3d3dy5hdXRvZnVuLmNvLmlkL21vYmlsL2RhdHN1biIsCgkJCQkJIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIgoJCQkJfSwKCQkJanNvbiA9IHsKCQkJCQkicGhvbmVOdW0iOiBmIjYye25vfSIsCgkJCQkJImxhbmd1YWdlQ29kZSI6ICJpZC1pZCIsCgkJCQkJImNvdW50cnlDb2RlIjogImlkIiwKCQkJCQkicGxhdGZvcm0iOiAyCgkJCX0KCQkpLnRleHQKCglkZWYgc21zX290cF8xMyhzZWxmLCBubyk6CgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vYXBpLm15ZmF2ZS5jb20vYXBpL2ZhdmUvdjMvYXV0aCIsCgkJCWpzb24gPSB7CgkJCQkJInBob25lIjoiKzYyIitubwoJCQkJfSwKCQkJaGVhZGVycyA9IHsKCQkJCQkiSG9zdCI6ICJhcGkubXlmYXZlLmNvbSIsCgkJCQkJIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCgkJCQkJIngtdXNlci1hZ2VudCI6ICJGYXZlLVBXQS92MS4wLjAiLAoJCQkJCSJPcmlnaW4iOiAiaHR0cHM6Ly9tLm15ZmF2ZS5jb20iLAoJCQkJCSJ1c2VyLWFnZW50IjogYWdlbnQsCgkJCQkJImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKCQkJCQkiQWNjZXB0IjogIiovKiIsCgkJCQkJIlJlZmVyZXIiOiAiaHR0cHM6Ly9tLm15ZmF2ZS5jb20vamFrYXJ0YS9hdXRoIiwKCQkJCQkiQWNjZXB0LUVuY29kaW5nIjogImd6aXAsIGRlZmxhdGUsIGJyIiwKCQkJCQkiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IgoJCQl9CgkJKS50ZXh0CgoJZGVmIHNtc19vdHBfMTQoc2VsZiwgbm8pOgoJCW5pY2tuYW1lID0gcmFuZG9tLmNob2ljZSgKCQkJCQkgIFsKCQkJCQkgICAgImZhaG1pIiwKCQkJCQkgICAgInh6YzBkZXIiLAoJCQkJCSAgICAiYmVkM2JhaCIsCgkJCQkJICAgICJ4bWFueiIKCQkJCQkgIF0KCQkJCQkpCgkJYW5na2EgPSByYW5kb20ucmFuZGludCgKCQkJCQkxMTEsCgkJCQkJOTk5CgkJCQkgICAgICApCgkJX19yZXFfXyA9IHNlbGYucmVxLnBvc3QoImh0dHBzOi8vd29uZy5raXRhYmlzYS5jb20vcmVnaXN0ZXIvZHJhZnQiLAoJCQloZWFkZXJzID0gewoJCQkJICAgICJIb3N0IjogIndvbmcua2l0YWJpc2EuY29tIiwKCQkJCSAgICAieC1rdGJzLXBsYXRmb3JtLW5hbWUiOiAicHdhIiwKCQkJCSAgICAib3JpZ2luIjogImh0dHBzOi8vYWNjb3VudC5raXRhYmlzYS5jb20iLAoJCQkJICAgICJ4LWt0YnMtdGltZSI6ICIxNjExMDIwMjQ4IiwKCQkJCSAgICAidXNlci1hZ2VudCI6IGFnZW50LAoJCQkJICAgICJ4LWt0YnMtYXBpLXZlcnNpb24iOiAiMS4wLjAiLAoJCQkJICAgICJhY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCgkJCQkgICAgIngta3Ricy1jbGllbnQtbmFtZSI6ICJrYW52YXMiLAoJCQkJICAgICJ4LWt0YnMtcmVxdWVzdC1pZCI6ICIxMDc3OTBjMy04NmUwLTQ4NzItOWRmYi1iOWM1ZGE5YmZhMTMiLAoJCQkJICAgICJ4LWt0YnMtY2xpZW50LXZlcnNpb24iOiAiMS4wLjAiLAoJCQkJICAgICJ4LWt0YnMtc2lnbmF0dXJlIjogImU2YjRkZDYyNzEyNWIzY2NkNTNkZTE5M2QxNjVjNDgxY2M3ZmRmZWYwYjFkY2Q3YTU4NzYzNmEwMDhmZGM4OWUiLAoJCQkJICAgICJ2ZXJzaW9uIjogIjMuNC4wIiwKCQkJCSAgICAicmVmZXJlciI6ICJodHRwczovL2FjY291bnQua2l0YWJpc2EuY29tL3JlZ2lzdGVyL290cD90eXBlPXNtcyIsCgkJCQkgICAgImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIKCQkJCSAgfSwKCQkJanNvbiA9IHsKCQkJCSAiZnVsbF9uYW1lIjogbmlja25hbWUrc3RyKGFuZ2thKSwKCQkJCSAidXNlcm5hbWUiOiBmIjYye25vfSIsCgkJCQkgIm90cF90eXBlIjogInNtcyIKCQkJCX0KCQkpLnRleHQKCglkZWYgbWFpbihzZWxmKToKCQlzZWxmLnNtc19vdHBfMShub21vcikKCQlzZWxmLnNtc19vdHBfMihub21vcikKCQlzZWxmLnNtc19vdHBfMyhub21vcikKCQlzZWxmLnNtc19vdHBfNChub21vcikKCQlzZWxmLnNtc19vdHBfNShub21vcikKCQlzZWxmLnNtc19vdHBfNihub21vcikKCQlzZWxmLnNtc19vdHBfNyhub21vcikKCQlzZWxmLnNtc19vdHBfOChub21vcikKCQlzZWxmLnNtc19vdHBfOShub21vcikKCQlzZWxmLnNtc19vdHBfMTAobm9tb3IpCgkJc2VsZi5zbXNfb3RwXzExKG5vbW9yKQoJCXNlbGYuc21zX290cF8xMihub21vcikKCQlzZWxmLnNtc19vdHBfMTMobm9tb3IpCgkJc2VsZi5zbXNfb3RwXzE0KG5vbW9yKQoJCWNldGFrKHBhbmVsKGYiU3Vrc2VzIFNwYW0gU01TIEtlIE5vIDogKzYye25vbW9yfSIsd2lkdGg9OTAscGFkZGluZz0oMCwyKSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCiMtLS0tLS0tLS0tLS0tLS0tLS1bIERFRkYgU1BBTSBXQSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMgCiAgICAKZGVmIHNwYW1fd2EoKToKCWdsb2JhbCBub21vcgoJY2V0YWsocGFuZWwoZicnJyAgIE1hc3VrYW4gTm9tb3IgVGFyZ2V0IFlhbmcgSW5naW4gRGkgU3BhbSBDb250b2ggOiArNjI4MTIzNDU2N3h4eCcnJyx3aWR0aD05MCxwYWRkaW5nPSgwLDgpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJbm9tb3IgPSBpbnB1dChmIiBb4oCiXSBJbnB1dCBObyBIcCA6ICs2MiIpLnJlcGxhY2UoIis2MiIsIiIpCglpZiBub21vciA9PSAiIjoKCQlwYXNzCgllbHNlOgoJCXdoaWxlIFRydWU6CgkJCWZvciBfIGluIHRyYWNrKHJhbmdlKDEwMCksIGRlc2NyaXB0aW9uPWYnIFvigKJdIFNlZGFuZyBTcGFtLi4uJyk6cHJvY2Vzc19kYXRhMSgpCgkJCXN4cF93YSgpCgkJCQpjbGFzcyBzeHBfd2E6CgoJZGVmIF9faW5pdF9fKHNlbGYpOgoJCXNlbGYucmVxID0gcmVxdWVzdHMuU2Vzc2lvbigpCgkJc2VsZi5tYWluKCkKCglkZWYgd2Ffb3RwXzEoc2VsZiwgbm8pOgoJCW5pY2tuYW1lID0gcmFuZG9tLmNob2ljZSgKCQkJCQkgIFsKCQkJCQkgICAgImZhaG1pIiwKCQkJCQkgICAgInh6YzBkZXIiLAoJCQkJCSAgICAiYmVkM2JhaCIsCgkJCQkJICAgICJ4bWFueiIKCQkJCQkgIF0KCQkJCQkgKQoJCWFuZ2thID0gcmFuZG9tLnJhbmRpbnQoCgkJCQkJMTExLAoJCQkJCTk5OQoJCQkJICAgICAgICkKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly93b25nLmtpdGFiaXNhLmNvbS9yZWdpc3Rlci9kcmFmdCIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgIkhvc3QiOiAid29uZy5raXRhYmlzYS5jb20iLAoJCQkJICAgICJ4LWt0YnMtcGxhdGZvcm0tbmFtZSI6ICJwd2EiLAoJCQkJICAgICJvcmlnaW4iOiAiaHR0cHM6Ly9hY2NvdW50LmtpdGFiaXNhLmNvbSIsCgkJCQkgICAgIngta3Ricy10aW1lIjogIjE2MTEwMjAyNDgiLAoJCQkJICAgICJ1c2VyLWFnZW50IjogYWdlbnQsCgkJCQkgICAgIngta3Ricy1hcGktdmVyc2lvbiI6ICIxLjAuMCIsCgkJCQkgICAgImFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIiwKCQkJCSAgICAieC1rdGJzLWNsaWVudC1uYW1lIjogImthbnZhcyIsCgkJCQkgICAgIngta3Ricy1yZXF1ZXN0LWlkIjogIjEwNzc5MGMzLTg2ZTAtNDg3Mi05ZGZiLWI5YzVkYTliZmExMyIsCgkJCQkgICAgIngta3Ricy1jbGllbnQtdmVyc2lvbiI6ICIxLjAuMCIsCgkJCQkgICAgIngta3Ricy1zaWduYXR1cmUiOiAiZTZiNGRkNjI3MTI1YjNjY2Q1M2RlMTkzZDE2NWM0ODFjYzdmZGZlZjBiMWRjZDdhNTg3NjM2YTAwOGZkYzg5ZSIsCgkJCQkgICAgInZlcnNpb24iOiAiMy40LjAiLAoJCQkJICAgICJyZWZlcmVyIjogImh0dHBzOi8vYWNjb3VudC5raXRhYmlzYS5jb20vcmVnaXN0ZXIvb3RwP3R5cGU9c21zIiwKCQkJCSAgICAiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IgoJCQkJICAgfSwKCQkJanNvbiA9IHsKCQkJCSAiZnVsbF9uYW1lIjogbmlja25hbWUrc3RyKGFuZ2thKSwKCQkJCSAidXNlcm5hbWUiOiBmIjB7bm99IiwKCQkJCSAib3RwX3R5cGUiOiAid2hhdHNhcHAiCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHdhX290cF8yKHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEuZ2V0KAoJCQlmImh0dHBzOi8vbS5yZWRidXMuaWQvYXBpL2dldE90cD9udW1iZXI9e25vfSZjYz02MiZ3aGF0c0FwcE9wdGVkPXRydWUiCgkJKS50ZXh0CgoJZGVmIHdhX290cF8zKHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly9hcGkuYnVrdXdhcnVuZy5jb20vYXBpL3YxL2F1dGgvb3RwL3NlbmQiLAoJCQloZWFkZXJzID0gewoJCQkJICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCgkJCQkgICAgIlgtQVBQLVZFUlNJT04tTkFNRSI6ICIzLjQuMCIsCgkJCQkgICAgIlgtQVBQLVZFUlNJT04tQ09ERSI6ICIzMzk5IiwKCQkJCSAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgiLAoJCQkJICAgICJIb3N0IjogImFwaS5idWt1d2FydW5nLmNvbSIsCgkJCQkgICAgIkNvbm5lY3Rpb24iOiAiS2VlcC1BbGl2ZSIsCgkJCQkgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwIiwKCQkJCSAgICAiVXNlci1BZ2VudCI6IGFnZW50CgkJCQkgICB9LAoJCQlqc29uID0gewoJCQkJICJhY3Rpb24iOiAiTE9HSU5fT1RQIiwKCQkJCSAiY291bnRyeUNvZGUiOiAiNjIiLAoJCQkJICJkZXZpY2VJZCI6ICIwMDAwMDE3Ny0xNDJkLWYxYTItYmFjNC01N2E5MDM5ZmRjNGQiLAoJCQkJICJtZXRob2QiOiAiV0EiLAoJCQkJICJwaG9uZSI6IG5vCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHdhX290cF80KHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly9ldmVybW9zLmNvbS9hcGkvY2xpZW50L3JlcXVlc3QtY29kZSIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudAoJCQkJICB9LAoJCQlkYXRhID0gewoJCQkJICJ0ZWxlcGhvbmUiOiBmIjYye25vfSIsCgkJCQkgInR5cGUiOiAwCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHdhX290cF81KHNlbGYsIG5vKToKCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgiaHR0cHM6Ly93YXBpLnJ1cGFydXBhLmNvbS9hdXRoL2dlbmVyYXRlLW90cCIsCgkJCWhlYWRlcnMgPSB7CgkJCQkgICAgIkhvc3QiOiAid2FwaS5ydXBhcnVwYS5jb20iLAoJCQkJICAgICJDb25uZWN0aW9uIjogImtlZXAtYWxpdmUiLAoJCQkJICAgICJBdXRob3JpemF0aW9uIjogImV5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUoxZFdsa0lqb2lPR1psWTJWalptWXRaVFExWmkwME1UVm1MV0kyTTJVdE1tSmlNelV5Wm1RMk56aGtJaXdpYVdGMElqb3hOVGt6TURJeU5Ea3lMQ0pwYzNNaU9pSjNZWEJwTG5KMWNHRnlkWEJoSW4wLmZFVEtYUTBLeVpka3NXV3Nqa1JwamlLTHJKdFpXbXRvZ0t5ZVB5Y29GMEUiLAoJCQkJICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIsCgkJCQkgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKCQkJCSAgICAiWC1Db21wYW55LU5hbWUiOiAib2RpIiwKCQkJCSAgICAidXNlci1hZ2VudCI6IGFnZW50LAoJCQkJICAgICJ1c2VyLXBsYXRmb3JtIjogIm1vYmlsZSIsCgkJCQkgICAgIlgtRnJvbnRlbmQtVHlwZSI6ICJtb2JpbGUiLAoJCQkJICAgICJPcmlnaW4iOiAiaHR0cHM6Ly9tLnJ1cGFydXBhLmNvbSIsCgkJCQkgICAgIlJlZmVyZXIiOiAiaHR0cHM6Ly9tLnJ1cGFydXBhLmNvbS92ZXJpZmljYXRpb24/cGFnZT1vdHAtY2hvaWNlcyIsCgkJCQkgICAgIkFjY2VwdC1FbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlLCBiciIsCgkJCQkgICAgIkFjY2VwdC1MYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIKCQkJCSAgIH0sCgkJCWpzb24gPSB7CgkJCQkgInBob25lIjogZiIwe25vfSIsCgkJCQkgImFjdGlvbiI6ICJyZWdpc3RlciIsCgkJCQkgImNoYW5uZWwiOiAiY2hhdCIsCgkJCQkgImVtYWlsIjogIiIsCgkJCQkgImN1c3RvbWVyX2lkIjogIjAiLAoJCQkJICJpc19yZXNlbmQiOiAwCgkJCQl9CgkJKS50ZXh0CgoJZGVmIHdhX290cF82KHNlbGYsIG5vKToKCQloZWFkZXJzID0gewoJCQkgICAgIkNvbm5lY3Rpb24iOiAia2VlcC1hbGl2ZSIsCgkJCSAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDEiLAoJCQkgICAgIk9yaWdpbiI6ICJodHRwczovL2FjY291bnRzLnRva29wZWRpYS5jb20iLAoJCQkgICAgIlgtUmVxdWVzdGVkLVdpdGgiOiAiWE1MSHR0cFJlcXVlc3QiLAoJCQkgICAgInVzZXItYWdlbnQiOiBhZ2VudCwKCQkJICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiwKCQkJICAgICJBY2NlcHQtRW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsCgkJCSAgIH0KCQlzaXRlID0gc2VsZi5yZXEuZ2V0KCJodHRwczovL2FjY291bnRzLnRva29wZWRpYS5jb20vb3RwL2MvcGFnZT9vdHBfdHlwZT0xMTYmbXNpc2RuPSIrIG5vICsiJmxkPWh0dHBzJTNBJTJGJTJGYWNjb3VudHMudG9rb3BlZGlhLmNvbSUyRnJlZ2lzdGVyJTNGdHlwZSUzRHBob25lJTI2cGhvbmUlM0R7fSUyNnN0YXR1cyUzRGV5SnJJanAwY25WbExDSnRJanAwY25WbExDSnpJanBtWVd4elpTd2lZbTkwSWpwbVlXeHpaU3dpWjJNaU9tWmhiSE5sZlElMjUzRCUyNTNEIiwgaGVhZGVycyA9IGhlYWRlcnMpLnRleHQKCQlzZWFyY2ggPSByZS5zZWFyY2gocidcPGlucHV0XCBpZFw9XCJUb2tlblwiXCB2YWx1ZVw9XCIoLio/KVwiXCB0eXBlXD1cImhpZGRlblwiXD4nLCBzaXRlKS5ncm91cCgxKQoJCWRhdGEgPSB7CgkJCSAib3RwX3R5cGUiOiAiMTE2IiwKCQkJICJtc2lzZG4iOiBubywKCQkJICJ0ayI6IHNlYXJjaCwKCQkJICJlbWFpbCI6ICIiLAoJCQkgIm9yaWdpbmFsX3BhcmFtIjogIiIsCgkJCSAidXNlcl9pZCI6ICIiLAoJCQkgInNpZ25hdHVyZSI6ICIiLAoJCQkgIm51bWJlcl9vdHBfZGlnaXQiOiAiNiIsCgkJCX0KCQlfX3JlcV9fID0gc2VsZi5yZXEucG9zdCgKCQkJCSJodHRwczovL2FjY291bnRzLnRva29wZWRpYS5jb20vb3RwL2MvYWpheC9yZXF1ZXN0LXdhIiwgaGVhZGVycyA9IGhlYWRlcnMsIGRhdGEgPSBkYXRhCgkgICApLnRleHQKCglkZWYgbWFpbihzZWxmKToKCQlzZWxmLndhX290cF8xKG5vbW9yKQoJCXNlbGYud2Ffb3RwXzIobm9tb3IpCgkJc2VsZi53YV9vdHBfMyhub21vcikKCQlzZWxmLndhX290cF80KG5vbW9yKQoJCXNlbGYud2Ffb3RwXzUobm9tb3IpCgkJc2VsZi53YV9vdHBfNihub21vcikKCQljZXRhayhwYW5lbChmIiBTdWtzZXMgU3BhbSBXQSBLZSBObyA6ICs2Mntub21vcn0iLHdpZHRoPTkwLHBhZGRpbmc9KDAsMiksc3R5bGU9ZiJib2xkIHdoaXRlIikpCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBJTVBPUlQgTU9EVUxFIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwp0cnk6CiAgICBpbXBvcnQgcmUKICAgIGltcG9ydCBvcwogICAgaW1wb3J0IHN5cwogICAgaW1wb3J0IGpzb24KICAgIGltcG9ydCBiczQKICAgIGltcG9ydCB1dWlkCiAgICBpbXBvcnQgaG1hYwogICAgaW1wb3J0IGhhc2hsaWIKICAgIGltcG9ydCB1cmxsaWIKICAgIGltcG9ydCB1cmxsaWIucmVxdWVzdAogICAgaW1wb3J0IGNhbGVuZGFyCiAgICBpbXBvcnQgcmVxdWVzdHMKICAgIGltcG9ydCByYW5kb20KICAgIGltcG9ydCBkYXRldGltZQogICAgaW1wb3J0IHRpbWUKICAgIGZyb20gdGltZSBpbXBvcnQgc2xlZXAKICAgIGZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCiAgICBmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yCiAgICBmcm9tIHJlcXVlc3RzLmV4Y2VwdGlvbnMgaW1wb3J0IENvbm5lY3Rpb25FcnJvcgpleGNlcHQgSW1wb3J0RXJyb3IgYXMgZToKICAgZXhpdChmIlxuIE1vZHVsZSB7ZX0gRXJyb3IiKQoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgSU1QT1JUIFJJQ0ggXS0tLS0tLS0tLS0tLS0tLS0tLS0jCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwKZnJvbSByaWNoLnRyZWUgaW1wb3J0IFRyZWUKZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBwcmludHMKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUKZnJvbSByaWNoLnRhYmxlIGltcG9ydCBUYWJsZQpmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrCmZyb20gcmljaC5wcm9ncmVzcyBpbXBvcnQgdHJhY2sKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgc29wCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwgYXMgbmVsCmZyb20gcmljaC50YWJsZSBpbXBvcnQgVGFibGUgYXMgbWUKZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMKZnJvbSByaWNoLnRhYmxlIGltcG9ydCBUYWJsZSBhcyBtZQpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZSBhcyBzb2wKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUgYXMgc29sCmNvbnNvbGUgPSBDb25zb2xlKCkKZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgcGFyc2VyCmZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IgYXMgTW9kb2wKZnJvbSByaWNoLnByb2dyZXNzIGltcG9ydCBQcm9ncmVzcyxTcGlubmVyQ29sdW1uLEJhckNvbHVtbixUZXh0Q29sdW1uCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBHTE9CQUwgTkFNRSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKaW50ZXJuYWwsZXh0ZXJuYWwsc3VjY2VzcyxjaGVja3BvaW50LGxvb3AsZm9sbG93aW5nLGxpc2Vuc2lrdW5pLGxpc2Vuc2lrdT1bXSxbXSxbXSxbXSwwLFtdLFtdLFsnc3Vrc2VzJ10KbWV0aG9kLCB4eGtvbnRvbCwgQnJheUdhZ2FoLCBCcmF5VWFyYW5kLCBwcm94eHksIFVzZXJCcmF5Q3JhY2sgPSBbXSwgW10sIFtdLCBbXSwgW10sIFtdCmJhdGFtPVtdCnMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKZGF5ID0gZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVkLSViLSVZIikKbnlNbkQsIG55TXhELCBtZW51ZHVtcCwgPSA1LCAxMCwgW10KY3VycmVudF9HTVQgPSB0aW1lLmdtdGltZSh0aW1lLnRpbWUoKSkKCiMtLS0tLS0tLS0tLS0tLS0tLS1bIERFRiBCVUxBTiBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKYnVsYW5fdHRsID0geyIwMSI6ICJKYW51YXJpIiwgIjAyIjogIkZlYnJ1YXJpIiwgIjAzIjogIk1hcmV0IiwgIjA0IjogIkFwcmlsIiwgIjA1IjogIk1laSIsICIwNiI6ICJKdW5pIiwgIjA3IjogIkp1bGkiLCAiMDgiOiAiQWd1c3R1cyIsICIwOSI6ICJTZXB0ZW1iZXIiLCAiMTAiOiAiT2t0b2JlciIsICIxMSI6ICJOb3ZlbWJlciIsICIxMiI6ICJEZXNlbWJlciJ9CgojLS0tLS0tLS0tLS0tLS0tLS0tWyBJTlNUQUdSQU0gTE9HSU4gXS0tLS0tLS0tLS0tLS0tLS0tLS0jCmluc3RhX2xvZyA9ICJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2FjY291bnRzL2xvZ2luLz9mb3JjZV9jbGFzc2ljX2xvZ2luPSYiCnVybCAgICAgICAgPSAiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vIgoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgQ09MT1VSIEZPUiBQUklOVCBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKQiA9ICdceDFiWzE7OTRtJyAjIEJJUlUKVSA9ICdceDFiWzE7OTVtJyAjIFVOR1UKTyA9ICdceDFiWzE7OTZtJyAjIEJJUlUgTVVEQQpOID0gJ1x4MWJbMG0nCSMgV0FSTkEgTUFUSQpIID0gIlwwMzNbMDs5Mm0iICMgSElKQVUKSyA9ICJcMDMzWzA7OTNtIiAjS1VOSU5HCk0gPSAnXHgxYlsxOzkxbScgIyBNRVJBSApQID0gIlwwMzNbMG0iICMgUFVUSUgKCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFdBUk5BIEZPUiBSSUNIIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwpaMiA9ICJbIzAwMDAwMF0iICMgSElUQU0KTTIgPSAiWyNGRjAwMDBdIiAjIE1FUkFICkgyID0gIlsjMDBGRjAwXSIgIyBISUpBVQpLMiA9ICJbI0ZGRkYwMF0iICMgS1VOSU5HCkIyID0gIlsjMDBDOEZGXSIgIyBCSVJVClUyID0gIlsjQUYwMEZGXSIgIyBVTkdVCk4yID0gIlsjRkYwMEZGXSIgIyBQSU5LCk8yID0gIlsjMDBGRkZGXSIgIyBCSVJVIE1VREEKUDIgPSAiWyNGRkZGRkZdIiAjIFBVVElICkoyID0gIlsjRkY4RjAwXSIgIyBKSU5HR0EKQTIgPSAiWyNBQUFBQUFdIiAjIEFCVS1BQlUKCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFJBTkRPTSBDT0xPUiBSSUNIIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwpMMSA9ICJbIzg3NWY1Zl0iICMgTElHSFQKRzEgID0gIlsjZmZkNzAwXSIgIyBHT0xECk0xICA9ICJbIzg3NWZkN10iICMgTUVESVVNIEdSRUVOClAxICAgPSAiWyNGRjAwRkZdIiAjIFBJTksKVzEgID0gIlsjRkZGRkZGXSIgIyBXSElURQpTMSAgID0gIlsjODdhZmZmXSIgIyBTS1kgQkxVRQpPMSAgID0gIlsjZDc4NzAwXSIgIyBPUkFOR0UzCk8zICAgPSAiWyNmZjVmZmZdIiAjIE1FRElVTSBPUkNIMwoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgQ09MT1IgVEFCTEUgRk9SIFJJQ0ggXS0tLS0tLS0tLS0tLS0tLS0tLS0jCkxJR0hUID0gIiM4NzVmNWYiICMgTElHSFQKR09MRCAgICA9ICIjZmZkNzAwIiAjIEdPTEQKTUVESVVNICA9ICIjODc1ZmQ3IiAjIE1FRElVTSBHUkVFTgpQSU5LICAgID0gIiNGRjAwRkYiICMgUElOSwpXSElURSAgPSAiI0ZGRkZGRiIgIyBXSElURQpTS1kgICAgID0gIiM4N2FmZmYiICMgU0tZIEJMVUUKT1JORyAgID0gIiNkNzg3MDAiICMgT1JBTkdFMwpPUkNIICAgPSAiI2ZmNWZmZiIgIyBNRURJVU0gT1JDSAoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgUkFORE9NIFJJQ0ggXS0tLS0tLS0tLS0tLS0tLS0tLS0jCkRJVCAgICAgID0gcmFuZG9tLmNob2ljZShbTTIsSzIsSDIsQjIsTjJdKQpUWUEgICAgID0gcmFuZG9tLmNob2ljZSAoW0xJR0hULEdPTEQsTUVESVVNLFBJTkssU0tZLE9STkcsT1JDSF0pCkFEVFlBMSA9IHJhbmRvbS5jaG9pY2UoW0wxLEcxLE0xLFAxLFMxLE8xLE8xXSkKQURUWUEyID0gcmFuZG9tLmNob2ljZShbSCxLLE8sQl0pCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBXQVJOQSBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKdHJ5OgoJY29sb3JfcmljaCA9IG9wZW4oImRhdGEvY29sb3JfcmljaC50eHQiLCJyIikucmVhZCgpCmV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKCWNvbG9yX3JpY2ggPSAiWyNhZmFmZmZdIgp0cnk6Cgljb2xvcl90YWJsZSA9IG9wZW4oImRhdGEvY29sb3JfdGFibGUudHh0IiwiciIpLnJlYWQoKQpleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6Cgljb2xvcl90YWJsZSA9ICIjYWZhZmZmIgoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgVVNFUi1BR0VOVCBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKVVNOID0gIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA5OyBGSUctTFgxIEJ1aWxkL0hVQVdFSUZJRy1MMTE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBzZXBlcnRpIEdlY2tvKSBWZXJzaS80LjAgQ2hyb21lLzgzLjAuNDEwMy4xMDYgTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDI0MC4yLjAuMTguMTA3IEFuZHJvaWQgKDI4IC85OyA0ODBkcGk7IDEwODB4MjAzMjsgSFVBV0VJOyBGSUctTFgxOyBIV0ZJRy1IOyBoaTYyNTA7IGl0X0lUOyAzNzgxMTY3NDApIgoKZGVmIEJyYXllbm5uWEQoKToKICAgIHJyID0gcmFuZG9tLnJhbmRpbnQKICAgIGExID0gcmFuZG9tLmNob2ljZShbJ1NNLUc1MzJGJywnU00tVjQxN0knLCdTTS1KNDAwRicsJ1NNLVQ3MzMnLCdTTS1GOTI2QiddKQogICAgYTIgPSByYW5kb20uY2hvaWNlKFsnQ1BIMjA1OScsJ0NQSDIwMDEnLCdDUEgxOTA5JywnQ1BIMjI2OScsJ0NQSDE3MjknXSkKICAgIHAxID0gZiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge3N0cihycigxMSwxOSkpfTsge2ExfSBCdWlsZC9QUFIxLntzdHIocnIoMTExMTExLDIxMDAwMCkpfS4we3N0cihycigxMSwxOSkpfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgogICAgcDIgPSBmIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7c3RyKHJyKDExLDE5KSl9OyB7YTJ9IEJ1aWxkL1NQMUEue3N0cihycigxMTExMTEsMjEwMDAwKSl9LjB7c3RyKHJyKDExLDE5KSl9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lL3tzdHIocnIoNzMsMTUwKSl9LjAue3N0cihycig1NTAwLDU5MDApKX0ue3N0cihycig3NSwxNTApKX0gTW9iaWxlIFNhZmFyaS81MzcuMzYiCiAgICBVYU1haW5uID0gcmFuZG9tLmNob2ljZShbcDEsIHAyXSkKICAgIGJhdGFtLmFwcGVuZChVYU1haW5uKQoKZm9yIHggaW4gcmFuZ2UoMTAwMCk6CiAgICByciA9IHJhbmRvbS5yYW5kaW50CiAgICByYyA9IHJhbmRvbS5jaG9pY2UKICAgIGcxID0gcmFuZG9tLmNob2ljZShbJzAxJywnMDInLCcwMycsJzA0JywnMDUnLCcwNicsJzA3JywnMDgnLCcwOScsJzEwJywnMTEnLCcxMicsJzEzJywnMTQnLCcxNScsJzE2JywnMTcnLCcxOCcsJzE5J10pCiAgICBnMiA9IHJhbmRvbS5jaG9pY2UoWydPUE0xJywnVFAxQScsJ1JQMUEnLCdQUFIxJywnUEtRMScsJ1FQMUEnLCdTUDFBJywnUktRMSddKQogICAgdTEgPSBmIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7c3RyKHJyKDQsMTIpKX07IFNNLUE0MDVGTiBCdWlsZC97ZzJ9LntzdHIocnIoMTExMTExLDIxMDAwMCkpfS4we2cxfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgogICAgdTIgPSBmIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7c3RyKHJyKDQsMTIpKX07IFNNLUo2MTBHIEJ1aWxkL3tnMn0ue3N0cihycigxMTExMTEsMjEwMDAwKSl9LjB7ZzF9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lL3tzdHIocnIoNzMsMTUwKSl9LjAue3N0cihycig1NTAwLDU5MDApKX0ue3N0cihycig3NSwxNTApKX0gTW9iaWxlIFNhZmFyaS81MzcuMzYiCiAgICB1MyA9IGYiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHtzdHIocnIoNCwxMikpfTsgU00tRzYxME0gQnVpbGQve2cyfS57c3RyKHJyKDExMTExMSwyMTAwMDApKX0uMHtnMX07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUve3N0cihycig3MywxNTApKX0uMC57c3RyKHJyKDU1MDAsNTkwMCkpfS57c3RyKHJyKDc1LDE1MCkpfSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKICAgIHU0ID0gZiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge3N0cihycig0LDEyKSl9OyBDUEgyMTA5IEJ1aWxkL3tnMn0ue3N0cihycigxMTExMTEsMjEwMDAwKSl9LjB7ZzF9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lL3tzdHIocnIoNzMsMTUwKSl9LjAue3N0cihycig1NTAwLDU5MDApKX0ue3N0cihycig3NSwxNTApKX0gTW9iaWxlIFNhZmFyaS81MzcuMzYiCiAgICB1NSA9IGYiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHtzdHIocnIoNCwxMikpfTsgU00tSjEyMEggQnVpbGQve2cyfS57c3RyKHJyKDExMTExMSwyMTAwMDApKX0uMHtnMX07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUve3N0cihycig3MywxNTApKX0uMC57c3RyKHJyKDU1MDAsNTkwMCkpfS57c3RyKHJyKDc1LDE1MCkpfSBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKICAgIHU2ID0gZiJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge3N0cihycig0LDEyKSl9OyBTTS1NMzE3RiBCdWlsZC97ZzJ9LntzdHIocnIoMTExMTExLDIxMDAwMCkpfS4we2cxfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97c3RyKHJyKDczLDE1MCkpfS4wLntzdHIocnIoNTUwMCw1OTAwKSl9LntzdHIocnIoNzUsMTUwKSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgogICAgVWEgPSByYW5kb20uY2hvaWNlKFt1MSwgdTIsIHUzLCB1NCwgdTUsIHU2XSkKICAgIFVzZXJCcmF5Q3JhY2suYXBwZW5kKFVhKQoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgVVJMLVBST1hZIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwp0cnk6CiAgICB1cmxfcHJveHkgPSByYW5kb20uY2hvaWNlKFsKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21vbm9zYW5zL3Byb3h5LWxpc3QvbWFpbi9wcm94aWVzL3NvY2tzNS50eHQiLCAKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RoZVNwZWVkWC9QUk9YWS1MaXN0L21hc3Rlci9zb2NrczUudHh0IiwgCiAgICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ob29rem9mL3NvY2tzNV9saXN0L21hc3Rlci9wcm94eS50eHQiLCAKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL21tcHgxMi9wcm94eS1saXN0L21hc3Rlci9zb2NrczUudHh0IiwgCiAgICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9qZXRrYWkvcHJveHktbGlzdC9tYWluL29ubGluZS1wcm94aWVzL3R4dC9wcm94aWVzLXNvY2tzNS50eHQiLCAKICAgICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0h5cGVyQmVhdHMvcHJveHktbGlzdC9tYWluL3NvY2tzNS50eHQiLCAKICAgICAgICAgICAgICBdKQpleGNlcHQ6cGFzcwogICAKIy0tLS0tLS0tLS0tLS0tLS0tLVsgUFJPWElFUyBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKdHJ5OgogICAgdXJsID0gcmVxdWVzdHMuZ2V0KGYie3VybF9wcm94eX0iKS50ZXh0CiAgICBmb3IgYnJheWVuIGluIHVybC5zcGxpdGxpbmVzKCk6cHJveHh5LmFwcGVuZChicmF5ZW4pCmV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKICAgb3Muc3lzdGVtKCJjbGVhciIpCiAgIHByaW50cyhQYW5lbChmIntQMn0gICAgIEFuZGEgVGlkYWsgVGVyaHVidW5nIEtlIEludGVybmV0LCBTaWxhaGthbiBQZXJpa3NhIEtvbmVrc2kgSW50ZXJuZXQgQW5kYSIsd2lkdGg9OTAscGFkZGluZz0oMCwyKSxzdHlsZT1mImJvbGQgd2hpdGUiKSk7c2xlZXAoMyk7ZXhpdCgpCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBHRVQtSVAgXS0tLS0tLS0tLS0tLS0tLS0tLS0jCnVybCA9IHJlcXVlc3RzLmdldCgiaHR0cDovL2lwLWFwaS5jb20vanNvbi8iKS5qc29uKCkKdHJ5OgoJSVAgID0gdXJsWyJxdWVyeSJdCglDTiA9IHVybFsiY291bnRyeSJdCmV4Y2VwdCBLZXlFcnJvcjoKCUlQID0gIi0iCglDTiA9ICItIgogICAgCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFdBS1RVIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgd2FrdHUoKToKCW5vdyA9IGRhdGV0aW1lLm5vdygpCglob3VycyA9IG5vdy5ob3VyCglpZiA0IDw9IGhvdXJzIDwgMTI6dGltZW5vdyA9ICJTZWxhbWF0IFBhZ2kiCgllbGlmIDEyIDw9IGhvdXJzIDwgMTU6dGltZW5vdyA9ICJTZWxhbWF0IFNpYW5nIgoJZWxpZiAxNSA8PSBob3VycyA8IDE4OnRpbWVub3cgPSAiU2VsYW1hdCBQZXRhbmciCgllbHNlOnRpbWVub3cgPSAiU2VsYW1hdCBNYWxhbSIKCXJldHVybiB0aW1lbm93CgojLS0tLS0tLS0tLS0tLS0tLS0tWyBDTEVBUi1MQVlBUiBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGNsZWFyKCk6CiAgICB0cnk6b3Muc3lzdGVtKCJjbGVhciIpCiAgICBleGNlcHQ6cGFzcwoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgUFlUSE9OIFZFUlNJT04gXS0tLS0tLS0tLS0tLS0tLS0tLS0jCnRyeToKICAgICMgcHl0aG9uIDIKCXVybGxpYl9xdW90ZV9wbHVzID0gdXJsbGliLnF1b3RlCmV4Y2VwdDoKICAgICMgcHl0aG9uIDMKCXVybGxpYl9xdW90ZV9wbHVzID0gdXJsbGliLnBhcnNlLnF1b3RlX3BsdXMKCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFVSTCBMT0dJTiBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGNla0FQSShjb29raWUpOgogICAgdXNlcj1vcGVuKCdkYXRhLy51c2VybmFtZScsJ3InKS5yZWFkKCkKICAgIHRyeToKICAgICAgICBjPXMuZ2V0KCJodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvdXNlcnMvd2ViX3Byb2ZpbGVfaW5mby8/dXNlcm5hbWU9JXMiJSh1c2VyKSxjb29raWVzPXsnY29va2llJzpjb29raWV9LGhlYWRlcnM9eyJ1c2VyLWFnZW50IjpVU04sIngtaWctYXBwLWlkIjonOTM2NjE5NzQzMzkyNDU5J30pCiAgICAgICAgaT1jLmpzb24oKVsiZGF0YSJdWyJ1c2VyIl0KICAgICAgICBuYW1hPWlbImZ1bGxfbmFtZSJdCiAgICAgICAgZm9sbG93ZXJzPWlbImVkZ2VfZm9sbG93ZWRfYnkiXVsiY291bnQiXQogICAgICAgIGZvbGxvd2luZz1pWyJlZGdlX2ZvbGxvdyJdWyJjb3VudCJdCiAgICAgICAgZXh0ZXJuYWwuYXBwZW5kKGYne25hbWF9fHtmb2xsb3dlcnN9fHtmb2xsb3dpbmd9JykKICAgIGV4Y2VwdCAgKFZhbHVlRXJyb3IsS2V5RXJyb3IpOgogICAgICAgIHByaW50cyhQYW5lbChmIntQMn1PcHNoaCBBa3VuIFR1bWJhbCBNdSBUZXJrZW5hIENoZWNrcG9pbnQsIFNpbGFoa2FuIExvZ2luIERlbmdhbiBBa3VuIExhaW4iLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTtvcy5zeXN0ZW0oJ3JtIC1yZiBkYXRhLy5rdWtpcy5sb2cgcm0gLXJmIGRhdGEvLnVzZXJuYW1lJyk7ZXhpdCgpCiAgICByZXR1cm4gZXh0ZXJuYWwsdXNlcgoKIy0tLS0tLS0tLS0tLS0tLS0tLVsgTE9HSU4gQ09PS0lFUyBdLS0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGxvZ2luQ29va2llKCk6CiAgICBpZiAic3Vrc2VzIiBpbiBsaXNlbnNpa3U6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBrdWtpPW9wZW4oJ2RhdGEvLmt1a2lzLmxvZycsJ3InKS5yZWFkKCkKICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAgICAgICAgICAgIHByaW50cyhQYW5lbChmIntQMn1TZWJlbHVtIExvZ2luIFBhc3Rpa2FuIEFrdW4gVHVtYmFsIEJlcnNpZmF0IFB1YmxpayBEYW4gVGlkYWsgUHJpdmF0ZSIsd2lkdGg9OTAscGFkZGluZz0oMCw0KSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKICAgICAgICAgICAgdXM9aW5wdXQoZicgW+KAol0ge0h9TWFzdWthbiBVc2VybmFtZSA6e0h9ICcpCiAgICAgICAgICAgIGNvaz1pbnB1dChmJ3tQfSBb4oCiXSB7SH1NYXN1a2FuIENvb2tpZSAgIDp7SH0gJykKICAgICAgICAgICAga3VraT1vcGVuKCdkYXRhLy5rdWtpcy5sb2cnLCd3Jykud3JpdGUoY29rKQogICAgICAgICAgICB1c2VyPW9wZW4oJ2RhdGEvLnVzZXJuYW1lJywndycpLndyaXRlKHVzKQogICAgICAgICAgICB0aW1lLnNsZWVwKDYpCiAgICAgICAgICAgIHByaW50cyhQYW5lbChmIntQMn1Mb2dpbiBBa3VuIFR1bWJhbCBCZXJoYXNpbCwgU2lsYWhrYW4gSmFsYW5rYW4gVWxhbmcgU2NyaXB0bnlhIix3aWR0aD05MCxwYWRkaW5nPSgwLDcpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTtleGl0KCkKICAgICAgICBleCx1c2VyPWNla0FQSShrdWtpKQogICAgICAgIGNvb2tpZT17J2Nvb2tpZSc6a3VraX0KICAgICAgICBpbnN0YWdyYW0oZXgsdXNlcixjb29raWUpLm1lbnUoKQogICAgZWxzZToKICAgICAgICBsaXNlbnNpKCkKCmNsYXNzIGluc3RhZ3JhbUFQSToKCUFQSV9VUkwgPSAnaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxLycKCURFVklDRV9TRVRUSU5UUyA9IHsnbWFudWZhY3R1cmVyJzogJ1hpYW9taScsCgkJJ21vZGVsJzogJ0hNIDFTVycsCgkJJ2FuZHJvaWRfdmVyc2lvbic6IDE4LAoJCSdhbmRyb2lkX3JlbGVhc2UnOiAnNC4zJ30KCVVTRVJfQUdFTlQgPSAnSW5zdGFncmFtIDEwLjI2LjAgQW5kcm9pZCAoe2FuZHJvaWRfdmVyc2lvbn0ve2FuZHJvaWRfcmVsZWFzZX07IDMyMGRwaTsgNzIweDEyODA7IHttYW51ZmFjdHVyZXJ9OyB7bW9kZWx9OyBhcm1hbmk7IHFjb207IGVuX1VTKScuZm9ybWF0KCoqREVWSUNFX1NFVFRJTlRTKQoJSUdfU0lHX0tFWSA9ICc0Zjg3MzJlYjliYTdkMWM4ZTg4OTdhNzVkNjQ3NGQ0ZWIzZjUyNzkxMzc0MzFiMmFhZmI3MWZhZmUyYWJlMTc4JwoJRVhQRVJJTUVOVFMgPSAnaWdfcHJvbW90ZV9yZWFjaF9vYmplY3RpdmVfZml4X3VuaXZlcnNlLGlnX2FuZHJvaWRfdW5pdmVyc2VfdmlkZW9fcHJvZHVjdGlvbixpZ19zZWFyY2hfY2xpZW50X2gxXzIwMTdfaG9sZG91dCxpZ19hbmRyb2lkX2xpdmVfZm9sbG93X2Zyb21fY29tbWVudHNfdW5pdmVyc2UsaWdfYW5kcm9pZF9jYXJvdXNlbF9ub25fc3F1YXJlX2NyZWF0aW9uLGlnX2FuZHJvaWRfbGl2ZV9hbmFseXRpY3MsaWdfYW5kcm9pZF9mb2xsb3dfYWxsX2RpYWxvZ19jb25maXJtYXRpb25fY29weSxpZ19hbmRyb2lkX3N0b3JpZXNfc2VydmVyX2NvdmVyZnJhbWUsaWdfYW5kcm9pZF92aWRlb19jYXB0aW9uc191bml2ZXJzZSxpZ19hbmRyb2lkX29mZmxpbmVfbG9jYXRpb25fZmVlZCxpZ19hbmRyb2lkX2RpcmVjdF9pbmJveF9yZXRyeV9zZWVuX3N0YXRlLGlnX2FuZHJvaWRfb250YWN0X2ludml0ZV91bml2ZXJzZSxpZ19hbmRyb2lkX2xpdmVfYnJvYWRjYXN0X2JsYWNrbGlzdCxpZ19hbmRyb2lkX2luc3RhX3ZpZGVvX3JlY29ubmVjdF92aWV3ZXJzLGlnX2FuZHJvaWRfYWRfYXN5bmNfYWRzX3VuaXZlcnNlLGlnX2FuZHJvaWRfc2VhcmNoX2NsZWFyX2xheW91dF91bml2ZXJzZSxpZ19hbmRyb2lkX3Nob3BwaW5nX3JlcG9ydGluZyxpZ19hbmRyb2lkX3N0b3JpZXNfc3VyZmFjZV91bml2ZXJzZSxpZ19hbmRyb2lkX3ZlcmlmaWVkX2NvbW1lbnRzX3VuaXZlcnNlLGlnX2FuZHJvaWRfcHJlbG9hZF9tZWRpYV9haGVhZF9pbl9jdXJyZW50X3JlZWwsYW5kcm9pZF9pbnN0YWdyYW1fcHJlZmV0Y2hfc3VnZ2VzdGlvbnNfdW5pdmVyc2UsaWdfYW5kcm9pZF9yZWVsX3ZpZXdlcl9mZXRjaF9taXNzaW5nX3JlZWxzX3VuaXZlcnNlLGlnX2FuZHJvaWRfZGlyZWN0X3NlYXJjaF9zaGFyZV9zaGVldF91bml2ZXJzZSxpZ19hbmRyb2lkX2J1c2luZXNzX3Byb21vdGVfdG9vbHRpcCxpZ19hbmRyb2lkX2RpcmVjdF9ibHVlX3RhYixpZ19hbmRyb2lkX2FzeW5jX25ldHdvcmtfdHdlYWtfdW5pdmVyc2UsaWdfYW5kcm9pZF9lbGV2YXRlX21haW5fdGhyZWFkX3ByaW9yaXR5X3VuaXZlcnNlLGlnX2FuZHJvaWRfc3Rvcmllc19nYWxsZXJ5X251eCxpZ19hbmRyb2lkX2luc3RhdmlkZW9fcmVtb3ZlX251eF9jb21tZW50cyxpZ192aWRlb19jb3B5cmlnaHRfd2hpdGVsaXN0LGlnX3JlYWN0X25hdGl2ZV9pbmxpbmVfaW5zaWdodHNfd2l0aF9yZWxheSxpZ19hbmRyb2lkX2RpcmVjdF90aHJlYWRfbWVzc2FnZV9hbmltYXRpb24saWdfYW5kcm9pZF9kcmF3X3JhaW5ib3dfY2xpZW50X3VuaXZlcnNlLGlnX2FuZHJvaWRfZGlyZWN0X2xpbmtfc3R5bGUsaWdfYW5kcm9pZF9saXZlX2hlYXJ0X2VuaGFuY2VtZW50c191bml2ZXJzZSxpZ19hbmRyb2lkX3J0Y19yZXNoYXJlLGlnX2FuZHJvaWRfcHJlbG9hZF9pdGVtX2NvdW50X2luX3JlZWxfdmlld2VyX2J1ZmZlcixpZ19hbmRyb2lkX3VzZXJzX2Jvb3RzdHJhcF9zZXJ2aWNlLGlnX2FuZHJvaWRfYXV0b19yZXRyeV9wb3N0X21vZGUsaWdfYW5kcm9pZF9zaG9wcGluZyxpZ19hbmRyb2lkX21haW5fZmVlZF9zZWVuX3N0YXRlX2RvbnRfc2VuZF9pbmZvX29uX3RhaWxfbG9hZCxpZ19mYm5zX3ByZWxvYWRfZGVmYXVsdCxpZ19hbmRyb2lkX2dlc3R1cmVfZGlzbWlzc19yZWVsX3ZpZXdlcixpZ19hbmRyb2lkX3Rvb2xfdGlwLGlnX2FuZHJvaWRfYWRfbG9nZ2VyX2Z1bm5lbF9sb2dnaW5nX3VuaXZlcnNlLGlnX2FuZHJvaWRfZ2FsbGVyeV9ncmlkX2NvbHVtbl9jb3VudF91bml2ZXJzZSxpZ19hbmRyb2lkX2J1c2luZXNzX25ld19hZHNfcGF5bWVudF91bml2ZXJzZSxpZ19hbmRyb2lkX2RpcmVjdF9saW5rcyxpZ19hbmRyb2lkX2F1ZGllbmNlX2NvbnRyb2wsaWdfYW5kcm9pZF9saXZlX2VuY29yZV9jb25zdW1wdGlvbl9zZXR0aW5nc191bml2ZXJzZSxpZ19wZXJmX2FuZHJvaWRfaG9sZG91dCxpZ19hbmRyb2lkX2NhY2hlX2NvbnRhY3RfaW1wb3J0X2xpc3QsaWdfYW5kcm9pZF9saW5rc19yZWNlaXZlcnMsaWdfYW5kcm9pZF9hZF9pbXByZXNzaW9uX2JhY2t0ZXN0LGlnX2FuZHJvaWRfbGlzdF9yZWRlc2lnbixpZ19hbmRyb2lkX3N0b3JpZXNfc2VwYXJhdGVfb3ZlcmxheV9jcmVhdGlvbixpZ19hbmRyb2lkX3N0b3BfdmlkZW9fcmVjb3JkaW5nX2ZpeF91bml2ZXJzZSxpZ19hbmRyb2lkX3JlbmRlcl92aWRlb19zZWdtZW50YXRpb24saWdfYW5kcm9pZF9saXZlX2VuY29yZV9yZWVsX2NoYWluaW5nX3VuaXZlcnNlLGlnX2FuZHJvaWRfc3luY19vbl9iYWNrZ3JvdW5kX2VuaGFuY2VkXzEwXzI1LGlnX2FuZHJvaWRfaW1tZXJzaXZlX3ZpZXdlcixpZ19hbmRyb2lkX21xdHRfc2t5d2Fsa2VyLGlnX2ZibnNfcHVzaCxpZ19hbmRyb2lkX2FkX3dhdGNobW9yZV9vdmVybGF5X3VuaXZlcnNlLGlnX2FuZHJvaWRfcmVhY3RfbmF0aXZlX3VuaXZlcnNlLGlnX2FuZHJvaWRfcHJvZmlsZV90YWJzX3JlZGVzaWduX3VuaXZlcnNlLGlnX2FuZHJvaWRfbGl2ZV9jb25zdW1wdGlvbl9hYnIsaWdfYW5kcm9pZF9zdG9yeV92aWV3ZXJfc29jaWFsX2NvbnRleHQsaWdfYW5kcm9pZF9oaWRlX3Bvc3RfaW5fZmVlZCxpZ19hbmRyb2lkX3ZpZGVvX2xvb3Bjb3VudF9pbnQsaWdfYW5kcm9pZF9lbmFibGVfbWFpbl9mZWVkX3JlZWxfdHJheV9wcmVsb2FkaW5nLGlnX2FuZHJvaWRfY2FtZXJhX3Vwc2VsbF9kaWFsb2csaWdfYW5kcm9pZF9hZF93YXRjaGJyb3dzZV91bml2ZXJzZSxpZ19hbmRyb2lkX2ludGVybmFsX3Jlc2VhcmNoX3NldHRpbmdzLGlnX2FuZHJvaWRfc2VhcmNoX3Blb3BsZV90YWdfdW5pdmVyc2UsaWdfYW5kcm9pZF9yZWFjdF9uYXRpdmVfb3RhLGlnX2FuZHJvaWRfZW5hYmxlX2NvbmN1cnJlbnRfcmVxdWVzdCxpZ19hbmRyb2lkX3JlYWN0X25hdGl2ZV9zdG9yaWVzX2dyaWRfdmlldyxpZ19hbmRyb2lkX2J1c2luZXNzX3N0b3JpZXNfaW5saW5lX2luc2lnaHRzLGlnX2FuZHJvaWRfbG9nX21lZGlhY29kZWNfaW5mbyxpZ19hbmRyb2lkX2RpcmVjdF9leHBpcmluZ19tZWRpYV9sb2FkaW5nX2Vycm9ycyxpZ192aWRlb191c2Vfc3ZlX3VuaXZlcnNlLGlnX2FuZHJvaWRfY29sZF9zdGFydF9mZWVkX3JlcXVlc3QsaWdfYW5kcm9pZF9lbmFibGVfemVyb19yYXRpbmcsaWdfYW5kcm9pZF9yZXZlcnNlX2F1ZGlvLGlnX2FuZHJvaWRfYnJhbmRlZF9jb250ZW50X3RocmVlX2xpbmVfdWlfdW5pdmVyc2UsaWdfYW5kcm9pZF9saXZlX2VuY29yZV9wcm9kdWN0aW9uX3VuaXZlcnNlLGlnX3N0b3JpZXNfbXVzaWNfc3RpY2tlcixpZ19hbmRyb2lkX3N0b3JpZXNfdGVhY2hfZ2FsbGVyeV9sb2NhdGlvbixpZ19hbmRyb2lkX2h0dHBfc3RhY2tfZXhwZXJpbWVudF8yMDE3LGlnX2FuZHJvaWRfc3Rvcmllc19kZXZpY2VfdGlsdCxpZ19hbmRyb2lkX3BlbmRpbmdfcmVxdWVzdF9zZWFyY2hfYmFyLGlnX2FuZHJvaWRfZmJfdG9wc2VhcmNoX3NncF9mb3JrX3JlcXVlc3QsaWdfYW5kcm9pZF9zZWVuX3N0YXRlX3dpdGhfdmlld19pbmZvLGlnX2FuZHJvaWRfYW5pbWF0aW9uX3BlcmZfcmVwb3J0ZXJfdGltZW91dCxpZ19hbmRyb2lkX25ld19ibG9ja19mbG93LGlnX2FuZHJvaWRfc3RvcnlfdHJheV90aXRsZV9wbGF5X2FsbF92MixpZ19hbmRyb2lkX2RpcmVjdF9hZGRyZXNzX2xpbmtzLGlnX2FuZHJvaWRfc3Rvcmllc19hcmNoaXZlX3VuaXZlcnNlLGlnX2FuZHJvaWRfc2F2ZV9jb2xsZWN0aW9uc19jb3Zlcl9waG90byxpZ19hbmRyb2lkX2xpdmVfd2VicnRjX2xpdmV3aXRoX3Byb2R1Y3Rpb24saWdfYW5kcm9pZF9zaWduX3ZpZGVvX3VybCxpZ19hbmRyb2lkX3N0b3JpZXNfdmlkZW9fcHJlZmV0Y2hfa2IsaWdfYW5kcm9pZF9zdG9yaWVzX2NyZWF0ZV9mbG93X2Zhdm9yaXRlc190b29sdGlwLGlnX2FuZHJvaWRfbGl2ZV9zdG9wX2Jyb2FkY2FzdF9vbl80MDQsaWdfYW5kcm9pZF9saXZlX3ZpZXdlcl9pbnZpdGVfdW5pdmVyc2UsaWdfYW5kcm9pZF9wcm9tb3Rpb25fZmVlZGJhY2tfY2hhbm5lbCxpZ19hbmRyb2lkX3JlbmRlcl9pZnJhbWVfaW50ZXJ2YWwsaWdfYW5kcm9pZF9hY2Nlc3NpYmlsaXR5X2xvZ2dpbmdfdW5pdmVyc2UsaWdfYW5kcm9pZF9jYW1lcmFfc2hvcnRjdXRfdW5pdmVyc2UsaWdfYW5kcm9pZF91c2Vfb25lX2Nvb2tpZV9zdG9yZV9wZXJfdXNlcl9vdmVycmlkZSxpZ19wcm9maWxlX2hvbGRvdXRfMjAxN191bml2ZXJzZSxpZ19hbmRyb2lkX3N0b3JpZXNfc2VydmVyX2JydXNoZXMsaWdfYW5kcm9pZF9hZF9tZWRpYV91cmxfbG9nZ2luZ191bml2ZXJzZSxpZ19hbmRyb2lkX3Nob3BwaW5nX3RhZ19udXhfdGV4dF91bml2ZXJzZSxpZ19hbmRyb2lkX2NvbW1lbnRzX3NpbmdsZV9yZXBseV91bml2ZXJzZSxpZ19hbmRyb2lkX3N0b3JpZXNfdmlkZW9fbG9hZGluZ19zcGlubmVyX2ltcHJvdmVtZW50cyxpZ19hbmRyb2lkX2NvbGxlY3Rpb25zX2NhY2hlLGlnX2FuZHJvaWRfY29tbWVudF9hcGlfc3BhbV91bml2ZXJzZSxpZ19hbmRyb2lkX2ZhY2Vib29rX3R3aXR0ZXJfcHJvZmlsZV9waG90b3MsaWdfYW5kcm9pZF9zaG9wcGluZ190YWdfY3JlYXRpb25fdW5pdmVyc2UsaWdfc3RvcnlfY2FtZXJhX3JldmVyc2VfdmlkZW9fZXhwZXJpbWVudCxpZ19hbmRyb2lkX2RpcmVjdF9idW1wX3NlbGVjdGVkX3JlY2lwaWVudHMsaWdfYW5kcm9pZF9hZF9jdGFfaGFwdGljX2ZlZWRiYWNrX3VuaXZlcnNlLGlnX2FuZHJvaWRfdmVydGljYWxfc2hhcmVfc2hlZXRfZXhwZXJpbWVudCxpZ19hbmRyb2lkX2ZhbWlseV9icmlkZ2Vfc2hhcmUsaWdfYW5kcm9pZF9zZWFyY2gsaWdfYW5kcm9pZF9pbnN0YV92aWRlb19jb25zdW1wdGlvbl90aXRsZXMsaWdfYW5kcm9pZF9zdG9yaWVzX2dhbGxlcnlfcHJldmlld19idXR0b24saWdfYW5kcm9pZF9mYl9hdXRoX2VkdWNhdGlvbixpZ19hbmRyb2lkX2NhbWVyYV91bml2ZXJzZSxpZ19hbmRyb2lkX21lX29ubHlfdW5pdmVyc2UsaWdfYW5kcm9pZF9pbnN0YXZpZGVvX2F1ZGlvX29ubHlfbW9kZSxpZ19hbmRyb2lkX3VzZXJfcHJvZmlsZV9jaGFpbmluZ19pY29uLGlnX2FuZHJvaWRfbGl2ZV92aWRlb19yZWFjdGlvbnNfY29uc3VtcHRpb25fdW5pdmVyc2UsaWdfYW5kcm9pZF9zdG9yaWVzX2hhc2h0YWdfdGV4dCxpZ19hbmRyb2lkX3Bvc3RfbGl2ZV9iYWRnZV91bml2ZXJzZSxpZ19hbmRyb2lkX3N3aXBlX2ZyYWdtZW50X2NvbnRhaW5lcixpZ19hbmRyb2lkX3NlYXJjaF91c2Vyc191bml2ZXJzZSxpZ19hbmRyb2lkX2xpdmVfc2F2ZV90b19jYW1lcmFfcm9sbF91bml2ZXJzZSxpZ19jcmVhdGlvbl9ncm93dGhfaG9sZG91dCxpZ19hbmRyb2lkX3N0aWNrZXJfcmVnaW9uX3RyYWNraW5nLGlnX2FuZHJvaWRfdW5pZmllZF9pbmJveCxpZ19hbmRyb2lkX2xpdmVfbmV3X3dhdGNoX3RpbWUsaWdfYW5kcm9pZF9vZmZsaW5lX21haW5fZmVlZF8xMF8xMSxpZ19pbXBvcnRfYml6X2NvbnRhY3RfdG9fcGFnZSxpZ19hbmRyb2lkX2xpdmVfZW5jb3JlX2NvbnN1bXB0aW9uX3VuaXZlcnNlLGlnX2FuZHJvaWRfZXhwZXJpbWVudGFsX2ZpbHRlcnMsaWdfYW5kcm9pZF9zZWFyY2hfY2xpZW50X21hdGNoaW5nXzIsaWdfYW5kcm9pZF9yZWFjdF9uYXRpdmVfaW5saW5lX2luc2lnaHRzX3YyLGlnX2FuZHJvaWRfYnVzaW5lc3NfY29udmVyc2lvbl92YWx1ZV9wcm9wX3YyLGlnX2FuZHJvaWRfcmVkaXJlY3RfdG9fbG93X2xhdGVuY3lfdW5pdmVyc2UsaWdfYW5kcm9pZF9hZF9zaG93X25ld19hd3JfdW5pdmVyc2UsaWdfZmFtaWx5X2JyaWRnZXNfaG9sZG91dF91bml2ZXJzZSxpZ19hbmRyb2lkX2JhY2tncm91bmRfZXhwbG9yZV9mZXRjaCxpZ19hbmRyb2lkX2ZvbGxvd2luZ19mb2xsb3dlcl9zb2NpYWxfY29udGV4dCxpZ19hbmRyb2lkX3ZpZGVvX2tlZXBfc2NyZWVuX29uLGlnX2FuZHJvaWRfYWRfbGVhZGdlbl9yZWxheV9tb2Rlcm4saWdfYW5kcm9pZF9wcm9maWxlX3Bob3RvX2FzX21lZGlhLGlnX2FuZHJvaWRfaW5zdGFfdmlkZW9fY29uc3VtcHRpb25faW5mcmEsaWdfYW5kcm9pZF9hZF93YXRjaGxlYWRfdW5pdmVyc2UsaWdfYW5kcm9pZF9kaXJlY3RfcHJlZmV0Y2hfZGlyZWN0X3N0b3J5X2pzb24saWdfYW5kcm9pZF9zaG9wcGluZ19yZWFjdF9uYXRpdmUsaWdfYW5kcm9pZF90b3BfbGl2ZV9wcm9maWxlX3BpY3NfdW5pdmVyc2UsaWdfYW5kcm9pZF9kaXJlY3RfcGhvbmVfbnVtYmVyX2xpbmtzLGlnX2FuZHJvaWRfc3Rvcmllc193ZWJsaW5rX2NyZWF0aW9uLGlnX2FuZHJvaWRfZGlyZWN0X3NlYXJjaF9uZXdfdGhyZWFkX3VuaXZlcnNlLGlnX2FuZHJvaWRfaGlzdG9ncmFtX3JlcG9ydGVyLGlnX2FuZHJvaWRfZGlyZWN0X29uX3Byb2ZpbGVfdW5pdmVyc2UsaWdfYW5kcm9pZF9uZXR3b3JrX2NhbmNlbGxhdGlvbixpZ19hbmRyb2lkX2JhY2tncm91bmRfcmVlbF9mZXRjaCxpZ19hbmRyb2lkX3JlYWN0X25hdGl2ZV9pbnNpZ2h0cyxpZ19hbmRyb2lkX2luc3RhX3ZpZGVvX2F1ZGlvX2VuY29kZXIsaWdfYW5kcm9pZF9mYW1pbHlfYnJpZGdlX2Jvb2ttYXJrcyxpZ19hbmRyb2lkX2RhdGFfdXNhZ2VfbmV0d29ya19sYXllcixpZ19hbmRyb2lkX3VuaXZlcnNhbF9pbnN0YWdyYW1fZGVlcF9saW5rcyxpZ19hbmRyb2lkX2Rhc2hfZm9yX3ZvZF91bml2ZXJzZSxpZ19hbmRyb2lkX21vZHVsYXJfdGFiX2Rpc2NvdmVyX3Blb3BsZV9yZWRlc2lnbixpZ19hbmRyb2lkX21hc19zdGlja2VyX3Vwc2VsbF9kaWFsb2dfdW5pdmVyc2UsaWdfYW5kcm9pZF9hZF9hZGRfcGVyX2V2ZW50X2NvdW50ZXJfdG9fbG9nZ2luZ19ldmVudCxpZ19hbmRyb2lkX3N0aWNreV9oZWFkZXJfdG9wX2Nocm9tZV9vcHRpbWl6YXRpb24saWdfYW5kcm9pZF9ydGwsaWdfYW5kcm9pZF9iaXpfY29udmVyc2lvbl9wYWdlX3ByZV9zZWxlY3QsaWdfYW5kcm9pZF9wcm9tb3RlX2Zyb21fcHJvZmlsZV9idXR0b24saWdfYW5kcm9pZF9saXZlX2Jyb2FkY2FzdGVyX2ludml0ZV91bml2ZXJzZSxpZ19hbmRyb2lkX3NoYXJlX3NwaW5uZXIsaWdfYW5kcm9pZF90ZXh0X2FjdGlvbixpZ19hbmRyb2lkX293bl9yZWVsX3RpdGxlX3VuaXZlcnNlLGlnX3Byb21vdGlvbnNfdW5pdF9pbl9pbnNpZ2h0c19sYW5kaW5nX3BhZ2UsaWdfYW5kcm9pZF9idXNpbmVzc19zZXR0aW5nc19oZWFkZXJfdW5pdixpZ19hbmRyb2lkX3NhdmVfbG9uZ3ByZXNzX3Rvb2x0aXAsaWdfYW5kcm9pZF9jb25zdHJhaW5faW1hZ2Vfc2l6ZV91bml2ZXJzZSxpZ19hbmRyb2lkX2J1c2luZXNzX25ld19ncmFwaHFsX2VuZHBvaW50X3VuaXZlcnNlLGlnX3JhbmtpbmdfZm9sbG93aW5nLGlnX2FuZHJvaWRfc3Rvcmllc19wcm9maWxlX2NhbWVyYV9lbnRyeV9wb2ludCxpZ19hbmRyb2lkX3VuaXZlcnNlX3JlZWxfdmlkZW9fcHJvZHVjdGlvbixpZ19hbmRyb2lkX3Bvd2VyX21ldHJpY3MsaWdfYW5kcm9pZF9zZnBsdCxpZ19hbmRyb2lkX29mZmxpbmVfaGFzaHRhZ19mZWVkLGlnX2FuZHJvaWRfbGl2ZV9za2luX3Ntb290aCxpZ19hbmRyb2lkX2RpcmVjdF9pbmJveF9zZWFyY2gsaWdfYW5kcm9pZF9zdG9yaWVzX3Bvc3Rpbmdfb2ZmbGluZV91aSxpZ19hbmRyb2lkX3NpZGVjYXJfdmlkZW9fdXBsb2FkX3VuaXZlcnNlLGlnX2FuZHJvaWRfcHJvbW90aW9uX21hbmFnZXJfZW50cnlfcG9pbnRfdW5pdmVyc2UsaWdfYW5kcm9pZF9kaXJlY3RfcmVwbHlfYXVkaWVuY2VfdXBncmFkZSxpZ19hbmRyb2lkX3N3aXBlX25hdmlnYXRpb25feF9hbmdsZV91bml2ZXJzZSxpZ19hbmRyb2lkX29mZmxpbmVfbW9kZV9ob2xkb3V0LGlnX2FuZHJvaWRfbGl2ZV9zZW5kX3VzZXJfbG9jYXRpb24saWdfYW5kcm9pZF9kaXJlY3RfZmV0Y2hfYmVmb3JlX3B1c2hfbm90aWYsaWdfYW5kcm9pZF9ub25fc3F1YXJlX2ZpcnN0LGlnX2FuZHJvaWRfaW5zdGFfdmlkZW9fZHJhd2luZyxpZ19hbmRyb2lkX3N3aXBlYWJsZWZpbHRlcnNfdW5pdmVyc2UsaWdfYW5kcm9pZF9saXZlX25vdGlmaWNhdGlvbl9jb250cm9sX3VuaXZlcnNlLGlnX2FuZHJvaWRfYW5hbHl0aWNzX2xvZ2dlcl9ydW5uaW5nX2JhY2tncm91bmRfdW5pdmVyc2UsaWdfYW5kcm9pZF9zYXZlX2FsbCxpZ19hbmRyb2lkX3JlZWxfdmlld2VyX2RhdGFfYnVmZmVyX3NpemUsaWdfZGlyZWN0X3F1YWxpdHlfaG9sZG91dF91bml2ZXJzZSxpZ19hbmRyb2lkX2ZhbWlseV9icmlkZ2VfZGlzY292ZXIsaWdfYW5kcm9pZF9yZWFjdF9uYXRpdmVfcmVzdGFydF9hZnRlcl9lcnJvcl91bml2ZXJzZSxpZ19hbmRyb2lkX3N0YXJ0dXBfbWFuYWdlcixpZ19zdG9yeV90cmF5X3BlZWtfY29udGVudF91bml2ZXJzZSxpZ19hbmRyb2lkX3Byb2ZpbGUsaWdfYW5kcm9pZF9oaWdoX3Jlc191cGxvYWRfMixpZ19hbmRyb2lkX2h0dHBfc2VydmljZV9zYW1lX3RocmVhZCxpZ19hbmRyb2lkX3Njcm9sbF90b19kaXNtaXNzX2tleWJvYXJkLGlnX2FuZHJvaWRfcmVtb3ZlX2ZvbGxvd2Vyc191bml2ZXJzZSxpZ19hbmRyb2lkX3NraXBfdmlkZW9fcmVuZGVyLGlnX2FuZHJvaWRfc3RvcnlfdGltZXN0YW1wcyxpZ19hbmRyb2lkX2xpdmVfdmlld2VyX2NvbW1lbnRfcHJvbXB0X3VuaXZlcnNlLGlnX3Byb2ZpbGVfaG9sZG91dF91bml2ZXJzZSxpZ19hbmRyb2lkX3JlYWN0X25hdGl2ZV9pbnNpZ2h0c19ncmlkX3ZpZXcsaWdfc3Rvcmllc19zZWxmaWVfc3RpY2tlcixpZ19hbmRyb2lkX3N0b3JpZXNfcmVwbHlfY29tcG9zZXJfcmVkZXNpZ24saWdfYW5kcm9pZF9zdHJlYW1saW5lX3BhZ2VfY3JlYXRpb24saWdfZXhwbG9yZV9uZXRlZ28saWdfYW5kcm9pZF9pZzRiX2Nvbm5lY3RfZmJfYnV0dG9uX3VuaXZlcnNlLGlnX2FuZHJvaWRfZmVlZF91dGlsX3JlY3Rfb3B0aW1pemF0aW9uLGlnX2FuZHJvaWRfcmVuZGVyaW5nX2NvbnRyb2xzLGlnX2FuZHJvaWRfb3NfdmVyc2lvbl9ibG9ja2luZyxpZ19hbmRyb2lkX2VuY29kZXJfd2lkdGhfc2FmZV9tdWx0aXBsZV8xNixpZ19zZWFyY2hfbmV3X2Jvb3RzdHJhcF9ob2xkb3V0X3VuaXZlcnNlLGlnX2FuZHJvaWRfc25pcHBldHNfcHJvZmlsZV9udXgsaWdfYW5kcm9pZF9lMmVfb3B0aW1pemF0aW9uX3VuaXZlcnNlLGlnX2FuZHJvaWRfY29tbWVudHNfbG9nZ2luZ191bml2ZXJzZSxpZ19zaG9wcGluZ19pbnNpZ2h0cyxpZ19hbmRyb2lkX3NhdmVfY29sbGVjdGlvbnMsaWdfYW5kcm9pZF9saXZlX3NlZV9mZXdlcl92aWRlb3NfbGlrZV90aGlzX3VuaXZlcnNlLGlnX2FuZHJvaWRfc2hvd19uZXdfY29udGFjdF9pbXBvcnRfZGlhbG9nLGlnX2FuZHJvaWRfbGl2ZV92aWV3X3Byb2ZpbGVfZnJvbV9jb21tZW50c191bml2ZXJzZSxpZ19mYm5zX2Jsb2NrZWQsaWdfZm9ybWF0c19hbmRfZmVlZGJhY2tzX2hvbGRvdXRfdW5pdmVyc2UsaWdfYW5kcm9pZF9yZWR1Y2Vfdmlld19wYWdlcl9idWZmZXIsaWdfYW5kcm9pZF9pbnN0YXZpZGVvX3BlcmlvZGljX25vdGlmLGlnX3NlYXJjaF91c2VyX2F1dG9fY29tcGxldGVfY2FjaGVfc3luY190dGwsaWdfYW5kcm9pZF9tYXJhdWRlcl91cGRhdGVfZnJlcXVlbmN5LGlnX2FuZHJvaWRfc3VnZ2VzdF9wYXNzd29yZF9yZXNldF9vbl9vbmVjbGlja19sb2dpbixpZ19hbmRyb2lkX3Byb21vdGlvbl9lbnRyeV9mcm9tX2Fkc19tYW5hZ2VyX3VuaXZlcnNlLGlnX2FuZHJvaWRfbGl2ZV9zcGVjaWFsX2NvZGVjX3NpemVfbGlzdCxpZ19hbmRyb2lkX2VuYWJsZV9zaGFyZV90b19tZXNzZW5nZXIsaWdfYW5kcm9pZF9iYWNrZ3JvdW5kX21haW5fZmVlZF9mZXRjaCxpZ19hbmRyb2lkX2xpdmVfdmlkZW9fcmVhY3Rpb25zX2NyZWF0aW9uX3VuaXZlcnNlLGlnX2FuZHJvaWRfY2hhbm5lbHNfaG9tZSxpZ19hbmRyb2lkX3NpZGVjYXJfZ2FsbGVyeV91bml2ZXJzZSxpZ19hbmRyb2lkX3VwbG9hZF9yZWxpYWJpbGl0eV91bml2ZXJzZSxpZ19taWdyYXRlX21lZGlhdjJfdW5pdmVyc2UsaWdfYW5kcm9pZF9pbnN0YV92aWRlb19icm9hZGNhc3Rlcl9pbmZyYV9wZXJmLGlnX2FuZHJvaWRfYnVzaW5lc3NfY29udmVyc2lvbl9zb2NpYWxfY29udGV4dCxhbmRyb2lkX2lnX2ZibnNfa2lsbF9zd2l0Y2gsaWdfYW5kcm9pZF9saXZlX3dlYnJ0Y19saXZld2l0aF9jb25zdW1wdGlvbixpZ19hbmRyb2lkX2Rlc3Ryb3lfc3dpcGVfZnJhZ21lbnQsaWdfYW5kcm9pZF9yZWFjdF9uYXRpdmVfdW5pdmVyc2Vfa2lsbF9zd2l0Y2gsaWdfYW5kcm9pZF9zdG9yaWVzX2Jvb2tfdW5pdmVyc2UsaWdfYW5kcm9pZF9hbGxfdmlkZW9wbGF5YmFja19wZXJzaXN0aW5nX3NvdW5kLGlnX2FuZHJvaWRfZHJhd19lcmFzZXJfdW5pdmVyc2UsaWdfZGlyZWN0X3NlYXJjaF9uZXdfYm9vdHN0cmFwX2hvbGRvdXRfdW5pdmVyc2UsaWdfYW5kcm9pZF9jYWNoZV9sYXllcl9ieXRlc190aHJlc2hvbGQsaWdfYW5kcm9pZF9zZWFyY2hfaGFzaF90YWdfYW5kX3VzZXJuYW1lX3VuaXZlcnNlLGlnX2FuZHJvaWRfYnVzaW5lc3NfcHJvbW90aW9uLGlnX2FuZHJvaWRfZGlyZWN0X3NlYXJjaF9yZWNpcGllbnRzX2NvbnRyb2xsZXJfdW5pdmVyc2UsaWdfYW5kcm9pZF9hZF9zaG93X2Z1bGxfbmFtZV91bml2ZXJzZSxpZ19hbmRyb2lkX2FucndhdGNoZG9nLGlnX2FuZHJvaWRfcXBfa2lsbF9zd2l0Y2gsaWdfYW5kcm9pZF8yZmFjLGlnX2RpcmVjdF9ieXBhc3NfZ3JvdXBfc2l6ZV9saW1pdF91bml2ZXJzZSxpZ19hbmRyb2lkX3Byb21vdGVfc2ltcGxpZmllZF9mbG93LGlnX2FuZHJvaWRfc2hhcmVfdG9fd2hhdHNhcHAsaWdfYW5kcm9pZF9oaWRlX2JvdHRvbV9uYXZfYmFyX29uX2Rpc2NvdmVyX3Blb3BsZSxpZ19mYm5zX2R1bXBfaWRzLGlnX2FuZHJvaWRfaGFuZHNfZnJlZV9iZWZvcmVfcmV2ZXJzZSxpZ19hbmRyb2lkX3NreXdhbGtlcl9saXZlX2V2ZW50X3N0YXJ0X2VuZCxpZ19hbmRyb2lkX2xpdmVfam9pbl9jb21tZW50X3VpX2NoYW5nZSxpZ19hbmRyb2lkX2RpcmVjdF9zZWFyY2hfc3RvcnlfcmVjaXBpZW50c191bml2ZXJzZSxpZ19hbmRyb2lkX2RpcmVjdF9mdWxsX3NpemVfZ2FsbGVyeV91cGxvYWQsaWdfYW5kcm9pZF9hZF9icm93c2VyX2dlc3R1cmVfY29udHJvbCxpZ19jaGFubmVsX3NlcnZlcl9leHBlcmltZW50cyxpZ19hbmRyb2lkX3ZpZGVvX2NvdmVyX2ZyYW1lX2Zyb21fb3JpZ2luYWxfYXNfZmFsbGJhY2ssaWdfYW5kcm9pZF9hZF93YXRjaGluc3RhbGxfdW5pdmVyc2UsaWdfYW5kcm9pZF9hZF92aWV3YWJpbGl0eV9sb2dnaW5nX3VuaXZlcnNlLGlnX2FuZHJvaWRfbmV3X29wdGljLGlnX2FuZHJvaWRfZGlyZWN0X3Zpc3VhbF9yZXBsaWVzLGlnX2FuZHJvaWRfc3Rvcmllc19zZWFyY2hfcmVlbF9tZW50aW9uc191bml2ZXJzZSxpZ19hbmRyb2lkX3RocmVhZGVkX2NvbW1lbnRzX3VuaXZlcnNlLGlnX2FuZHJvaWRfbWFya19yZWVsX3NlZW5fb25fU3dpcGVfZm9yd2FyZCxpZ19pbnRlcm5hbF91aV9mb3JfbGF6eV9sb2FkZWRfbW9kdWxlc19leHBlcmltZW50LGlnX2ZibnNfc2hhcmVkLGlnX2FuZHJvaWRfY2FwdHVyZV9zbG93bW9fbW9kZSxpZ19hbmRyb2lkX2xpdmVfdmlld2Vyc19saXN0X3NlYXJjaF9iYXIsaWdfYW5kcm9pZF92aWRlb19zaW5nbGVfc3VyZmFjZSxpZ19hbmRyb2lkX29mZmxpbmVfcmVlbF9mZWVkLGlnX2FuZHJvaWRfdmlkZW9fZG93bmxvYWRfbG9nZ2luZyxpZ19hbmRyb2lkX2xhc3RfZWRpdHMsaWdfYW5kcm9pZF9leG9wbGF5ZXJfNDE0MixpZ19hbmRyb2lkX3Bvc3RfbGl2ZV92aWV3ZXJfY291bnRfcHJpdmFjeV91bml2ZXJzZSxpZ19hbmRyb2lkX2FjdGl2aXR5X2ZlZWRfY2xpY2tfc3RhdGUsaWdfYW5kcm9pZF9zbmlwcGV0c19oYXB0aWNfZmVlZGJhY2ssaWdfYW5kcm9pZF9nbF9kcmF3aW5nX21hcmtzX2FmdGVyX3VuZG9fYmFja2luZyxpZ19hbmRyb2lkX21hcmtfc2Vlbl9zdGF0ZV9vbl92aWV3ZWRfaW1wcmVzc2lvbixpZ19hbmRyb2lkX2xpdmVfYmFja2dyb3VuZGVkX3JlbWluZGVyX3VuaXZlcnNlLGlnX2FuZHJvaWRfbGl2ZV9oaWRlX3ZpZXdlcl9udXhfdW5pdmVyc2UsaWdfYW5kcm9pZF9saXZlX21vbm90b25pY19wdHMsaWdfYW5kcm9pZF9zZWFyY2hfdG9wX3NlYXJjaF9zdXJmYWNlX3VuaXZlcnNlLGlnX2FuZHJvaWRfdXNlcl9kZXRhaWxfZW5kcG9pbnQsaWdfYW5kcm9pZF9sb2NhdGlvbl9tZWRpYV9jb3VudF9leHBfaWcsaWdfYW5kcm9pZF9jb21tZW50X3R3ZWFrc191bml2ZXJzZSxpZ19hbmRyb2lkX2FkX3dhdGNobW9yZV9lbnRyeV9wb2ludF91bml2ZXJzZSxpZ19hbmRyb2lkX3RvcF9saXZlX25vdGlmaWNhdGlvbl91bml2ZXJzZSxpZ19hbmRyb2lkX2FkZF90b19sYXN0X3Bvc3QsaWdfc2F2ZV9pbnNpZ2h0cyxpZ19hbmRyb2lkX2xpdmVfZW5oYW5jZWRfZW5kX3NjcmVlbl91bml2ZXJzZSxpZ19hbmRyb2lkX2FkX2FkZF9jb3VudGVyX3RvX2xvZ2dpbmdfZXZlbnQsaWdfYW5kcm9pZF9ibHVlX3Rva2VuX2NvbnZlcnNpb25fdW5pdmVyc2UsaWdfYW5kcm9pZF9leG9wbGF5ZXJfc2V0dGluZ3MsaWdfYW5kcm9pZF9wcm9ncmVzc2l2ZV9qcGVnLGlnX2FuZHJvaWRfb2ZmbGluZV9zdG9yeV9zdGlja2VycyxpZ19hbmRyb2lkX2dxbHNfdHlwaW5nX2luZGljYXRvcixpZ19hbmRyb2lkX2NoYWluaW5nX2J1dHRvbl90b29sdGlwLGlnX2FuZHJvaWRfdmlkZW9fcHJlZmV0Y2hfZm9yX2Nvbm5lY3Rpdml0eV90eXBlLGlnX2FuZHJvaWRfdXNlX2V4b19jYWNoZV9mb3JfcHJvZ3Jlc3NpdmUsaWdfYW5kcm9pZF9zYW1zdW5nX2FwcF9iYWRnaW5nLGlnX2FuZHJvaWRfYWRfaG9sZG91dF93YXRjaGFuZG1vcmVfdW5pdmVyc2UsaWdfYW5kcm9pZF9vZmZsaW5lX2NvbW1lbnRpbmcsaWdfZGlyZWN0X3N0b3JpZXNfcmVjaXBpZW50X3BpY2tlcl9idXR0b24saWdfaW5zaWdodHNfZmVlZGJhY2tfY2hhbm5lbF91bml2ZXJzZSxpZ19hbmRyb2lkX2luc3RhX3ZpZGVvX2Ficl9yZXNpemUsaWdfYW5kcm9pZF9pbnN0YV92aWRlb19zb3VuZF9hbHdheXNfb24nJycKCVNJR19LRVlfVkVSU0lPTiA9ICc0JwoKCWRlZiBfX2luaXRfXyhzZWxmLHVzZXJuYW1lLHBhc3N3b3JkKToKCQlzZWxmLnVzZXJuYW1lPXVzZXJuYW1lCgkJc2VsZi5wYXNzd29yZD1wYXNzd29yZAoJCW0gPSBoYXNobGliLm1kNSgpCgkJbS51cGRhdGUodXNlcm5hbWUuZW5jb2RlKCd1dGYtOCcpICsgcGFzc3dvcmQuZW5jb2RlKCd1dGYtOCcpKQoJCXNlbGYuZGV2aWNlX2lkID0gc2VsZi5nZW5lcmF0ZURldmljZUlkKG0uaGV4ZGlnZXN0KCkpCgkJc2VsZi51dWlkID0gc2VsZi5nZW5lcmF0ZVVVSUQoVHJ1ZSkKCQlzZWxmLnMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKCglkZWYgZ2VuZXJhdGVEZXZpY2VJZChzZWxmLCBzZWVkKToKCQl2b2xhdGlsZV9zZWVkID0gIjEyMzQ1IgoJCW0gPSBoYXNobGliLm1kNSgpCgkJbS51cGRhdGUoc2VlZC5lbmNvZGUoJ3V0Zi04JykgKyB2b2xhdGlsZV9zZWVkLmVuY29kZSgndXRmLTgnKSkKCQlyZXR1cm4gJ2FuZHJvaWQtJyArIG0uaGV4ZGlnZXN0KClbOjE2XQoKCWRlZiBnZW5lcmF0ZVVVSUQoc2VsZiwgdHlwZSk6CgkJZ2VuZXJhdGVkX3V1aWQgPSBzdHIodXVpZC51dWlkNCgpKQoJCWlmICh0eXBlKToKCQkJcmV0dXJuIGdlbmVyYXRlZF91dWlkCgkJZWxzZToKCQkJcmV0dXJuIGdlbmVyYXRlZF91dWlkLnJlcGxhY2UoJy0nLCAnJykKCglkZWYgbG9naW5BUEkoc2VsZik6CgkJdG9rZW49c2VsZi5zLmdldCgiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vIixoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOfSkudGV4dAoJCWNyZl90b2tlbj1yZS5maW5kYWxsKHIiXCJjc3JmX3Rva2VuXCJcOlwiKC4qPylcIiIsIHN0cih0b2tlbikpWzBdCgkJc2VsZi5zLmhlYWRlcnMudXBkYXRlKHsnQ29ubmVjdGlvbic6ICdjbG9zZScsCgkJCSdBY2NlcHQnOiAnKi8qJywKCQkJJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnLAoJCQknQ29va2llMic6ICckVmVyc2lvbj0xJywKCQkJJ0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUycsCgkJCSdVc2VyLUFnZW50JzogVVNOfSkKCQlzZWxmLmRhdGEgPSBqc29uLmR1bXBzKHsKCQkJJ3Bob25lX2lkJzogc2VsZi5nZW5lcmF0ZVVVSUQoVHJ1ZSksCgkJCSdfY3NyZnRva2VuJzogY3JmX3Rva2VuLAoJCQkndXNlcm5hbWUnOiBzZWxmLnVzZXJuYW1lLAoJCQknZ3VpZCc6IHNlbGYudXVpZCwKCQkJJ2RldmljZV9pZCc6IHNlbGYuZGV2aWNlX2lkLAoJCQkncGFzc3dvcmQnOiBzZWxmLnBhc3N3b3JkLAoJCQknbG9naW5fYXR0ZW1wdF9jb3VudCc6ICcwJ30pCgkJc2VsZi5wYXlsb2FkID0gJ3NpZ25lZF9ib2R5PXt9Lnt9JmlnX3NpZ19rZXlfdmVyc2lvbj00Jy5mb3JtYXQoCgkJCXNlbGYuZ2VuZXJhdGVVVUlEKEZhbHNlKSwKCQkJdXJsbGliLnJlcXVlc3QucXVvdGUoc2VsZi5kYXRhKQoJCSkKCQl4PXNlbGYucy5wb3N0KCJodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvYWNjb3VudHMvbG9naW4vIiwgc2VsZi5wYXlsb2FkKQoJCXhfamFzb249anNvbi5sb2Fkcyh4LnRleHQpCgkJeF9rdWtpcz14LmNvb2tpZXMuZ2V0X2RpY3QoKQoJCWlmICJsb2dnZWRfaW5fdXNlciIgaW4geC50ZXh0OgoJCQlrdWtpPSI7Ii5qb2luKFt2KyI9Iit4X2t1a2lzW3ZdIGZvciB2IGluIHhfa3VraXNdKQoJCQkjaWQ9eF9qYXNvblsnbG9nZ2VkX2luX3VzZXInXVsncGsnXQoJCQkjbm09eF9qYXNvblsnbG9nZ2VkX2luX3VzZXInXVsnZnVsbF9uYW1lJ10KCQkJI3BuPXhfamFzb25bJ2xvZ2dlZF9pbl91c2VyJ11bJ3Bob25lX251bWJlciddCgkJCXJldHVybiB7J3N0YXR1cyc6J3N1Y2Nlc3MnLCdjb29raWUnOmt1a2ksJ3VzZXJhbWUnOnNlbGYudXNlcm5hbWV9CgkJZWxpZiAnY2hhbGxlbmdlX3JlcXVpcmVkJyBpbiB4LnRleHQ6CgkJCXJldHVybiB7J3N0YXR1cyc6J2NoZWNrcG9pbnQnfQoJCWVsc2U6CgkJCXJldHVybiB7J3N0YXR1cyc6J2xvZ2luX2Vycm9yJ30KQyA9ICcnCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBNRU5VIFRPT0xTIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwpjbGFzcyBpbnN0YWdyYW06CglkZWYgX19pbml0X18oc2VsZixleHRlcm5hbCx1c2VybmFtZSxjb29raWUpOgoJCXNlbGYuZXh0PWV4dGVybmFsCgkJc2VsZi51c2VybmFtZT11c2VybmFtZQoJCXNlbGYuY29va2llPWNvb2tpZQoJCXNlbGYucz1yZXF1ZXN0cy5TZXNzaW9uKCkKCWRlZiBsb2dvKHNlbGYpOgoJCWZvciBpIGluIGV4dGVybmFsOgoJCQl0cnk6CgkJCQluYW1hPWkuc3BsaXQoJ3wnKVswXQoJCQkJZm9sbG93ZXJzPWkuc3BsaXQoJ3wnKVsxXQoJCQkJZm9sbG93aW5nPWkuc3BsaXQoJ3wnKVsyXQoJCQlleGNlcHQ6CgkJCQlwYXNzCgkJCUJyYXlHYWdhaC5hcHBlbmQoUGFuZWwoZiJ7UDJ9bmFtYSAgICAgIDoge0gyfXtuYW1hfVxue1AyfXVzZXJuYW1lICA6IHtIMn17c2VsZi51c2VybmFtZX0iLHdpZHRoPTQ1LHBhZGRpbmc9KDAsMiksc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJCUJyYXlHYWdhaC5hcHBlbmQoUGFuZWwoZiJ7UDJ9cGVuZ2lrdXQgIDoge0gyfXtmb2xsb3dlcnN9XG57UDJ9bWVuZ2lrdXRpIDoge0gyfXtmb2xsb3dpbmd9Iix3aWR0aD00NSxwYWRkaW5nPSgwLDIpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCQljb25zb2xlLnByaW50KENvbHVtbnMoQnJheUdhZ2FoKSkKCQkJcHJpbnRzKFBhbmVsKGYie1AyfVNlbGFtYXQgRGF0YW5nIHtIMn17bmFtYX0ge1AyfUd1bmFrYW4gVG9vbHMgRGVuZ2FuIEJpamFrIDopIix3aWR0aD05MCxwYWRkaW5nPSgwLDkpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCQlwcmludHMoUGFuZWwoZiJ7UDJ9W1tib2xkIHB1cnBsZV0wMXtQMn1dLiBEdW1wIElkIFBlbmNhcmlhbiBOYW1hICAgICAgIHtQMn1bW2JvbGQgcHVycGxlXTA1e1AyfV0uIExpaGF0IEhhc2lsIENyYWNrXG57UDJ9W1tib2xkIHB1cnBsZV0wMntQMn1dLiBEdW1wIElkIFBlbmdpa3V0ICAgICAgICAgICAgIHtQMn1bW2JvbGQgcHVycGxlXTA2e1AyfV0uIEJvdCBBdXRvIFVuZm9sbG93XG57UDJ9W1tib2xkIHB1cnBsZV0wM3tQMn1dLiBEdW1wIElkIE1lbmdpa3V0aSAgICAgICAgICAgIHtQMn1bW2JvbGQgcHVycGxlXTA3e1AyfV0uIFJlcG9ydCBCdWcgU2NyaXB0XG57UDJ9W1tib2xkIHB1cnBsZV0wNHtQMn1dLiBDcmFjayBVbGFuZyBIYXNpbCBDcCAgICAgICAgIHtQMn1bW2JvbGQgcHVycGxlXTAwe1AyfV0uIEtlbHVhciBUb29scyIsd2lkdGg9OTAscGFkZGluZz0oMCw0KSxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCgkJCQoJZGVmIGhhcHVzX2xpc2Vuc2koc2VsZik6CgkJYXNrID0gaW5wdXQoZiIgW+KAol0gQXBha2FoIEFuZGEgWWFraW4gSW5naW4gTWVuZ2hhcHVzIExpc2Vuc2k/IFkvdCA6ICIpCgkJaWYgYXNrIGluIFsieSIsIlkiXTpvcy5zeXN0ZW0oInJtIC1yZiBkYXRhL2xpc2Vuc2kudHh0Iik7cHJpbnRzKFBhbmVsKGYie1AyfVN1Y2NlZWQgTWVuZ2hhcHVzIHtjb2xvcl9yaWNofSdMaXNlbnNpJ3tQMn0gVGVyaW1hIEthc2loIFRlbGFoIE1lbmdndW5ha2FuIFNjcmlwdCBCcmF5ZW5ubi1QcmVtIix3aWR0aD05MCxzdHlsZT1mImJvbGQgd2hpdGUiKSk7dGltZS5zbGVlcCgyKTtleGl0KCkKCQllbGlmIGFzayBpbiBbInQiLCJUIl06c2VsZi5tZW51KCkKCQllbHNlOnNlbGYuaGFwdXNfbGlzZW5zaSgpCgoJZGVmIEV4aXQoc2VsZik6CgkJeD1pbnB1dChmIiBb4oCiXSBBcGFrYWggQW5kYSBZYWtpbiBJbmdpbiBLZWx1YXI/IFkvdCA6ICIpCgkJaWYgeCBpbiBbInkiLCJZIl06b3Muc3lzdGVtKCJybSAtcmYgZGF0YS8ua3VraXMubG9nIHJtIC1yZiBkYXRhLy51c2VybmFtZSIpO3ByaW50cyhQYW5lbChmIntQMn1TdWNjZWVkIE1lbmdoYXB1cyB7Y29sb3JfcmljaH0nQ29va2llJyB7UDJ9VGVyaW1hIEthc2loIFRlbGFoIE1lbmdndW5ha2FuIFNjcmlwdCBCcmF5ZW5JbnN0YSIsd2lkdGg9OTAscGFkZGluZz0oMCwyKSxzdHlsZT1mImJvbGQgd2hpdGUiKSk7dGltZS5zbGVlcCgyKTtleGl0KCkKCQllbGlmIHggaW4gWyJ0IiwiVCJdOnNlbGYubWVudSgpIAoJCWVsc2U6c2VsZi5tZW51KCkKCglkZWYgc2l4QVBJKHNlbGYsc2l4X2lkKToKCQl1cmwgPSAiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vd2ViL3NlYXJjaC90b3BzZWFyY2gvP2NvbnRleHQ9YmxlbmRlZCZxdWVyeT0iK3NpeF9pZCsiJnJhbmtfdG9rZW49MC4zOTUzNTkyMzE4MjcwODkzJmNvdW50PTEiCgkJeCA9IHJlcXVlc3RzLmdldCh1cmwpCgkJeF9qYXNvbiA9IHguanNvbigpCgkJdWlkID0gc3RyKCB4X2phc29uWyd1c2VycyddWzBdLmdldCgidXNlciIpLmdldCgicGsiKSApCgkJcmV0dXJuIHVpZAoKCWRlZiB1bmZvbGxvd0FQSShzZWxmLHVzZXJfaWQsdXNlcm5hbWVfaWQsY29va2llKToKCQl1dWlkPXNlbGYuZ2VuZXJhdGVVVUlEKFRydWUpCgkJeHg9c2VsZi5zLmdldCgiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vIixoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOfSkuY29udGVudAoJCWNyZl90b2tlbiA9IHJlLmZpbmRhbGwoJ3siY29uZmlnIjp7ImNzcmZfdG9rZW4iOiIoLiopIiwidmlld2VyIicsc3RyKHh4KSlbMF0KCQlzLmhlYWRlcnMudXBkYXRlKHsnQ29ubmVjdGlvbic6ICdjbG9zZScsCiAgICAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICcqLyonLAogICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04JywKICAgICAgICAgICAgICAgICAgICAgICAnQ29va2llMic6ICckVmVyc2lvbj0xJywKICAgICAgICAgICAgICAgICAgICAgICAnQWNjZXB0LUxhbmd1YWdlJzogJ2VuLVVTJywKICAgICAgICAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6IFVTTn0pCgoJCWRhdGEgPSBqc29uLmR1bXBzKHsnX3V1aWQnOiB1dWlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAnX3VpZCc6IHVzZXJuYW1lX2lkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAndXNlcl9pZCc6IHVzZXJfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICdfY3NyZnRva2VuJzogY3JmX3Rva2VufSkKCgkJc2VsZi5wYXlsb2FkID0gJ3NpZ25lZF9ib2R5PXt9Lnt9JmlnX3NpZ19rZXlfdmVyc2lvbj00Jy5mb3JtYXQoCgkJCXNlbGYuZ2VuZXJhdGVVVUlEKEZhbHNlKSwKCQkJdXJsbGliLnJlcXVlc3QucXVvdGUoZGF0YSkpCgkJcmV0dXJuIHMucG9zdCgnaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL2ZyaWVuZHNoaXBzL2Rlc3Ryb3kvJXMvJyUodXNlcl9pZCksc2VsZi5wYXlsb2FkLGNvb2tpZXM9Y29va2llKS50ZXh0CgoKCWRlZiBzZWFyY2hBUEkoc2VsZixjb29raWUsbmFtYSk6CgkJdHJ5OgoJCQl4PXMuZ2V0KCdodHRwczovL2kuaW5zdGFncmFtLmNvbS93ZWIvc2VhcmNoL3RvcHNlYXJjaC8/Y291bnQ9MTAwMDAwJmNvbnRleHQ9YmxlbmRlZCZxdWVyeT0lcyZyYW5rX3Rva2VuPTAuMjE2NjM3Nzc1OTA0MjIxMDYmaW5jbHVkZV9yZWVsPXRydWUnJShuYW1hKSxjb29raWVzPWNvb2tpZSxoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOfSkKCQkJeF9qYXNvbj1qc29uLmxvYWRzKHgudGV4dCkKCQkJZm9yIGkgaW4geF9qYXNvblsndXNlcnMnXToKCQkJCXVzZXI9aVsndXNlciddCgkJCQl1c2VybmFtZT11c2VyWyd1c2VybmFtZSddCgkJCQlmdWxsbmFtZT11c2VyWydmdWxsX25hbWUnXQoJCQkJaW50ZXJuYWwuYXBwZW5kKGYne3VzZXJuYW1lfXx7ZnVsbG5hbWV9JykKCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCXByaW50cyhQYW5lbChmJ3tQMn1rb25la3NpIGludGVybmV0IGFuZGEgYmVybWFzYWxhaCBzaWxhaGthbiBjZWsgZGFuIGNvYmEgbGFnaSBtYXN1ayBrZSB0b29scycsd2lkdGg9OTAsc3R5bGU9ZiJib2xkIHdoaXRlIikpO3RpbWUuc2xlZXAoMyk7ZXhpdCgpCgkJcmV0dXJuIGludGVybmFsCgoJZGVmIGlkQVBJKHNlbGYsY29va2llLGlkKToKCQlpZiAnc3Vrc2VzJyBpbiBsaXNlbnNpa3U6CgkJCXRyeToKCQkJCW09cy5nZXQoImh0dHBzOi8vaS5pbnN0YWdyYW0uY29tL2FwaS92MS91c2Vycy93ZWJfcHJvZmlsZV9pbmZvLz91c2VybmFtZT0lcyIlKGlkKSxjb29raWVzPWNvb2tpZSxoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOLCJ4LWlnLWFwcC1pZCI6JzkzNjYxOTc0MzM5MjQ1OSd9KQoJCQkJbV9qYXNvbj1tLmpzb24oKVsiZGF0YSJdWyJ1c2VyIl0KCQkJCWlkeD1tX2phc29uWyJpZCJdCgkJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKCQkJCXByaW50cyhQYW5lbChmJ3tQMn1rb25la3NpIGludGVybmV0IGFuZGEgYmVybWFzYWxhaCBzaWxhaGthbiBjZWsgZGFuIGNvYmEgbGFnaSBtYXN1ayBrZSB0b29scycsd2lkdGg9OTAsc3R5bGU9ZiJib2xkIHdoaXRlIikpO3RpbWUuc2xlZXAoMyk7ZXhpdCgpCgkJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCQkJCXByaW50cyhQYW5lbChmJ3tQMn1Vc2VybmFtZSBZYW5nIEFuZGEgTWFzdWthbiBUaWRhayBEaSBUZW11a2FuIEF0YXUgQWt1biBQcml2YXRlJyx3aWR0aD05MCxwYWRkaW5nPSgwLDcpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTtleGl0KCkKCQkJcmV0dXJuIGlkeAoJCWVsc2U6bGlzZW5zaSgpCiAgIAogICAJCglkZWYgaW5nZm8oc2VsZixjb29raWUpOgoJCXRyeToKCQkJbGluayA9IHMuZ2V0KGYiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL2FjY291bnRzL2VkaXQvd2ViX2Zvcm1fZGF0YS8iLCBoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOfSxjb29raWVzPXsiY29va2llIjpjb29raWV9KS5qc29uKClbImZvcm1fZGF0YSJdCgkJCW5vbW9yID0gbGlua1sicGhvbmVfbnVtYmVyIl0ucmVwbGFjZSgiLSIsICIiKS5yZXBsYWNlKCIgIiwgIiIpCgkJCXRnZ2wgPSBsaW5rWyJiaXJ0aGRheSJdCgkJCXllYXIsIG1vbnRoLCBkYXkgPSB0Z2dsLnNwbGl0KCItIikKCQkJbW9udGggPSBidWxhbl90dGxbbW9udGhdCgkJCXRhbmdnYWwgPSAoZiJ7ZGF5fSB7bW9udGh9IHt5ZWFyfSIpCgkJZXhjZXB0OgoJCQlub21vciA9ICItIgoJCQl0YW5nZ2FsID0gIi0iCgkJcmV0dXJuIG5vbW9yLCB0YW5nZ2FsCgkKCWRlZiBpbmZvQVBJKHNlbGYsY29va2llLGFwaSxpZCk6CgkJaWYgJ3N1a3NlcycgaW4gIGxpc2Vuc2lrdToKCQkJdHJ5OgoJCQkJeD1zLmdldChhcGklKGlkKSxjb29raWVzPWNvb2tpZSxoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOfSkKCQkJCXhfamFzb249anNvbi5sb2Fkcyh4LnRleHQpCgkJCQlmb3IgaSBpbiB4X2phc29uWyd1c2VycyddOgoJCQkJCXVzZXJuYW1lID0gaVsidXNlcm5hbWUiXQoJCQkJCW5hbWEgPSBpWyJmdWxsX25hbWUiXQoJCQkJCWludGVybmFsLmFwcGVuZChmJ3t1c2VybmFtZX18e25hbWF9JykKCQkJCQlmb2xsb3dpbmcuYXBwZW5kKHVzZXJuYW1lKQoJCQkJaWYgJ3Blbmdpa3V0JyBpbiBtZW51ZHVtcDoKCQkJCQltYXhpZD14X2phc29uWyduZXh0X21heF9pZCddCgkJCQkJZm9yIHogaW4gcmFuZ2UgKDk5OTkpOgoJCQkJCQl4PXMuZ2V0KCdodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvZnJpZW5kc2hpcHMvJytpZCsnL2ZvbGxvd2Vycy8/Y291bnQ9MTAwJm1heF9pZD0nK21heGlkLGNvb2tpZXM9Y29va2llLGhlYWRlcnM9eyJ1c2VyLWFnZW50IjpVU059KQoJCQkJCQl4X2phc29uPWpzb24ubG9hZHMoeC50ZXh0KQoJCQkJCQl0cnk6CgkJCQkJCQlmb3IgaSBpbiB4X2phc29uWyd1c2VycyddOgoJCQkJCQkJCXVzZXJuYW1lID0gaVsidXNlcm5hbWUiXQoJCQkJCQkJCW5hbWEgPSBpWyJmdWxsX25hbWUiXQoJCQkJCQkJCWludGVybmFsLmFwcGVuZChmJ3t1c2VybmFtZX18e25hbWF9JykKCQkJCQkJCQlmb2xsb3dpbmcuYXBwZW5kKHVzZXJuYW1lKQoJCQkJCQkJdHJ5OgoJCQkJCQkJCW1heGlkPXhfamFzb25bJ25leHRfbWF4X2lkJ10KCQkJCQkJCWV4Y2VwdDoKCQkJCQkJCQlicmVhawoJCQkJCQlleGNlcHQ6CgkJCQkJCQlpZiAnY2hhbGxlbmdlJyBpbiB4LnRleHQ6CgkJCQkJCQkJYnJlYWsKCQkJCQkJCWVsc2U6CgkJCQkJCQkJY29udGludWUKCQkJCWVsc2U6cGFzcwoJCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCQlwcmludHMoUGFuZWwoZid7UDJ9S29uZWtzaSBJbnRlcm5ldCBBbmRhIEJlcm1hc2FsYWggU2lsYWhrYW4gQ2VrIERhbiBDb2JhIExhZ2kgTWFzdWsgS2UgVG9vbHMnLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTt0aW1lLnNsZWVwKDMpO2V4aXQoKQoJCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6CgkJCQlwcmludHMoUGFuZWwoZid7UDJ9VXNlcm5hbWUgWWFuZyBBbmRhIE1hc3VrYW4gVGlkYWsgRGkgVGVtdWthbiBBdGF1IEFrdW4gUHJpdmF0ZScsd2lkdGg9OTAscGFkZGluZz0oMCw3KSxzdHlsZT1mImJvbGQgd2hpdGUiKSk7ZXhpdCgpCgkJCXJldHVybiBpbnRlcm5hbAoJCWVsc2U6bGlzZW5zaSgpCgkJCglkZWYgaWZvQVBJKHNlbGYsY29va2llLGFwaSxpZCk6CgkJaWYgJ3N1a3NlcycgaW4gIGxpc2Vuc2lrdToKCQkJdHJ5OgoJCQkJeD1zLmdldChhcGklKGlkKSxjb29raWVzPWNvb2tpZSxoZWFkZXJzPXsidXNlci1hZ2VudCI6QnJheWVubm5YRCgpfSkKCQkJCXhfamFzb249anNvbi5sb2Fkcyh4LnRleHQpCgkJCQlmb3IgaSBpbiB4X2phc29uWyd1c2VycyddOgoJCQkJCXVzZXJuYW1lID0gaVsidXNlcm5hbWUiXQoJCQkJCW5hbWEgPSBpWyJmdWxsX25hbWUiXQoJCQkJCWludGVybmFsLmFwcGVuZChmJ3t1c2VybmFtZX18e25hbWF9JykKCQkJCQlmb2xsb3dpbmcuYXBwZW5kKHVzZXJuYW1lKQoJCQkJaWYgJ21lbmdpa3V0aScgaW4gbWVudWR1bXA6CgkJCQkJbWF4aWQ9eF9qYXNvblsnbmV4dF9tYXhfaWQnXQoJCQkJCWZvciB6IGluIHJhbmdlICg5OTk5KToKCQkJCQkJeD1zLmdldCgnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hcGkvdjEvZnJpZW5kc2hpcHMvJytpZCsnL2ZvbGxvd2luZy8/Y291bnQ9MTAwJm1heF9pZD0nK21heGlkLGNvb2tpZXM9Y29va2llLGhlYWRlcnM9eyJ1c2VyLWFnZW50IjpCcmF5ZW5ublhEKCl9KQoJCQkJCQl4X2phc29uPWpzb24ubG9hZHMoeC50ZXh0KQoJCQkJCQl0cnk6CgkJCQkJCQlmb3IgaSBpbiB4X2phc29uWyd1c2VycyddOgoJCQkJCQkJCXVzZXJuYW1lID0gaVsidXNlcm5hbWUiXQoJCQkJCQkJCW5hbWEgPSBpWyJmdWxsX25hbWUiXQoJCQkJCQkJCWludGVybmFsLmFwcGVuZChmJ3t1c2VybmFtZX18e25hbWF9JykKCQkJCQkJCQlmb2xsb3dpbmcuYXBwZW5kKHVzZXJuYW1lKQoJCQkJCQkJdHJ5OgoJCQkJCQkJCW1heGlkPXhfamFzb25bJ25leHRfbWF4X2lkJ10KCQkJCQkJCWV4Y2VwdDoKCQkJCQkJCQlicmVhawoJCQkJCQlleGNlcHQ6CgkJCQkJCQlpZiAnY2hhbGxlbmdlJyBpbiB4LnRleHQ6CgkJCQkJCQkJYnJlYWsKCQkJCQkJCWVsc2U6CgkJCQkJCQkJY29udGludWUKCQkJCWVsc2U6cGFzcwoJCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6CgkJCQlwcmludHMoUGFuZWwoZid7UDJ9S29uZWtzaSBJbnRlcm5ldCBBbmRhIEJlcm1hc2FsYWggU2lsYWhrYW4gQ2VrIERhbiBDb2JhIExhZ2kgTWFzdWsgS2UgVG9vbHMnLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTt0aW1lLnNsZWVwKDMpO2V4aXQoKQoJCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6CgkJCQlwcmludHMoUGFuZWwoZid7UDJ9VXNlcm5hbWUgWWFuZyBBbmRhIE1hc3VrYW4gVGlkYWsgRGkgVGVtdWthbiBBdGF1IEFrdW4gUHJpdmF0ZScsd2lkdGg9OTAscGFkZGluZz0oMCw3KSxzdHlsZT1mImJvbGQgd2hpdGUiKSk7ZXhpdCgpCgkJCXJldHVybiBpbnRlcm5hbAoJCWVsc2U6bGlzZW5zaSgpCgkJCiMtLS0tLS0tLS0tLS0tLS0tLS1bIFBJTElIIE1FVE9ERSBBTkQgUEFTU1dPUkQgXS0tLS0tLS0tLS0tLS0tLS0tLS0jCglkZWYgaWZvKHNlbGYpOgoJCXVydXQgPSBbXQoJCXVydXQuYXBwZW5kKFBhbmVsKGYie1AyfVtbYm9sZCBwdXJwbGVdMDF7UDJ9XSBNZXRob2RlIEFQSSAiLHBhZGRpbmc9KDAsMTEpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCXVydXQuYXBwZW5kKFBhbmVsKGYie1AyfVtbYm9sZCBwdXJwbGVdMDJ7UDJ9XSBNZXRob2RlIEFKQVgiLHBhZGRpbmc9KDAsMTEpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCWNvbnNvbGUucHJpbnQoQ29sdW1ucyh1cnV0KSkKCQkKCWRlZiBwYXNzd29yZEFQSShzZWxmLHhueCk6CgkJcHJpbnRzKFBhbmVsKGYie1AyfSAgIFRvdGFsIFVzZXJuYW1lIFRlcmt1bXB1bCA6IHtjb2xvcl9yaWNofXtsZW4oaW50ZXJuYWwpfSIsd2lkdGg9OTAscGFkZGluZz0oMCwyMCksc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJc2VsZi5pZm8oKQoJCXUgPSBpbnB1dChmJyBb4oCiXSBQaWxpaCBNZXRvZGU6ICcpCgkJaWYgdSBpbiBbIjEiLCIwMSJdOgoJCQltZXRob2QuYXBwZW5kKCdzYXR1JykKCQllbGlmIHUgaW4gWyIyIiwiMDIiXToKCQkJbWV0aG9kLmFwcGVuZCgnZHVhJykKCQllbHNlOgoJCQltZXRob2QuYXBwZW5kKCdzYXR1JykKCQlwcmludHMoUGFuZWwoZiJ7UDJ9W1tib2xkIHB1cnBsZV0wMXtQMn1dIE5hbWUsTmFtZTEyMyxOYW1lMTIzNFxuW1tib2xkIHB1cnBsZV0wMntQMn1dIE5hbWUsTmFtZTEyMyxOYW1lMTIzNCxOYW1lMTIzNDVcbltbYm9sZCBwdXJwbGVdMDN7UDJ9XSBOYW1lLE5hbWUxMjMsTmFtZTEyMzQsTmFtZTEyMzQ1LE5hbWUxMjM0NTZcbltbYm9sZCBwdXJwbGVdMDR7UDJ9XSBOYW1lLE5hbWUxMixOYW1lMTIzLE5hbWUxMjM0LE5hbWUxMjM0NSxOYW1lMTIzNDU2XG5bW2JvbGQgcHVycGxlXTA1e1AyfV0gUGFzc3dvcmQgTWFudWFsIix3aWR0aD05MCxwYWRkaW5nPSgwLDMpLHRpdGxlPSdMaXN0IFBhc3N3b3JkJyxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCQljPWlucHV0KGYne059IFvigKJdIE1hc3VrYW4gUGlsaWhhbiA6e0N9ICcpCgkJaWYgYyBpbiBbJzEnLCcwMSddOgoJCQlzZWxmLmdlbmVyYXRlQVBJKHhueCxjKQoJCWVsaWYgYyBpbiBbJzInLCcwMiddOgoJCQlzZWxmLmdlbmVyYXRlQVBJKHhueCxjKQoJCWVsaWYgYyBpbiBbJzMnLCcwMyddOgoJCQlzZWxmLmdlbmVyYXRlQVBJKHhueCxjKQoJCWVsaWYgYyBpbiBbJzQnLCcwNCddOgoJCQlzZWxmLmdlbmVyYXRlQVBJKHhueCxjKQoJCWVsaWYgYyBpbiBbJzUnLCcwNSddOgoJCQlwcmludHMoUGFuZWwoZiJ7UDJ9TWFzdWthbiBQYXNzd29yZCBNYW51YWwgTWluaW1hbCBQYXNzd29yZCA2IEthcmFrdGVyIEphbmdhbiBTYW1wZSBLdXJhbmdcbkNvbnRvaCBQYXNzd29yZCA6IEluZG9uZXNpYSxCZW5na3VsdTEyMyxQYXB1YTEyMzQiLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCQl6eD1pbnB1dChmJyBb4oCiXSBNYXN1a2FuIFBhc3N3b3JkIDogJykKCQkJc2VsZi5nZW5lcmF0ZUFQSSh4bngsYyx6eCkKCQllbHNlOgoJCQlzZWxmLnBhc3N3b3JkQVBJKHhueCkKCQkJCglkZWYgZ2VuZXJhdGVBUEkoc2VsZix1c2VyLG8seng9JycpOgoJCWdsb2JhbCBwcm9nLGRlcwoJCXh4a29udG9sLmFwcGVuZChQYW5lbChmIiIie0gyfUhhc2lsIE9LIFRlciBTaW1wYW4gRGkge1AyfTp7UDJ9e2RheX0udHh0IiIiLHdpZHRoPTQ1LHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCXh4a29udG9sLmFwcGVuZChQYW5lbChmIiIie0syfUhhc2lsIENQIFRlciBTaW1wYW4gRGkge1AyfTp7UDJ9e2RheX0udHh0IiIiLHdpZHRoPTQ1LHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCWNvbnNvbGUucHJpbnQoQ29sdW1ucyh4eGtvbnRvbCkpCgkJcHJpbnRzKFBhbmVsKGYie1AyfSAgICAgICAgICAgQ3JhY2sgRGkgTXVsYWkgVGVrYW4ge2NvbG9yX3JpY2h9J0N0cmwrWid7UDJ9IERpIEtleWJvYXJkIEFuZGEgSmlrYSBJbmdpbiBCZXJoZW50aVxuXG4gICAgICAgICAgICAgICAgICB7UDJ9SGlkdXBrYW4gTW9kZSBQZXNhd2F0IDUgRGV0aWsgSmlrYSBUZXJkZXRla3NpIFNwYW0gSVAiLHdpZHRoPTkwLHBhZGRpbmc9KDAsNCksc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJYW5pbXMgPSByYW5kb20uY2hvaWNlKFsiY2xvY2siLCJzbWlsZXkiLCJtb25rZXkiLCJtb29uIiwiZWFydGgiXSkKCQlwcm9nID0gUHJvZ3Jlc3MoU3Bpbm5lckNvbHVtbihmJ3thbmltc30nKSxUZXh0Q29sdW1uKCd7dGFzay5kZXNjcmlwdGlvbn0nKSxCYXJDb2x1bW4oKSxUZXh0Q29sdW1uKCd7dGFzay5wZXJjZW50YWdlOi4wZn0lJykpCgkJZGVzID0gcHJvZy5hZGRfdGFzaygnJyx0b3RhbD1sZW4oaW50ZXJuYWwpKQoJCXdpdGggcHJvZzoKCQkJd2l0aCBUaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MTUpIGFzIHNoaW5rYWk6CgkJCQlmb3IgaSBpbiB1c2VyOgoJCQkJCXRyeToKCQkJCQkJdXNlcm5hbWU9aS5zcGxpdCgifCIpWzBdCgkJCQkJCXBhc3N3b3JkPWkuc3BsaXQoInwiKVsxXS5sb3dlcigpCgkJCQkJCWZvciB3IGluIHBhc3N3b3JkLnNwbGl0KCIgIik6CgkJCQkJCQlpZiBsZW4odyk8MzoKCQkJCQkJCQljb250aW51ZQoJCQkJCQkJZWxzZToKCQkJCQkJCQl3PXcubG93ZXIoKQoJCQkJCQkJCWlmIG89PSIxIjoKCQkJCQkJCQkJaWYgbGVuKHcpPT0zIG9yIGxlbih3KT09NCBvciBsZW4odyk9PTU6CgkJCQkJCQkJCQlzYW5kaT1bdyx3KycxMjMnLHcrJzEyMzQnLHcrJzMyMSddCgkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQlzYW5kaT1bdyx3KycxMjMnLHcrJzEyMzQnLHcrJzMyMSddCgkJCQkJCQkJZWxpZiBvPT0iMiI6CgkJCQkJCQkJCWlmIGxlbih3KT09MyBvciBsZW4odyk9PTQgb3IgbGVuKHcpPT01OgoJCQkJCQkJCQkJc2FuZGk9W3csdysnMTIzJyx3KycxMjM0Jyx3KycxMjM0NSddCgkJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCQlzYW5kaT1bdyx3KycxMjMnLHcrJzEyMzQnLHcrJzEyMzQ1JywgcGFzc3dvcmQubG93ZXIoKV0KCQkJCQkJCQllbGlmIG89PSIzIjoKCQkJCQkJCQkJaWYgbGVuKHcpPT0zIG9yIGxlbih3KT09NCBvciBsZW4odyk9PTU6CgkJCQkJCQkJCQlzYW5kaT1bdyx3KycxMjMnLHcrJzEyMzQnLHcrJzMyMScsdysnNDMyMScsdysnMTIzNDUnLHcrJzEyMzQ1NicscGFzc3dvcmQubG93ZXIoKV0KCQkJCQkJCQkJZWxzZToKCQkJCQkJCQkJCXNhbmRpPVt3LHcrJzEyMycsdysnMTIzNCcsdysnMzIxJyx3Kyc0MzIxJyx3KycxMjM0NScsdysnMTIzNDU2JyxwYXNzd29yZC5sb3dlcigpXQoJCQkJCQkJCWVsaWYgbz09IjQiOgoJCQkJCQkJCQlpZiBsZW4odyk9PTMgb3IgbGVuKHcpPT00IG9yIGxlbih3KT09NToKCQkJCQkJCQkJCXNhbmRpPVt3LHcrJzEyMycsdysnMTIzNCcsdysnMTInLHcrJzMyMScsdysnMjM0Jyx3Kyc0MzIxJyx3KycxMjM0NScsdysnMTIzNDU2Jyx3KycxMjM0NTY3JyxwYXNzd29yZC5sb3dlcigpXQoJCQkJCQkJCQllbHNlOgoJCQkJCQkJCQkJc2FuZGk9W3csdysnMTIzJyx3KycxMjM0Jyx3KycxJyx3KycyJyx3KyczMjEnLHcrJzQzMjEnLHcrJzEyMzQ1Jyx3KycxMjM0NTYnLHBhc3N3b3JkLmxvd2VyKCldCgkJCQkJCQkJZWxpZiBvPT0iNSI6CgkJCQkJCQkJCWlmIGxlbih6eCkgPiAzOgoJCQkJCQkJCQkJc2FuZGkgPSB6eC5yZXBsYWNlKCIgIiwgIiIpLnNwbGl0KCIsIikKCQkJCQkJCWlmICdzYXR1JyBpbiBtZXRob2Q6CgkJCQkJCQkJc2hpbmthaS5zdWJtaXQoc2VsZi5jcmFja0FQSSx1c2VybmFtZSxzYW5kaSkKCQkJCQkJCWVsaWYgJ2R1YScgaW4gbWV0aG9kOgoJCQkJCQkJCXNoaW5rYWkuc3VibWl0KHNlbGYubmV3LHVzZXJuYW1lLHNhbmRpKQojCQkJCQkJCQkJCWJyZWFrCiMJCQkJCXNoaW5rYWkuc3VibWl0KHNlbGYuY3JhY2tBUEksdXNlcm5hbWUsc2FuZGkpCgkJCQkJZXhjZXB0OgoJCQkJCQlwYXNzCgkJcHJpbnRzKFBhbmVsKGYiICB7UDJ9Q3JhY2sge2NvbG9yX3JpY2h9e2xlbihpbnRlcm5hbCl9IHtQMn1Vc2VybmFtZSBTZWxlc2FpIEhhc2lsIE9LIDoge0gyfXtsZW4oc3VjY2Vzcyl9e1AyfSBIYXNpbCBDUCA6IHtLMn17bGVuKGNoZWNrcG9pbnQpfXtQMn0gIix3aWR0aD05MCxwYWRkaW5nPSgwLDgpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTt0aW1lLnNsZWVwKDQpO2V4aXQoKQoKCWRlZiBBUElpbmZvKHNlbGYsdXNlcik6CgkJdHJ5OgoJCQl4PXMuZ2V0KCJodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvdXNlcnMvd2ViX3Byb2ZpbGVfaW5mby8/dXNlcm5hbWU9JXMiJSh1c2VyKSxoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOLCJ4LWlnLWFwcC1pZCI6JzkzNjYxOTc0MzM5MjQ1OSd9KQoJCQl4X2phc29uPXguanNvbigpWyJkYXRhIl1bInVzZXIiXQoJCQluYW1hPXhfamFzb25bImZ1bGxfbmFtZSJdCgkJCXBlbmdpa3V0PXhfamFzb25bImVkZ2VfZm9sbG93ZWRfYnkiXVsiY291bnQiXQoJCQltZW5naWt1dD14X2phc29uWyJlZGdlX2ZvbGxvdyJdWyJjb3VudCJdCgkJCXBvc3Rpbmdhbj14X2phc29uWyJlZGdlX293bmVyX3RvX3RpbWVsaW5lX21lZGlhIl1bImNvdW50Il0KCQlleGNlcHQ6CgkJCXBhc3MKCgkJcmV0dXJuIG5hbWEscGVuZ2lrdXQsbWVuZ2lrdXQscG9zdGluZ2FuCgojLS0tLS0tLS0tLS0tLS0tLS0tWyBNRVRPREUgQVBJIFYxIF0tLS0tLS0tLS0tLS0tLS0tLS0tIwoJZGVmIGNyYWNrQVBJKHNlbGYsdXNlcixwYXMpOgoJCWdsb2JhbCBsb29wLHN1Y2Nlc3MsY2hlY2twb2ludAoJCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkKCQl1YSA9IHJhbmRvbS5jaG9pY2UoVXNlckJyYXlDcmFjaykKCQlwcm9nLnVwZGF0ZShkZXMsZGVzY3JpcHRpb249ZiJ7SDJ9W0FQSV17UDJ9IHtsb29wfS97bGVuKGludGVybmFsKX0gT0stOntIMn17bGVuKHN1Y2Nlc3MpfXtQMn0gQ1AtOntLMn17bGVuKGNoZWNrcG9pbnQpfXtQMn0iKQoJCXByb2cuYWR2YW5jZShkZXMpCgkJdHJ5OgoJCQlmb3IgcHcgaW4gcGFzOgoJCQkJYnJheWVubm54ZD1yYW5kb20ucmFuZGludCgxMDAwMDAwMDAwLCA5OTk5OTk5OTk5OSkKCQkJCXRzID0gY2FsZW5kYXIudGltZWdtKGN1cnJlbnRfR01UKQoJCQkJcHJveHkgPSB7J2h0dHAnOiAnc29ja3M1Oi8vJytyYW5kb20uY2hvaWNlKHByb3h4eSl9CgkJCQlwID0gc2VzLmdldCgnaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL3dlYi9hY2NvdW50cy9sb2dpbi9hamF4LycpCgkJCQloZWFkID0gewogICAgICAgICAgICAgICAgICAgICdIb3N0JzogJ2kuaW5zdGFncmFtLmNvbScsCiAgICAgICAgICAgICAgICAgICAgJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsCiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtTGVuZ3RoJzogJzMxNCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlYy1jaC11YSc6ICciIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iMTAxIicsCiAgICAgICAgICAgICAgICAgICAgJ1gtSUctQXBwLUlEJzogJzEyMTc5ODE2NDQ4Nzk2MjgnLAogICAgICAgICAgICAgICAgICAgICdYLUlHLVdXVy1DbGFpbSc6ICcwJywKICAgICAgICAgICAgICAgICAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsCiAgICAgICAgICAgICAgICAgICAgJ1gtSW5zdGFncmFtLUFKQVgnOiAnOGE1MDE2NzcwZDVjJywKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICcqLyonLAogICAgICAgICAgICAgICAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICAgICAgICAgICAgICAgICAgICAnWC1BU0JELUlEJzogJzE5ODM4NycsCiAgICAgICAgICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiB1YSwKICAgICAgICAgICAgICAgICAgICAnWC1DU1JGVG9rZW4nOiBwLmNvb2tpZXNbJ2NzcmZ0b2tlbiddLAogICAgICAgICAgICAgICAgICAgICdzZWMtY2gtdWEtcGxhdGZvcm0nOiAnIkFuZHJvaWQiJywKICAgICAgICAgICAgICAgICAgICAnT3JpZ2luJzogJ2h0dHBzOi8vaS5pbnN0YWdyYW0uY29tJywKICAgICAgICAgICAgICAgICAgICAnU2VjLUZldGNoLVNpdGUnOiAnc2FtZS1vcmlnaW4nLAogICAgICAgICAgICAgICAgICAgICdTZWMtRmV0Y2gtTW9kZSc6ICdjb3JzJywKICAgICAgICAgICAgICAgICAgICAnU2VjLUZldGNoLURlc3QnOiAnZW1wdHknLAogICAgICAgICAgICAgICAgICAgICdSZWZlcmVyJzogJ2h0dHBzOi8vaS5pbnN0YWdyYW0uY29tLycsCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdC1FbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICdpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyxydTtxPTAuNixqdjtxPTAuNSd9CgkJCQlkYXRhID0gewoJCQkJICAgICJlbmNfcGFzc3dvcmQiOiBmIiNQV0RfSU5TVEFHUkFNX0JST1dTRVI6MDp7dHN9Ontwd30iLAoJCQkJICAgICJ1c2VybmFtZSI6IHVzZXIsCgkJCQkgICAgInF1ZXJ5UGFyYW1zIjogInt9IiwKCQkJCSAgICAib3B0SW50b09uZVRhcCI6ICdmYWxzZScsCgkJCQkgICAgInN0b3BEZWxldGlvbk5vbmNlIjogIiIsCgkJCQkgICAgInRydXN0ZWREZXZpY2VSZWNvcmRzIjogInt9In0KCQkJCXJlc3Bvbj1zZXMucG9zdCgiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL3dlYi9hY2NvdW50cy9sb2dpbi9hamF4LyIsIGhlYWRlcnMgPSBoZWFkLCBkYXRhID0gZGF0YSwgcHJveGllcyA9IHByb3h5LCBhbGxvd19yZWRpcmVjdHMgPSBGYWxzZSkKCQkJCWJyYXllbm5ueGQ9anNvbi5sb2FkcyhyZXNwb24udGV4dCkKCQkJCWlmICd1c2VySWQnIGluIHN0cihicmF5ZW5ubnhkKToKCQkJCQluYW1hLHBlbmdpa3V0LG1lbmdpa3V0LHBvc3Rpbmdhbj1zZWxmLkFQSWluZm8odXNlcikKCQkJCQljb29raWUgPSAiOyIuam9pbihba2V5KyI9Iit2YWx1ZS5yZXBsYWNlKCciJywnJykgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpXSkKCQkJCQlub21vciwgdGFuZ2dhbCA9IHNlbGYuaW5nZm8oY29va2llKQoJCQkJCXRyZWUgPSBUcmVlKCIiKQoJCQkJCXRyZWUuYWRkKFBhbmVsLmZpdChmIntIMn17dXNlcn0ge1AyfXwge0gyfXtwd30iKSkKCQkJCQl0cmVlLmFkZChmIntQMn1Gb2xsb3dlcnMgOiB7SDJ9e3Blbmdpa3V0fSIpCgkJCQkJdHJlZS5hZGQoZiJ7UDJ9Rm9sbG93aW5nIDoge0gyfXttZW5naWt1dH0iKQoJCQkJCXRyZWUuYWRkKGYie1AyfU5vbW9yIEhQICA6IHtIMn17bm9tb3J9IikKCQkJCQl0cmVlLmFkZChmIntQMn1Qb3N0aW5nYW4gOiB7SDJ9e3Bvc3Rpbmdhbn0iKQoJCQkJCXRyZWUuYWRkKGYie1AyfVRhbmdnYWwgTGFoaXIgOiB7SDJ9e3RhbmdnYWx9IikuYWRkKGYie04yfXtjb29raWV9e1AyfVxuIikKCQkJCQlwcmludHModHJlZSkKCQkJCQlvcGVuKGYicmVzdWx0L3N1Y2Nlc3Mte2RheX0udHh0IiwiYSIpLndyaXRlKGYne3VzZXJ9fHtwd318e3Blbmdpa3V0fXx7bWVuZ2lrdXR9XG4nKQoJCQkJCXN1Y2Nlc3MuYXBwZW5kKHVzZXIpCgkJCQkJYnJlYWsKCgkJCQllbGlmICdocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2NoYWxsZW5nZS9hY3Rpb24vJyBpbiBzdHIoYnJheWVubm54ZCk6CgkJCQkJbmFtYSxwZW5naWt1dCxtZW5naWt1dCxwb3N0aW5nYW49c2VsZi5BUElpbmZvKHVzZXIpCgkJCQkJdHJlZSA9IFRyZWUoIiIpCgkJCQkJdHJlZS5hZGQoUGFuZWwuZml0KGYie0syfXt1c2VyfSB7UDJ9fCB7SzJ9e3B3fSIpKQoJCQkJCXRyZWUuYWRkKGYie1AyfUZvbGxvd2VycyA6IHtLMn17cGVuZ2lrdXR9IikKCQkJCQl0cmVlLmFkZChmIntQMn1Gb2xsb3dpbmcgOiB7SzJ9e21lbmdpa3V0fSIpCgkJCQkJdHJlZS5hZGQoZiJ7UDJ9UG9zdGluZ2FuIDoge0syfXtwb3N0aW5nYW59IikuYWRkKGYie0syfXtVU059XG4iKQoJCQkJCXByaW50cyh0cmVlKQoJCQkJCW9wZW4oZiJyZXN1bHQvY2hlY2twb2ludC17ZGF5fS50eHQiLCJhIikud3JpdGUoZid7dXNlcn18e3B3fXx7cGVuZ2lrdXR9fHttZW5naWt1dH1cbicpCgkJCQkJY2hlY2twb2ludC5hcHBlbmQodXNlcikKCQkJCQlicmVhawoJCQkJZWxpZiAiaXBfYmxvY2siIGluIHN0cihyZXNwb24udGV4dCk6CgkJCQkJcHJvZy51cGRhdGUoZGVzLGRlc2NyaXB0aW9uPWYie00yfVNwYW1JUHtQMn0ge2xvb3B9L3tsZW4oaW50ZXJuYWwpfSBPSy06e0gyfXtsZW4oc3VjY2Vzcyl9e1AyfSBDUC06e0syfXtsZW4oY2hlY2twb2ludCl9e1AyfSIpCgkJCQkJcHJvZy5hZHZhbmNlKGRlcykKCQkJCQl0aW1lLnNsZWVwKDEwKQoJCQkJCXNlbGYuY3JhY2tBUEkodXNlcixwYXMpCgkJCQllbHNlOgoJCQkJCWNvbnRpbnVlCgkJCWxvb3ArPTEKCQlleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgoJCQl0aW1lLnNsZWVwKDEwKQoJCQkKCQkJCiMtLS0tLS0tLS0tLS0tLS0tLS1bIE1FVE9ERSBBUEkgVjIgXS0tLS0tLS0tLS0tLS0tLS0tLS0jCglkZWYgbmV3KHNlbGYsdXNlcixwYXMpOgoJCWdsb2JhbCBsb29wLHN1Y2Nlc3MsY2hlY2twb2ludAoJCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkKCQl1YSA9IHJhbmRvbS5jaG9pY2UoVXNlckJyYXlDcmFjaykKCQlwcm9nLnVwZGF0ZShkZXMsZGVzY3JpcHRpb249ZiJ7SDJ9W0FKQVhde1AyfSB7bG9vcH0ve2xlbihpbnRlcm5hbCl9IE9LLTp7SDJ9e2xlbihzdWNjZXNzKX17UDJ9IENQLTp7SzJ9e2xlbihjaGVja3BvaW50KX17UDJ9IikKCQlwcm9nLmFkdmFuY2UoZGVzKQoJCXRyeToKCQkJZm9yIHB3IGluIHBhczoKCQkJCWJyYXllbm5ueGQ9cmFuZG9tLnJhbmRpbnQoMTAwMDAwMDAwMCwgOTk5OTk5OTk5OTkpCgkJCQl0cyA9IGNhbGVuZGFyLnRpbWVnbShjdXJyZW50X0dNVCkKCQkJCXByb3h5ID0geydodHRwJzogJ3NvY2tzNTovLycrcmFuZG9tLmNob2ljZShwcm94eHkpfQoJCQkJcCA9IHNlcy5nZXQoJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vd2ViL19fbWlkJykKCQkJCXNlcy5oZWFkZXJzLnVwZGF0ZSh7CiAgICAgICAgICAgICAgICAgICAgJ0hvc3QnOid3d3cuaW5zdGFncmFtLmNvbScsCiAgICAgICAgICAgICAgICAgICAgJ3gtaWctd3d3LWNsYWltJzonMCcsCiAgICAgICAgICAgICAgICAgICAgJ3gtaW5zdGFncmFtLWFqYXgnOic2NTQzYWRjYzZkMjknLAogICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAogICAgICAgICAgICAgICAgICAgICdhY2NlcHQnOicqLyonLAogICAgICAgICAgICAgICAgICAgICd4LXJlcXVlc3RlZC13aXRoJzonWE1MSHR0cFJlcXVlc3QnLAogICAgICAgICAgICAgICAgICAgICd4LWFzYmQtaWQnOicxOTgzODcnLAogICAgICAgICAgICAgICAgICAgICAndXNlci1hZ2VudCc6dWEsCiAgICAgICAgICAgICAgICAgICAgICd4LWNzcmZ0b2tlbic6cC5jb29raWVzWydjc3JmdG9rZW4nXSwKICAgICAgICAgICAgICAgICAgICAgJ3gtaWctYXBwLWlkJzonMTIxNzk4MTY0NDg3OTYyOCcsCiAgICAgICAgICAgICAgICAgICAgICdvcmlnaW4nOidodHRwczovL3d3dy5pbnN0YWdyYW0uY29tJywKICAgICAgICAgICAgICAgICAgICAgJ3NlYy1mZXRjaC1zaXRlJzonc2FtZS1vcmlnaW4nLAogICAgICAgICAgICAgICAgICAgICAnc2VjLWZldGNoLW1vZGUnOidjb3JzJywKICAgICAgICAgICAgICAgICAgICAgJ3NlYy1mZXRjaC1kZXN0JzonZW1wdHknLAogICAgICAgICAgICAgICAgICAgICAncmVmZXJlcic6J2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vYWNjb3VudHMvb25ldGFwLycsCiAgICAgICAgICAgICAgICAgICAgICdhY2NlcHQtbGFuZ3VhZ2UnOidpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyd9KSAgICAgICAgIAoJCQkJZGF0YSA9IHsKICAgICAgICAgICAiZW5jX3Bhc3N3b3JkIjogZiIjUFdEX0lOU1RBR1JBTV9CUk9XU0VSOjA6e3RzfTp7cHd9IiwKCQkJInVzZXJuYW1lIjogdXNlciwKCQkJInF1ZXJ5UGFyYW1zIjogInt9IiwKCQkJIm9wdEludG9PbmVUYXAiOiAnZmFsc2UnLAoJCQkic3RvcERlbGV0aW9uTm9uY2UiOiAiIiwKCQkJInRydXN0ZWREZXZpY2VSZWNvcmRzIjogInt9In0KCQkJCXJlc3Bvbj1zZXMucG9zdCgiaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LyIsIGRhdGE9ZGF0YSwgYWxsb3dfcmVkaXJlY3RzPVRydWUpCgkJCQlicmF5ZW5ubnhkPWpzb24ubG9hZHMocmVzcG9uLnRleHQpCgkJCQlpZiAndXNlcklkJyBpbiBzdHIoYnJheWVubm54ZCk6CgkJCQkJbmFtYSxwZW5naWt1dCxtZW5naWt1dCxwb3N0aW5nYW49c2VsZi5BUElpbmZvKHVzZXIpCgkJCQkJY29va2llID0gIjsiLmpvaW4oW2tleSsiPSIrdmFsdWUucmVwbGFjZSgnIicsJycpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKV0pCgkJCQkJbm9tb3IsIHRhbmdnYWwgPSBzZWxmLmluZ2ZvKGNvb2tpZSkKCQkJCQl0cmVlID0gVHJlZSgiIikKCQkJCQl0cmVlLmFkZChQYW5lbC5maXQoZiJ7SDJ9e3VzZXJ9IHtQMn18IHtIMn17cHd9IikpCgkJCQkJdHJlZS5hZGQoZiJ7UDJ9Rm9sbG93ZXJzIDoge0gyfXtwZW5naWt1dH0iKQoJCQkJCXRyZWUuYWRkKGYie1AyfUZvbGxvd2luZyA6IHtIMn17bWVuZ2lrdXR9IikKCQkJCQl0cmVlLmFkZChmIntQMn1Ob21vciBIUCAgOiB7SDJ9e25vbW9yfSIpCgkJCQkJdHJlZS5hZGQoZiJ7UDJ9UG9zdGluZ2FuIDoge0gyfXtwb3N0aW5nYW59IikKCQkJCQl0cmVlLmFkZChmIntQMn1UYW5nZ2FsIExhaGlyIDoge0gyfXt0YW5nZ2FsfSIpLmFkZChmIntOMn17Y29va2llfXtQMn1cbiIpCgkJCQkJcHJpbnRzKHRyZWUpCgkJCQkJb3BlbihmInJlc3VsdC9zdWNjZXNzLXtkYXl9LnR4dCIsImEiKS53cml0ZShmJ3t1c2VyfXx7cHd9fHtwZW5naWt1dH18e21lbmdpa3V0fVxuJykKCQkJCQlzdWNjZXNzLmFwcGVuZCh1c2VyKQoJCQkJCWJyZWFrCgoJCQkJZWxpZiAnaHJlZj0iaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9jaGFsbGVuZ2UvYWN0aW9uLycgaW4gc3RyKGJyYXllbm5ueGQpOgoJCQkJCW5hbWEscGVuZ2lrdXQsbWVuZ2lrdXQscG9zdGluZ2FuPXNlbGYuQVBJaW5mbyh1c2VyKQoJCQkJCXRyZWUgPSBUcmVlKCIiKQoJCQkJCXRyZWUuYWRkKFBhbmVsLmZpdChmIntLMn17dXNlcn0ge1AyfXwge0syfXtwd30iKSkKCQkJCQl0cmVlLmFkZChmIntQMn1Gb2xsb3dlcnMgOiB7SzJ9e3Blbmdpa3V0fSIpCgkJCQkJdHJlZS5hZGQoZiJ7UDJ9Rm9sbG93aW5nIDoge0syfXttZW5naWt1dH0iKQoJCQkJCXRyZWUuYWRkKGYie1AyfVBvc3RpbmdhbiA6IHtLMn17cG9zdGluZ2FufSIpLmFkZChmIntLMn17VVNOfVxuIikKCQkJCQlwcmludHModHJlZSkKCQkJCQlvcGVuKGYicmVzdWx0L2NoZWNrcG9pbnQte2RheX0udHh0IiwiYSIpLndyaXRlKGYne3VzZXJ9fHtwd318e3Blbmdpa3V0fXx7bWVuZ2lrdXR9XG4nKQoJCQkJCWNoZWNrcG9pbnQuYXBwZW5kKHVzZXIpCgkJCQkJYnJlYWsKCQkJCWVsaWYgImlwX2Jsb2NrIiBpbiBzdHIocmVzcG9uLnRleHQpOgoJCQkJCXByb2cudXBkYXRlKGRlcyxkZXNjcmlwdGlvbj1mIntNMn1TcGFtSVB7UDJ9IHtsb29wfS97bGVuKGludGVybmFsKX0gT0stOntIMn17bGVuKHN1Y2Nlc3MpfXtQMn0gQ1AtOntLMn17bGVuKGNoZWNrcG9pbnQpfXtQMn0iKQoJCQkJCXByb2cuYWR2YW5jZShkZXMpCgkJCQkJdGltZS5zbGVlcCgxMCkKCQkJCQlzZWxmLm5ldyh1c2VyLHBhcykKCQkJCWVsc2U6CgkJCQkJY29udGludWUKCQkJbG9vcCs9MQoJCWV4Y2VwdCByZXF1ZXN0cy5Db25uZWN0aW9uRXJyb3I6CgkJCXRpbWUuc2xlZXAoMTApCgkJCQoJZGVmIGNoZWNrQVBJKHNlbGYsdXNyLHB3ZCk6CgkJdHJ5OgoJCQl0cyA9IGNhbGVuZGFyLnRpbWVnbShjdXJyZW50X0dNVCkKCQkJc2VzPXJlcXVlc3RzLlNlc3Npb24oKQoJCQlwcm94eSA9IHsnaHR0cCc6ICdzb2NrczU6Ly8nK3JhbmRvbS5jaG9pY2UocHJveF94eWFhKX0KCQkJdWFfYnJheWVuID0gVVNOCgkJCXRva2VuPXMuZ2V0KCJodHRwczovL2kuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbiIsaGVhZGVycz17InVzZXItYWdlbnQiOnNlbGYudWFfaWdlaCgpfSkuY29udGVudAoJCQljcmZfdG9rZW49cmUuZmluZGFsbChyIlwiY3NyZl90b2tlblwiXDpcIiguKj8pXCIiLCBzdHIodG9rZW4pKVswXQoJCQlzLmhlYWRlcnMudXBkYXRlKHsKCQkJCSdhdXRob3JpdHknOiAnd3d3Lmluc3RhZ3JhbS5jb20nLAoJCQkJJ2Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsCgkJCQknc2VjLWNoLXVhJzogJyI7Tm90IEEgQnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSI5NCInLAoJCQkJJ3gtaWctYXBwLWlkJzogJzEyMTc5ODE2NDQ4Nzk2MjgnLAogICAgICAgICAgICAgICAgJ3gtaWctd3d3LWNsYWltJzogJ2htYWMuQVIzamxTdGRjWXNwdzg4bkxXdlZuQ0RkaVotS1B2cnVfVGFzb1NKbHpHei1pWFYyJywKICAgICAgICAgICAgICAgICAneC1yZXF1ZXN0ZWQtd2l0aCc6ICdYTUxIdHRwUmVxdWVzdCcsCgkJCQknc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsCgkJCQkneC1pbnN0YWdyYW0tYWpheCc6ICdjNjQxMmYxYjFiN2InLAoJCQkJJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAoJCQkJJ2FjY2VwdCc6ICcqLyonLAoJCQkJJ3gtY3NyZnRva2VuJzogY3JmX3Rva2VuLAoJCQkJJ3VzZXItYWdlbnQnOiB1YV9icmF5ZW4sCgkJCQkneC1hc2JkLWlkJzogJzE5ODM4NycsCgkJCQknc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsCgkJCQknb3JpZ2luJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20nLAoJCQkJJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywKCQkJCSdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKCQkJCSdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsCgkJCQkncmVmZXJlcic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLycsCgkJCQknYWNjZXB0LWxhbmd1YWdlJzogJ2VuLUdCLGVuLVVTO3E9MC45LGVuO3E9MC44JwoJCQl9KQoKCQkJcGFyYW09ewoJCQkJImVuY19wYXNzd29yZCI6IGYiI1BXRF9JTlNUQUdSQU1fQlJPV1NFUjowOnt0c306e3B3ZH0iLAoJCQkJCSJ1c2VybmFtZSI6IHVzciwKCQkJCQkib3B0SW50b09uZVRhcCI6IEZhbHNlLAoJCQkJCSJxdWVyeVBhcmFtcyI6ICJ7fSIsCgkJCQkJInN0b3BEZWxldGlvbk5vbmNlIjogIiIsCgkJCQkJInRydXN0ZWREZXZpY2VSZWNvcmRzIjogInt9IgoJCQl9CgkJCXg9cy5wb3N0KCJodHRwczovL2kuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LyIsZGF0YT1wYXJhbSxwcm94aWVzPXByb3h5KQoJCQl4X2phc29uPWpzb24ubG9hZHMoeC50ZXh0KQoJCQlpZiAidXNlcklkIiBpbiB4LnRleHQ6CgkJCQluYW1hLHBlbmdpa3V0LG1lbmdpa3V0LHBvc3Rpbmdhbj1zZWxmLkFQSWluZm8odXNyKQoJCQkJcHJpbnQoZiIiIgogICAgw6LigJ3FkyB7Q1l9IFNVS1NFU3tOfQoJw6LigJ3FkyB7Q1l9e3Vzcn18e3B3ZH0KCcOi4oCdxZMgRm9sbG93ZXJzIHtDWX17cGVuZ2lrdXR9CgnDouKAncWTIEZvbGxvd2luZyB7Q1l9e21lbmdpa3V0fQoJw6LigJ3FkyBQb3N0cwoJIMOiy4bFuCBqdW1sYWggUG9zdCB7Q1l9e3Bvc3Rpbmdhbn0iIiIpCgkJCWVsaWYgJ2NoZWNrcG9pbnRfdXJsJyBpbiB4LnRleHQ6CgkJCQluYW1hLHBlbmdpa3V0LG1lbmdpa3V0LHBvc3Rpbmdhbj1zZWxmLkFQSWluZm8odXNyKQoJCQkJcHJpbnQoZiIiIgogICAgw6LigJ3FkyB7S31HQUdBTHtOfQoJw6LigJ3FkyB7S317dXNyfXx7cHdkfQoJw6LigJ3FkyBGb2xsb3dlcnMge0t9e3Blbmdpa3V0fQoJw6LigJ3FkyBGb2xsb3dpbmcge0t9e21lbmdpa3V0fQoJw6LigJ3FkyBQb3N0cwogICAgIMOiy4bFuCBqdW1sYWggUG9zdCB7S317cG9zdGluZ2FufSIiIikKCQkJZWxpZiAnUGxlYXNlIFdhaXQgQSBGZXcgTWludXRlcycgaW4gc3RyKHgudGV4dCk6CgkJCQlzeXMuc3Rkb3V0LndyaXRlKGYiXHIge1V9IXtDfV0ge1V9UGxlYXNlIFdhaXQgQSBGZXcgTWludXRlcyBTZWNvbmR7Q30iKTtzeXMuc3Rkb3V0LmZsdXNoKCk7c2xlZXAoMTApCgkJCQlzZWxmLmNoZWNrQVBJKHVzcixwd2QpCgkJZXhjZXB0OgoJCQlzZWxmLmNoZWNrQVBJKHVzcixwd2QpCgoJZGVmIG1lbnUoc2VsZik6CgkJc2VsZi5sb2dvKCkKCQljPWlucHV0KGYnIFvigKJdIFBpbGloIDogJykKCQlpZiBjPT0nJzoKCQkJcHJpbnRzKFBhbmVsKGYie1AyfVBpbGloIFlhbmcgQmVuZXIgQnJvbyBKYW5nYW4gS29zb25nICEiLHdpZHRoPTkwLHBhZGRpbmc9KDAsMTkpLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKTt0aW1lLnNsZWVwKDMpO2V4aXQoKQoJCWVsaWYgYyBpbiAoJzEnLCcwMScpOgoJCQllcnJvcigpCgoJCWVsaWYgYyBpbiAoJzInLCcwMicpOgoJCQltYXM9aW5wdXQoZicgW+KAol0gQXBha2FoIEFuZGEgSW5naW4gQ3JhY2sgTWFzYWwgWS90IDogJykKCQkJaWYgbWFzIGluIFsneScsJ1knXToKCQkJCW1hc2FsKHNlbGYpCgkJCWVsaWYgbWFzIGluIFsndCcsJ1QnXToKCQkJCW1hc3NhbChzZWxmKQoJCQllbGlmIG1hcyBpbiBbJyddOgoJCQkJcHJpbnQoIiBZL3QgQnJvIEphbmdhbiBLb3NvbmciKQoKCgkJZWxpZiBjIGluICgnMycsJzAzJyk6CgkJCW1hcz1pbnB1dChmJyBb4oCiXSBBcGFrYWggQW5kYSBJbmdpbiBDcmFjayBNYXNhbCBZL3QgOiAnKQoJCQlpZiBtYXMgaW4gWyd5JywnWSddOgoJCQkJbWVuZ2koc2VsZikKCQkJZWxpZiBtYXMgaW4gWyd0JywnVCddOgoJCQkJbWVuZyhzZWxmKQoJCQllbGlmIG1hcyBpbiBbJyddOgoJCQkJcHJpbnQoIiBZL3QgQnJvIEphbmdhbiBLb3NvbmciKQoKCgkJZWxpZiBjIGluICgnNCcsJzA0Jyk6CgkJCWVycm9yKCkKCQkJCgkJZWxpZiBjIGluICgnNScsJzA1Jyk6CgkJCXByaW50KCcnKQoJCQlmb3IgaSBpbiBvcy5saXN0ZGlyKCdyZXN1bHQnKToKCQkJCXByaW50cyhQYW5lbChmIntQMn1IYXNpbCBDcmFjayA6IHtjb2xvcl9yaWNofXtpfSIsd2lkdGg9OTAsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJCWM9aW5wdXQoZicgW+KAol0gTWFzdWthbiBOYW1hIEZpbGUgOiAnKQoJCQlnPW9wZW4oInJlc3VsdC8lcyIlKGMpKS5yZWFkKCkuc3BsaXRsaW5lcygpCgkJCXh4PWMuc3BsaXQoIi0iKQoJCQl4Yz14eFswXQoJCQlwcmludChmJyBUb3RhbCBSZXN1bHRzIDoge0h9e2xlbihnKX17Q30nKQoJCQlmb3IgcyBpbiBnOgoJCQkJdXNyPXMuc3BsaXQoInwiKVswXQoJCQkJcHdkPXMuc3BsaXQoInwiKVsxXQoJCQkJZm9sPXMuc3BsaXQoInwiKVsyXQoJCQkJZnVsPXMuc3BsaXQoInwiKVszXQoJCQkJaWYgeGM9PSJjaGVja3BvaW50IjoKCQkJCQlwcmludChmIiIiCiBb4oCiXSBDaGVja3BvaW50IDoKIFvigKJdIFVzZXJuYW1lOiB7dXNyfQogW+KAol0gUGFzc3dvcmQ6IHtwd2R9CiBb4oCiXSBGb2xsb3dlcnM6IHtmb2x9CiBb4oCiXSBGb2xsb3dpbmc6IHtmdWx9CgkJCQkJIiIiKTtzbGVlcCgwLjA1KQoJCQkJZWxzZToKCQkJCQlwcmludChmIiIiCiBb4oCiXSBMaXZlIDoKIFvigKJdIFVzZXJuYW1lIDoge3Vzcn0KIFvigKJdIFBhc3N3b3JkIDoge3B3ZH0KIFvigKJdIFBlbmdpa3V0IDoge2ZvbH0KIFvigKJdIE1lbmdpa3V0aSA6IHtmdWx9CgkJCQkJIiIiKTtzbGVlcCgwLjA1KQoJCWVsaWYgYyBpbiAoJzYnLCcwNicpOgoJCQllcnJvcigpCgkJZWxpZiBjIGluICgnMCcsJzAwJyk6CgkJCXNlbGYuRXhpdCgpIAoJCgoJCWVsc2U6CgkJCWV4aXQoKQoKIy0tLS0tLS0tLS1bIENSQUNLIE1BU1NBTCBNRU5HSUtVVEkgXS0tLS0tLS0tLS0gIwpkZWYgbWVuZ2koc2VsZik6CgkJCXRyeToKCQkJCW1lbnVkdW1wLmFwcGVuZCgnbWVuZ2lrdXRpJykKCQkJCW09aW50KGlucHV0KGYnIFvigKJdIEp1bWxhaCBUYXJnZXQgOiB7Tn0nKSkKCQkJZXhjZXB0Om09MQoJCQlwcmludHMoUGFuZWwoZiJ7UDJ9UGFzdGlrYW4gVXNlcm5hbWUgVGFyZ2V0IFlhbmcgRGkgUGlsaWggQmVyc2lmYXQgUHVibGlrIERhbiBKYW5nYW4gUHJpdmF0ZSIsd2lkdGg9OTAsc3R5bGU9ZiJib2xkIHdoaXRlIikpCgkJCWZvciB0IGluIHJhbmdlKG0pOgoJCQkJdCArPTEKCQkJCW5hbWE9aW5wdXQoZicgW+KAol0gVXNlcm5hbWUgVGFyZ2V0IDoge0N9JykKCQkJCWlkPXNlbGYuaWRBUEkoc2VsZi5jb29raWUsbmFtYSkKCQkJCWluZm89c2VsZi5pZm9BUEkoc2VsZi5jb29raWUsJ2h0dHBzOi8vaS5pbnN0YWdyYW0uY29tL2FwaS92MS9mcmllbmRzaGlwcy8lcy9mb2xsb3dpbmcvP2NvdW50PTEwMDAwMCcsaWQpCgkJCXNlbGYucGFzc3dvcmRBUEkoaW5mbykKCiMtLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0sgTUVOR0lLVVRJIF0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIG1lbmcoc2VsZik6Cgl0cnk6CgkJbWVudWR1bXAuYXBwZW5kKCdtZW5naWt1dGknKQoJCXByaW50cyhQYW5lbChmIntQMn1QYXN0aWthbiBVc2VybmFtZSBUYXJnZXQgWWFuZyBEaSBQaWxpaCBCZXJzaWZhdCBQdWJsaWsgRGFuIEphbmdhbiBQcml2YXRlIix3aWR0aD05MCxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCQltPWlucHV0KGYnIFvigKJdIFVzZXJuYW1lIFRhcmdldCA6ICcpCgkJcHJpbnQoZiIgW+KAol0gV2FpdCBDb2xsZWN0IFVzZXJuYW1lIHttfSIpCgkJaWQ9c2VsZi5pZEFQSShzZWxmLmNvb2tpZSxtKQoJCWluZm89c2VsZi5pZm9BUEkoc2VsZi5jb29raWUsJ2h0dHBzOi8vaS5pbnN0YWdyYW0uY29tL2FwaS92MS9mcmllbmRzaGlwcy8lcy9mb2xsb3dpbmcvP2NvdW50PTEwMDAwMCcsaWQpCgkJc2VsZi5wYXNzd29yZEFQSShpbmZvKQoJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCXByaW50KGUpCgojLS0tLS0tLS0tLS0tLS0tLS1bIENSQUNLIE1BU1NBTCBQRU5HSUtVVCBdLS0tLS0tLS0tLS0tLS0tLS0gIwpkZWYgbWFzYWwoc2VsZik6CgkJCXRyeToKCQkJCW1lbnVkdW1wLmFwcGVuZCgncGVuZ2lrdXQnKQoJCQkJbT1pbnQoaW5wdXQoZicgW+KAol0gSnVtbGFoIFRhcmdldCA6IHtOfScpKQoJCQlleGNlcHQ6bT0xCgkJCXByaW50cyhQYW5lbChmIntQMn1QYXN0aWthbiBVc2VybmFtZSBUYXJnZXQgWWFuZyBEaSBQaWxpaCBCZXJzaWZhdCBQdWJsaWsgRGFuIEphbmdhbiBQcml2YXRlIix3aWR0aD05MCxzdHlsZT1mImJvbGQgd2hpdGUiKSkKCQkJZm9yIHQgaW4gcmFuZ2UobSk6CgkJCQl0ICs9MQoJCQkJbmFtYT1pbnB1dChmJyBb4oCiXSBVc2VybmFtZSBUYXJnZXQgOiB7Q30nKQoJCQkJaWQ9c2VsZi5pZEFQSShzZWxmLmNvb2tpZSxuYW1hKQoJCQkJaW5mbz1zZWxmLmluZm9BUEkoc2VsZi5jb29raWUsJ2h0dHBzOi8vaS5pbnN0YWdyYW0uY29tL2FwaS92MS9mcmllbmRzaGlwcy8lcy9mb2xsb3dlcnMvP2NvdW50PTEwMDAwMCcsaWQpCgkJCXNlbGYucGFzc3dvcmRBUEkoaW5mbykKCiMtLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0sgUEVOR0lLVVQgXS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgbWFzc2FsKHNlbGYpOgoJCQltZW51ZHVtcC5hcHBlbmQoJ3Blbmdpa3V0JykKCQkJcHJpbnRzKFBhbmVsKGYie1AyfVBhc3Rpa2FuIFVzZXJuYW1lIFRhcmdldCBZYW5nIERpIFBpbGloIEJlcnNpZmF0IFB1YmxpayBEYW4gSmFuZ2FuIFByaXZhdGUiLHdpZHRoPTkwLHN0eWxlPWYiYm9sZCB3aGl0ZSIpKQoJCQltPWlucHV0KGYnIFvigKJdIFVzZXJuYW1lIFRhcmdldCA6IHtDfScpCgkJCXByaW50KGYiIFvigKJdIFdhaXQgQ29sbGVjdCBVc2VybmFtZSB7bX0iKQoJCQlpZD1zZWxmLmlkQVBJKHNlbGYuY29va2llLG0pCgkJCWluZm89c2VsZi5pbmZvQVBJKHNlbGYuY29va2llLCdodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvZnJpZW5kc2hpcHMvJXMvZm9sbG93ZXJzLz9jb3VudD0xMDAwMDAnLGlkKQoJCQlzZWxmLnBhc3N3b3JkQVBJKGluZm8pCgojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIFNZU1RFTS1DT05UUk9MIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKaWYgX19uYW1lX189PSdfX21haW5fXyc6Cgl0cnk6b3Muc3lzdGVtKCdnaXQgcHVsbCcpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCdPSycpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCdDUCcpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLm1rZGlyKCdkYXRhJykKCWV4Y2VwdDpwYXNzCgl0cnk6b3Muc3lzdGVtKCdyZXN1bHQnKQoJZXhjZXB0OnBhc3MKCXRyeTpvcy5ta2RpcignL3NkY2FyZC9EVU1QLUZJTEUnKQoJZXhjZXB0OnBhc3MKCXRyeTpvcy5zeXN0ZW0oJ3RvdWNoIC5wcm94LnR4dCcpCglleGNlcHQ6cGFzcwoJdHJ5Om9zLnN5c3RlbSgnY2xlYXInKQoJZXhjZXB0OnBhc3MKCWxvZ2luKCkK'))